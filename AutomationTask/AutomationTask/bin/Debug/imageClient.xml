<?xml version="1.0"?>
<doc>
    <assembly>
        <name>imageClient</name>
    </assembly>
    <members>
        <member name="T:experitestClient.ClientFactory">
            <summary>
            This class is a factory for creating an object of the class Client.
            This is due the reason that the recommended (meaning: non-deprecated)
            constructor for the class Client recieved arguments, and COM created objects
            cannot be instantiated using arguments
            </summary>
        </member>
        <member name="M:experitestClient.ClientFactory.CreateClient(System.String,System.Int32,System.Boolean)">
            <summary>
            A factory method for new VBClient.
            Constructs a client with the given host:port.
            </summary> 
        </member>
        <member name="M:experitestClient.ClientFactory.CreateVBClient(System.String,System.Int32,System.Boolean)">
            <summary>
            A factory method for new VBClient.
            Constructs a client with the given host:port.
            This method allows constructing a VBClient with non-default constructors
            using CreateObject("Experitest.ClientFactory").CreateVBClient(...).
            </summary>
        </member>
        <member name="T:experitestClient.Client">
            <summary>
            The Class Client. The client is used to control the agent that is part of the SeeTest.
            The client and the agent can be on the same machine or on different machines. It uses
            XML-RPC calls to communicate with the agent.
            </summary>
        </member>
        <member name="M:experitestClient.IClient.AddDevice(System.String,System.String)">
            <summary>
            Add / reserve device. return the name that should be used to access the device.
            </summary>
            <param name="serialNumber">the device serial number / UDID</param>
            <param name="deviceName">the device suggested name (will add an index if the name exists)</param>
        </member>
        <member name="M:experitestClient.IClient.ApplicationClearData(System.String)">
            <summary>
            Clear application data
            </summary>
            <param name="packageName">The application's package name</param>
        </member>
        <member name="M:experitestClient.IClient.ApplicationClose(System.String)">
            <summary>
            Close application
            </summary>
            <param name="packageName">The application's package name</param>
            <returns>successful close</returns>
        </member>
        <member name="M:experitestClient.IClient.Capture">
            <summary>
            Capture the current screen and add it to the report.
            </summary>
            <returns>the path of the captured image file.</returns>
        </member>
        <member name="M:experitestClient.IClient.Capture(System.String)">
            <summary>
            Capture the current screen and add it to the report with the given line.
            </summary>
            <param name="line">the line to be used in the report</param>
            <returns>the path of the captured image file.</returns>
        </member>
        <member name="M:experitestClient.IClient.CaptureElement(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create new element from image in given device coordinates, with given name and similarity percentage.
            </summary>
            <param name="name">New element's name</param>
            <param name="x">Image origin x coordinate</param>
            <param name="y">Image origin y coordinate</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <param name="similarity">the similarity between pictures</param>
        </member>
        <member name="M:experitestClient.IClient.ClearAllSms">
            <summary>
            Clear all SMS on a device.
            </summary>
        </member>
        <member name="M:experitestClient.IClient.ClearDeviceLog">
            <summary>
            Clear device log
            </summary>
        </member>
        <member name="M:experitestClient.IClient.ClearLocation">
            <summary>
            Clears the mock location. Currently supported only on android
            </summary>
        </member>
        <member name="M:experitestClient.IClient.Click(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Click an element.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
            <param name="clickCount">Number of Clicks</param>
        </member>
        <member name="M:experitestClient.IClient.Click(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Click on or near to an element. The offset is specified by x, y.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
            <param name="clickCount">Number of Clicks</param>
            <param name="x">Horizontal Offset from Element</param>
            <param name="y">Vertical Offset from Element</param>
        </member>
        <member name="M:experitestClient.IClient.ClickCoordinate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Click in window X,Y coordinates related to the device screen.<br/>
            
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="clickCount">Number of clicks</param>
        </member>
        <member name="M:experitestClient.IClient.ClickIn(System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Search for an element and click on an element near him. The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="searchElement">Search Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="clickElement">Click Element</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.IClient.ClickIn(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Search for an element and click on an element near him. The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="searchElement">Search Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="clickElementZone">Click Element Zone</param>
            <param name="clickElement">Click Element</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.IClient.ClickIn(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Search for an element and click on an element near him. The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="searchElement">Search Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="clickElementZone">Click Element Zone</param>
            <param name="clickElement">Click Element</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
            <param name="clickCount">Number of Clicks</param>
        </member>
        <member name="M:experitestClient.IClient.ClickIn(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Search for an element and click on an element near him. The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="searchElement">Search Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="clickElementZone">Click Element Zone</param>
            <param name="clickElement">Click Element</param>
            <param name="clickElementIndex">Click Element Index</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
            <param name="clickCount">Number of Clicks</param>
        </member>
        <member name="M:experitestClient.IClient.ClickTableCell(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Clicking on table cell by its header element and row element.
            </summary>
            <param name="zone">Select zone</param>
            <param name="headerElement">Select table header element</param>
            <param name="headerIndex">Header element index</param>
            <param name="rowElement">Select table row element</param>
            <param name="rowIndex">Row element index</param>
        </member>
        <member name="M:experitestClient.IClient.CloseDevice">
            <summary>
            Close connection to the device.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.IClient.CloseDeviceReflection">
            <summary>
            Hides the current device screen. If the current device screen is not open, this command does nothing.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.IClient.CloseKeyboard">
            <summary>
            Close device keyboard
            </summary>
        </member>
        <member name="M:experitestClient.IClient.CollectSupportData(System.String,System.String,System.String,System.String,System.String,System.String)">
            <param name="zipDestination">The path in  which the zip will be saved. If empty, a default path will be used</param>
            <param name="applicationPath">An absolute path to the application file on the PC</param>
            <param name="device">Device name</param>
            <param name="scenario">Description of your scenario</param>
            <param name="expectedResult">The result you expected</param>
            <param name="actualResult">The result you got after running the scenario</param>
            <returns>returns the collectSupportData folder path</returns>
        </member>
        <member name="M:experitestClient.IClient.CollectSupportData(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <param name="zipDestination">The path in  which the zip will be saved. If empty, a default path will be used</param>
            <param name="applicationPath">An absolute path to the application file on the PC</param>
            <param name="device">Device name</param>
            <param name="scenario">Description of your scenario</param>
            <param name="expectedResult">The result you expected</param>
            <param name="actualResult">The result you got after running the scenario</param>
            <param name="withCloudData">Include cloud data in the support folder</param>
            <param name="onlyLatestLogs">Include only latest logs in the support folder</param>
            <returns>returns the collectSupportData folder path</returns>
        </member>
        <member name="M:experitestClient.IClient.DeviceAction(System.String)">
            <summary>
            Execute any of the following device actions:<br/>
            Home, Back, Power, Landscape, Portrait, Change Orientation, Menu, Unlock, Paste, Volume Up, Volume Down, Recent Apps.<br/>
            
            </summary>
            <param name="action">Name of action to perform</param>
        </member>
        <member name="M:experitestClient.IClient.Drag(System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Drag an element in a specified zone.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element to drag</param>
            <param name="index">Element Order (=the number of times the element appears more and above the first time)</param>
            <param name="xOffset">X drag offset</param>
            <param name="yOffset">Y drag offset</param>
        </member>
        <member name="M:experitestClient.IClient.DragCoordinates(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Drag base on coordinates
            </summary>
            <param name="x1">First point X</param>
            <param name="y1">First point Y</param>
            <param name="x2">Second point X</param>
            <param name="y2">Second point Y</param>
        </member>
        <member name="M:experitestClient.IClient.DragCoordinates(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Drag base on coordinates
            </summary>
            <param name="x1">First point X</param>
            <param name="y1">First point Y</param>
            <param name="x2">Second point X</param>
            <param name="y2">Second point Y</param>
            <param name="time">Drag time (ms)</param>
        </member>
        <member name="M:experitestClient.IClient.DragDrop(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Drag an element in a specified zone and drop it at a second element<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="dragElement">Drag element</param>
            <param name="dragIndex">Drag element index</param>
            <param name="dropElement">Drop element</param>
            <param name="dropIndex">Drop element index</param>
        </member>
        <member name="M:experitestClient.IClient.Drop">
            <summary>
            Drop all project information.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.IClient.ElementGetProperty(System.String,System.String,System.Int32,System.String)">
            <summary>
            Get element property
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="property">Property</param>
        </member>
        <member name="M:experitestClient.IClient.ElementGetTableRowsCount(System.String,System.Int32,System.Boolean)">
            <summary>
            Get table total or visible rows count
            </summary>
            <param name="tableLocator">Table Locator</param>
            <param name="tableIndex">Table Locator Index</param>
            <param name="visible">Only visible</param>
        </member>
        <member name="M:experitestClient.IClient.ElementGetTableRowsCount(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Get table total or visible rows count
            </summary>
            <param name="zone">Select Zone</param>
            <param name="tableLocator">Select Table Locator</param>
            <param name="tableIndex">Table Locator Index</param>
            <param name="visible">Only visible</param>
        </member>
        <member name="M:experitestClient.IClient.ElementGetTableValue(System.String,System.Int32,System.String)">
            <summary>
            Get table cell value
            </summary>
            <param name="rowLocator">Row Locator</param>
            <param name="rowLocatorIndex">Row Locator Index</param>
            <param name="columnLocator">Column Locator</param>
        </member>
        <member name="M:experitestClient.IClient.ElementGetText(System.String,System.String,System.Int32)">
            <summary>
            Get text from element
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
        </member>
        <member name="M:experitestClient.IClient.ElementListPick(System.String,System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Select an element in a list (first make the element visible)
            </summary>
            <param name="listZone">Select List Zone</param>
            <param name="listLocator">List locator</param>
            <param name="elementZone">Select Element Zone</param>
            <param name="elementLocator">Element locator</param>
            <param name="index">Element index</param>
            <param name="click">If TRUE then click</param>
        </member>
        <member name="M:experitestClient.IClient.ElementListSelect(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Select an element in a list (first make the element visible)
            </summary>
            <param name="listLocator">List locator</param>
            <param name="elementLocator">Element locator</param>
            <param name="index">Element index</param>
            <param name="click">If TRUE then click</param>
        </member>
        <member name="M:experitestClient.IClient.ElementListVisible(System.String,System.String,System.Int32)">
            <summary>
            Make the target element visible
            </summary>
            <param name="listLocator">List locator</param>
            <param name="elementLocator">Element locator</param>
            <param name="index">Element index</param>
        </member>
        <member name="M:experitestClient.IClient.ElementScrollToTableRow(System.String,System.Int32,System.Int32)">
            <summary>
            Scroll table / list to the given row
            </summary>
            <param name="tableLocator">Table Locator</param>
            <param name="tableIndex">Table Locator Index</param>
            <param name="rowIndex">Row Index</param>
        </member>
        <member name="M:experitestClient.IClient.ElementScrollToTableRow(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Scroll table / list to the given row
            </summary>
            <param name="zone">Select Zone</param>
            <param name="tableLocator">Select Table Locator</param>
            <param name="tableIndex">Table Locator Index</param>
            <param name="rowIndex">Row Index</param>
        </member>
        <member name="M:experitestClient.IClient.ElementSendText(System.String,System.String,System.Int32,System.String)">
            <summary>
            Send text to an element
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="text">Text to Send</param>
        </member>
        <member name="M:experitestClient.IClient.ElementSetProperty(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Set element property
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="property">Property</param>
            <param name="value">The value to set</param>
        </member>
        <member name="M:experitestClient.IClient.ElementSwipe(System.String,System.String,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Swipe the screen in a given direction
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to swipe</param>
            <param name="offset">Swipe offset</param>
            <param name="time">Swipe overall time</param>
        </member>
        <member name="M:experitestClient.IClient.ElementSwipeWhileNotFound(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Swipe a component to search for an element or text.<br/>
            
            </summary>
            <param name="componentZone">Zone of the container element;</param>
            <param name="componentElement">The container element;</param>
            <param name="direction">Direction to swipe;</param>
            <param name="offset">Swipe offset;</param>
            <param name="swipeTime">Swipe operation time;</param>
            <param name="elementfindzone">Select Zone of the sought element;</param>
            <param name="elementtofind">Select element to find from the drop-down list OR (for OCR text identification) insert text into the empty box in the drop-down list;</param>
            <param name="elementtofindindex">The sought element's index (i.e., the number of times the element appears after the first appearance minus two). Index=0 refers to the first appearance of the element; Index=1 refers to the second appearance of the element, etc.</param>
            <param name="delay">Time to wait before sending a command (in milliseconds);</param>
            <param name="rounds">Maximum swipe rounds;</param>
            <param name="click">Click the found element if TRUE.</param>
        </member>
        <member name="M:experitestClient.IClient.EndTransaction(System.String)">
            <summary>
            End measuring transaction duration<br/>
            
            </summary>
            <param name="name">Name of the transaction</param>
        </member>
        <member name="M:experitestClient.IClient.Exit">
            <summary>
            Exit SeeTest.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.IClient.ExtractLanguageFiles(System.String,System.String,System.Boolean)">
            <summary>
            Extracts the language files of an application to the specified directory
            </summary>
            <param name="application">Language files source application</param>
            <param name="directoryPath">Directory's full path where to extract the language files</param>
            <param name="allowOverwrite">Whether to allow overwriting existing langauge files in directory</param>
        </member>
        <member name="M:experitestClient.IClient.FindElements(System.String,System.String,System.String,System.String)">
            <param name="zone">zone of the element (NATIVE / WEB)</param>
            <param name="parent">full xpath of parent (empty string / return of previous call)</param>
            <param name="by">currently only xpath supported</param>
            <param name="value">full xpath of the element to search</param>
        </member>
        <member name="M:experitestClient.IClient.Flick(System.String,System.Int32)">
            <summary>
            Flick the screen in a given direction
            </summary>
            <param name="direction">Direction to flick</param>
            <param name="offset">Flick offset</param>
        </member>
        <member name="M:experitestClient.IClient.FlickCoordinate(System.Int32,System.Int32,System.String)">
            <summary>
            Flick from a given point in a given direction
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="direction">Direction to flick</param>
        </member>
        <member name="M:experitestClient.IClient.FlickElement(System.String,System.String,System.Int32,System.String)">
            <summary>
            Flick the element in a given direction
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
            <param name="direction">Direction to flick</param>
        </member>
        <member name="M:experitestClient.IClient.ForceTouch(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Force touch on element and drag for distance.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
            <param name="duration">Duration</param>
            <param name="force">Force level in percent</param>
            <param name="dragDistanceX">Horizontal distance of drag from Element</param>
            <param name="dragDistanceY">Vertical distance of drag from Element</param>
            <param name="dragDuration">Drag Duration</param>
        </member>
        <member name="M:experitestClient.IClient.GenerateReport">
            <summary>
            Generates a SeeTest report.<br/>
            
            </summary>
            <returns>returns the report's folder path</returns>
        </member>
        <member name="M:experitestClient.IClient.GenerateReport(System.Boolean)">
            <summary>
            Generates a SeeTest report.<br/>
            
            </summary>
            <param name="releaseClient">If FALSE then device will not be released</param>
            <returns>returns the report's folder path</returns>
        </member>
        <member name="M:experitestClient.IClient.GenerateReport(System.Boolean,System.String)">
            <summary>
            Generates a SeeTest report and attach it to external tool entity.<br/>
            Suply a path to java properties file containning the data for the entity update.<br/>
            See documentation online for details.<br/>
            
            </summary>
            <param name="releaseClient">If FALSE then device will not be released</param>
            <param name="propFilePath">path to Java properties file</param>
            <returns>returns the report's folder path, or the created entity if exists</returns>
        </member>
        <member name="M:experitestClient.IClient.GetAllSms(System.Int32)">
            <summary>
            Get all  SMS or wait up to 'timeout' milliseconds.
            </summary>
            <param name="timeout">Wait timeout</param>
        </member>
        <member name="M:experitestClient.IClient.GetAllValues(System.String,System.String,System.String)">
            <summary>
            Get all the values of a property in a given element. Note: Supported properties are available on Object spy. 
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="property">Property</param>
        </member>
        <member name="M:experitestClient.IClient.GetAllZonesWithElement(System.String)">
            <summary>
            Get all the zones names that has an element with the given name.
            </summary>
            <param name="element">the element name to search for</param>
            <returns>comma delimited string with the zones names</returns>
        </member>
        <member name="M:experitestClient.IClient.GetAvailableAgentPort">
            <summary>
            Get available Agent Port.<br/>
            Get a port number where a SeeTest agent listens.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.IClient.GetAvailableAgentPort(System.String)">
            <summary>
            Get available Agent Port.<br/>
            Get a port number of a SeeTest agent supporting (licensed to) the given<br/>
            device type.<br/>
            
            </summary>
            <param name="featureName">A device type that is supported by the requested agent. One of ANDROID, IPHONE, BLACKBERRY or WINDOWS_PHONE.</param>
        </member>
        <member name="M:experitestClient.IClient.GetConnectedDevices">
            <summary>
            Get connected devices.
            </summary>
        </member>
        <member name="M:experitestClient.IClient.GetCoordinateColor(System.Int32,System.Int32)">
            <summary>
            Returns an integer representation in the RGB color model for coordinate (x,y) 
            </summary>
            <param name="x">the X coordinate of the target pixel</param>
            <param name="y">the Y coordinate of the target pixel</param>
        </member>
        <member name="M:experitestClient.IClient.GetCounter(System.String)">
            <summary>
            Get monitor counter value
            </summary>
            <param name="counterName">Counter name (cpu, memory...)</param>
        </member>
        <member name="M:experitestClient.IClient.GetCurrentApplicationName">
            <summary>
            Get the name of application that is running in the foreground of the device
            </summary>
        </member>
        <member name="M:experitestClient.IClient.GetDefaultTimeout">
            <summary>
            Gets the default timeout.
            </summary>
            <returns>the default timeout</returns>
        </member>
        <member name="M:experitestClient.IClient.GetDeviceLog">
            <summary>
            Download device log to reports directory
            </summary>
            <returns>path to the file that was downloaded</returns>
        </member>
        <member name="M:experitestClient.IClient.GetDeviceProperty(System.String)">
            <summary>
                        Get device property value for the given key.<br/>
                    
            </summary>
            <param name="key">device_property</param>
            <returns>The property value</returns>
        </member>
        <member name="M:experitestClient.IClient.GetDevicesInformation">
            <summary>
            Get an XML formated string containing all the devices information
            </summary>
        </member>
        <member name="M:experitestClient.IClient.GetElementCount(System.String,System.String)">
            <summary>
            Count the number of times an element is been found in the current screen.
            </summary>
            <param name="zone">the element zone</param>
            <param name="element">the element name</param>
            <returns>the number of times the elment was identified</returns>
        </member>
        <member name="M:experitestClient.IClient.GetElementCountIn(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Search for an element and count the number of times an element is found near him.The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zoneName">Select Zone</param>
            <param name="elementSearch">Element Search</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="elementCountZone">Select Zone</param>
            <param name="elementCount">Element to count</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.IClient.GetInstalledApplications">
            <summary>
            Get a string containing all installed application on the device
            </summary>
        </member>
        <member name="M:experitestClient.IClient.GetLastSMS(System.Int32)">
            <summary>
            Get last received SMS or wait up to 'timeout' milliseconds to receive one.
            </summary>
            <param name="timeout">Wait timeout</param>
        </member>
        <member name="M:experitestClient.IClient.GetMonitorsData(System.String)">
            <summary>
            Returns a CSV format of the running monitors (CPU/Memomy) for all<br/>
                  devices<br/>
                
            </summary>
            <param name="cSVfilepath">If set will save the CSV in the given location (should be absolute path), if not set will use a default location.</param>
        </member>
        <member name="M:experitestClient.IClient.GetPickerValues(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Get all values from picker, works only on iOS
            </summary>
            <param name="zone">Select Zone</param>
            <param name="pickerElement">Select Picker Element</param>
            <param name="index">Picker index</param>
            <param name="wheelIndex">Wheel index at picker component</param>
        </member>
        <member name="M:experitestClient.IClient.GetPosition(System.String,System.String)">
            <summary>
            Gets position an position. The position is absolute.<br/>
            
            </summary>
            <param name="zone">the element zone</param>
            <param name="element">Select Element to Get Position For</param>
            <returns>the comma delimited string with the X,Y of the element coordination.</returns>
        </member>
        <member name="M:experitestClient.IClient.GetPositionWindowRelative(System.String,System.String)">
            <summary>
            Get the element position relative to the window (and not the screen absolute coordinates)
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element to Get Position For</param>
            <returns>the comma delimited string with the X,Y of the element coordination.</returns>
        </member>
        <member name="M:experitestClient.IClient.GetProperty(System.String)">
            <summary>
            Get SeeTest's property value for the given key (in %appdata%\seetest\app.properties file).<br/>
            
            </summary>
            <param name="property">The property key.</param>
            <returns>the property value</returns>
        </member>
        <member name="M:experitestClient.IClient.GetSimCard">
            <summary>
            Get sim-card name assigned to the currently used device
            </summary>
        </member>
        <member name="M:experitestClient.IClient.GetSimCards(System.Boolean)">
            <summary>
            Get list of sim-card names which are either ready to use or already assigned (depeand on the argument) to the currently used device
            </summary>
            <param name="readyToUse">If TRUE return all available sim cards which are ready to use. If FALSE return all sim cards assigned for the device</param>
        </member>
        <member name="M:experitestClient.IClient.GetTableCellText(System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get text content of table cell by its header element and row element.
            </summary>
            <param name="zone">Select zone</param>
            <param name="headerElement">Select table header element</param>
            <param name="headerIndex">Header element index</param>
            <param name="rowElement">Select table row element</param>
            <param name="rowIndex">Row element index</param>
            <param name="width">Width of the search</param>
            <param name="height">Height of the search</param>
        </member>
        <member name="M:experitestClient.IClient.GetText(System.String)">
            <summary>
            Gets the text that appears in a specified zone.<br/>
            
            </summary>
            <param name="zone">Select the Zone to Get Text From, 'TEXT' and 'NATIVE' can be used as well.</param>
            <returns>the text</returns>
        </member>
        <member name="M:experitestClient.IClient.GetTextIn(System.String,System.String,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Get a text in a specified area indicate by an element, direction, width and height.<br/>
            The direction can be UP, DOWN, LEFT and RIGHT.<br/>
            Use this method to get the text found in an area related to a given element.<br/>
            When using zone NATIVE, only leafs elements will be searched in order to prevent multiple<br/>
            occurrences of the same text (containers can include the sub elements text too).<br/>
            
            </summary>
            <param name="zone">Anchor Zone</param>
            <param name="element">Anchor Element</param>
            <param name="index">Anchor Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.IClient.GetTextIn(System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Get a text in a specified area indicate by an element,direction, width and height. The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="textZone">The zone to extract the text from</param>
            <param name="direction">Direction to analyze</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.IClient.GetTextIn(System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get the text in a specific area relative to an element, index, direction, width and height. Direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="textZone">The zone to extract the text from</param>
            <param name="direction">Direction to analyze</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
            <param name="xOffset">identification rectangle x offset</param>
            <param name="yOffset">identification rectangle y offset</param>
        </member>
        <member name="M:experitestClient.IClient.GetVisualDump(System.String)">
            <summary>
            Get visual dump
            </summary>
            <param name="type">Set the dump type</param>
        </member>
        <member name="M:experitestClient.IClient.HybridClearCache(System.Boolean,System.Boolean)">
            <summary>
            Clear browser cookies and/or cache
            </summary>
            <param name="clearCookies">If true cookies will be cleared</param>
            <param name="clearCache">If true cache will be cleared</param>
        </member>
        <member name="M:experitestClient.IClient.HybridGetHtml(System.String,System.Int32)">
            <summary>
            Get HTML content from a webView element
            </summary>
            <param name="webViewLocator">WebView locator string like id=web or empty for the first WebView in page</param>
            <param name="index">Element index</param>
        </member>
        <member name="M:experitestClient.IClient.HybridRunJavascript(System.String,System.Int32,System.String)">
            <summary>
            Run Javascript in a WebView.
            </summary>
            <param name="webViewLocator">WebView locator string like id=web or empty for the first WebView in page</param>
            <param name="index">Element index</param>
            <param name="script">Javascript</param>
        </member>
        <member name="M:experitestClient.IClient.HybridSelect(System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Select an option from a select element in a WebView. Using the input method and value to identify the element
            </summary>
            <param name="webViewLocator">WebView locator string like id=web or empty for the first WebView in page</param>
            <param name="index">Element index</param>
            <param name="method">Identification method (css/id)</param>
            <param name="value">Identification value</param>
            <param name="select">Option to select</param>
        </member>
        <member name="M:experitestClient.IClient.HybridWaitForPageLoad(System.Int32)">
            <summary>
            Wait for web page to load
            </summary>
            <param name="timeout">Waiting Timeout in MiliSec</param>
        </member>
        <member name="M:experitestClient.IClient.Install(System.String,System.Boolean)">
            <summary>
            Install the application in the given path on the device
            </summary>
            <param name="path">can be an APK/IPA etc. absolute path or an activity name from the application manager.</param>
            <param name="sign">If set to TRUE will sign the application (if not already signed)</param>
            <returns>installation success</returns>
        </member>
        <member name="M:experitestClient.IClient.Install(System.String,System.Boolean,System.Boolean)">
            <summary>
            Install the application in the given path on the device
            </summary>
            <param name="path">can be an APK/IPA etc. absolute path or an activity name from the application manager.</param>
            <param name="instrument">If set to TRUE will sign the application (if not already instrumented)</param>
            <param name="keepData">If set to TRUE will keep application data</param>
            <returns>installation success</returns>
        </member>
        <member name="M:experitestClient.IClient.IsElementBlank(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Check if a given element found in the specified zone is blank; if blank returns TRUE if not found returns FALSE
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Element to find</param>
            <param name="index">Element index</param>
            <param name="colorGroups">The number of color groups that indicate an image</param>
        </member>
        <member name="M:experitestClient.IClient.IsElementFound(System.String,System.String)">
            <summary>
            Check if a given element is found in the specified zone; if the element found returns TRUE if not found returns FALSE
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Element to find</param>
        </member>
        <member name="M:experitestClient.IClient.IsElementFound(System.String,System.String,System.Int32)">
            <summary>
            Check if a given element is found in the specified zone; if found returns TRUE if not found returns FALSE
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Element to find</param>
            <param name="index">Element index</param>
        </member>
        <member name="M:experitestClient.IClient.IsFoundIn(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Search for an element and check if an element related to it exist. The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="searchElement">Search Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="elementFindZone">Find Element Zone</param>
            <param name="elementToFind">Element to Find</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.IClient.IsTextFound(System.String,System.String,System.Boolean)">
            <summary>
            Check if a given text is found in the specified zone; if the element found returns TRUE if not found returns FALSE
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Element to find</param>
            <param name="ignoreCase">should command case sensitivity</param>
        </member>
        <member name="M:experitestClient.IClient.Launch(System.String,System.Boolean,System.Boolean)">
            <summary>
            Launch activity
            </summary>
            <param name="activityURL">The application main activity or URL</param>
            <param name="instrument">If set to true then will launch in instrument mode</param>
            <param name="stopIfRunning">If set to true then will stop the running process before launching it</param>
        </member>
        <member name="M:experitestClient.IClient.ListSelect(System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Select an element from a list. Used for non-touch devices like blackberry.<br/>
            
            </summary>
            <param name="sendRest">Navigate to the list start</param>
            <param name="sendNavigation">Send to navigate in the list</param>
            <param name="delay">Time to wait before sending a command (in MiliSec)</param>
            <param name="textToIdentify">Select text to Find</param>
            <param name="color">Color to filter</param>
            <param name="rounds">Maximum navigation rounds</param>
            <param name="sendonfind">Send on text find</param>
            <returns>true if element was found</returns>
        </member>
        <member name="M:experitestClient.IClient.LongClick(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Long click on or near to an element (the proximity to the element is specified by a X-Y offset).<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
            <param name="clickCount">Number of Clicks</param>
            <param name="x">Horizontal Offset from Element</param>
            <param name="y">Vertical Offset from Element</param>
        </member>
        <member name="M:experitestClient.IClient.Maximize">
            <summary>
            Maximize the working window
            </summary>
        </member>
        <member name="M:experitestClient.IClient.MultiClick(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Click on an element with a finger.<br/>
            Note: element will be identified right before performing the gesutre
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.IClient.MultiClickCoordinate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Click with a finger on given coordinate
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.IClient.MultiClickOffset(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Click with a finger near an element, in given offset form the element.<br/>
            Note: element will be identified right before performing the gesutre
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.IClient.MultiSwipe(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Swipe the screen in a given direction
            </summary>
            <param name="direction">Swipe direction</param>
            <param name="offset">Swipe offset</param>
            <param name="time">Swipe overall time</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.IClient.MultiTouchDown(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Hold a finger Touched down on an element. Release with MultiTouchUp command.<br/>
            Note: element will be identified right before performing the gesture
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.IClient.MultiTouchDownCoordinate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Hold a finger Touched down on a given coordinate
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.IClient.MultiTouchMove(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Gesture-move a finger to the element, from the last coordinate touched down or moved to.<br/>
            Note: element will be identified right before performing the gesutre
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.IClient.MultiTouchMoveCoordinate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Move a finger to the given coordinate, from the last coordinate touched down or moved to.
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.IClient.MultiTouchUp(System.Int32)">
            <summary>
            Touch up with a finger, from the last coordinate touched down or moved to
            </summary>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.IClient.MultiWait(System.Int32,System.Int32)">
            <summary>
            Wait with a finger in the last touch point, for the given time
            </summary>
            <param name="time">Wait time</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.IClient.OpenDevice">
            <summary>
            Opens current device's screen.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.IClient.P2cx(System.Int32)">
            <summary>
            Convert percentage into pixel.
            </summary>
            <param name="percentage">Screen Percentage</param>
        </member>
        <member name="M:experitestClient.IClient.P2cy(System.Int32)">
            <summary>
            Convert percentage into pixel.
            </summary>
            <param name="percentage">Screen Percentage</param>
        </member>
        <member name="M:experitestClient.IClient.PerformMultiGesture">
            <summary>
            Perform the multi-touch gesture steps which were added after the last StartMultiGestureStep command
            </summary>
        </member>
        <member name="M:experitestClient.IClient.Pinch(System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            Pinch In/Out at X,Y in specific radius, if X and Y equal to 0, the pinch will be performed from the center of the screen. In most cases, pinching IN would be used to ZOOM OUT, and pinching OUT would be used to ZOOM IN.
            </summary>
            <param name="inside">Set 'true' to pinch in (zoom out), 'false' to pinch out (zoom in) </param>
            <param name="x">X center</param>
            <param name="y">Y center</param>
            <param name="radius">The pinch radius</param>
        </member>
        <member name="M:experitestClient.IClient.Pinch(System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Pinch In/Out at X,Y in specific radius, if X and Y equal to 0, the pinch will be performed from the center of the screen. In most cases, pinching IN would be used to ZOOM OUT, and pinching OUT would be used to ZOOM IN.<br/>
            
            </summary>
            <param name="inside">Set 'true' to pinch in (zoom out), 'false' to pinch out (zoom in) </param>
            <param name="x">X center</param>
            <param name="y">Y center</param>
            <param name="radius">The pinch radius</param>
            <param name="horizontal">Vertical / horizontal pinch</param>
        </member>
        <member name="M:experitestClient.IClient.PortForward(System.Int32,System.Int32)">
            <summary>
            Forward an agent port
            </summary>
            <param name="localPort">The local port</param>
            <param name="remotePort">The remote port</param>
            <returns>the remote port assigned</returns>
        </member>
        <member name="M:experitestClient.IClient.PressWhileNotFound(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Press on a certain element (ElementToClick) while another element (ElementToFind)is not found.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="elementtoclick">Select Element To Click</param>
            <param name="elementtofind">Select Element To Find</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
            <param name="delay">Time to wait before clicking on the ElementToClick (in MiliSec)</param>
        </member>
        <member name="M:experitestClient.IClient.PressWhileNotFound(System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Press on a certain element (ElementToClick) while another element (ElementToFind)is not found.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="elementtoclick">Select Element To Click</param>
            <param name="elementtoclickindex">Element To Click Index</param>
            <param name="elementtofind">Select Element To Find</param>
            <param name="elementtofindindex">Element To Find Index</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
            <param name="delay">Time to wait before clicking on the ElementToClick (in MiliSec)</param>
        </member>
        <member name="M:experitestClient.IClient.Reboot(System.Int32)">
            <summary>
            Will reboot the device
            </summary>
            <param name="timeout">Timeout waiting for the device to reboot. Minimum value is 40000.</param>
            <returns>have device already been rebooted within given timeout</returns>
        </member>
        <member name="M:experitestClient.IClient.ReleaseClient">
            <summary>
            Release Controller.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.IClient.ReleaseDevice(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Release device as well as the agent assigned to it. It will enable other tests that are waiting to be executed to start doing so.
            </summary>
            <param name="deviceName">Name of the device to release</param>
            <param name="releaseAgent">Deprecated. If TRUE or FALSE then agent will be released</param>
            <param name="removeFromDeviceList">If TRUE then the device will be remove from the device list</param>
            <param name="releaseFromCloud">If TRUE then the device will be released from the cloud</param>
        </member>
        <member name="M:experitestClient.IClient.Report(System.String,System.Boolean)">
            <summary>
            Add a step with a custom message to the test report.<br/>
            
            </summary>
            <param name="message">The message to report.</param>
            <param name="status">TRUE marks this step as successfully passed, FALSE marks it as failed.</param>
        </member>
        <member name="M:experitestClient.IClient.Report(System.String,System.String,System.Boolean)">
            <summary>
            Add a step with a custom message and image to the test report.<br/>
            
            </summary>
            <param name="pathToImage">Pass to the image, can be either a local full path or a URL.</param>
            <param name="message">The message to report.</param>
            <param name="status">TRUE marks this step as successfully passed, FALSE marks it as failed.</param>
        </member>
        <member name="M:experitestClient.IClient.ResetDeviceBridge">
            <summary>
            Reset Device Bridge.
            </summary>
        </member>
        <member name="M:experitestClient.IClient.ResetDeviceBridge(System.String)">
            <summary>
            Reset Device Bridge.
            </summary>
            <param name="deviceType">A device type that is supported by the requested agent</param>
        </member>
        <member name="M:experitestClient.IClient.RightClick(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Right-click on or near to an element (the proximity to the element is specified by a X-Y offset)
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
            <param name="clickCount">Number of Clicks</param>
            <param name="x">Horizontal Offset from Element</param>
            <param name="y">Vertical Offset from Element</param>
        </member>
        <member name="M:experitestClient.IClient.Run(System.String)">
            <summary>
            Run the given command line as shell command on the device (adb for android and SSH for iOS).<br/>
            When running an executable a full pathshould be given.<br/>
            
            </summary>
            <param name="command">The command to run</param>
        </member>
        <member name="M:experitestClient.IClient.RunLayoutTest(System.String)">
            <summary>
            Run a layout test
            </summary>
            <param name="xml">the xml of the layout tests</param>
        </member>
        <member name="M:experitestClient.IClient.RunNativeAPICall(System.String,System.String,System.Int32,System.String)">
            <summary>
            Run native API call on the given element. 
            </summary>
            <param name="zone">Select Zone (should be NATIVE)</param>
            <param name="element">Select Element (should use xpath)</param>
            <param name="index">Element index</param>
            <param name="script">Script to execute</param>
        </member>
        <member name="M:experitestClient.IClient.SendText(System.String)">
            <summary>
            Sends/inserts text to the application. Supports the following keyboard actions as well: {ENTER}, {BKSP}. Device actions can now be found under DeviceAction command.<br/>
            
            </summary>
            <param name="text">Text to send</param>
        </member>
        <member name="M:experitestClient.IClient.SendWhileNotFound(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Send a given text while an element is not found
            </summary>
            <param name="toSend">Insert Text To Send</param>
            <param name="zone">Select Zone</param>
            <param name="elementtofind">Select Element to Find</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
            <param name="delay">Time to wait before sending a command (in MiliSec)</param>
        </member>
        <member name="M:experitestClient.IClient.SendWhileNotFound(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Send a given text while an element is not found
            </summary>
            <param name="toSend">Insert Text To Send</param>
            <param name="zone">Select Zone</param>
            <param name="elementtofind">Select Element to Find</param>
            <param name="elementtofindindex">Element to Find Index</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
            <param name="delay">Time to wait before sending a command (in MiliSec)</param>
        </member>
        <member name="M:experitestClient.IClient.SetApplicationTitle(System.String)">
            <summary>
            Sets the application title.<br/>
             Switch tested application/window.<br/>
             The title of the application is searched in the following order:<br/>
             1. search for windows with the given window ID (only if the title is a number).<br/>
             2. search for complete match.<br/>
             3. search for partial match (contains).<br/>
             4. Regular expression match.<br/>
             When working on the desktop use the 'desktop' as the application title.<br/>
            
            </summary>
            <param name="title">Insert New Application/Window Title</param>
        </member>
        <member name="M:experitestClient.IClient.SetAuthenticationReply(System.String,System.Int32)">
            <summary>
            Set the reply type for later authentication requests.<br/>
            See online documentation for details.<br/>
            
            </summary>
            <param name="reply">The reply type to mock</param>
            <param name="delay">Delay after request in ms</param>
        </member>
        <member name="M:experitestClient.IClient.SetDefaultClickDownTime(System.Int32)">
            <summary>
            Set the default click down time in milliseconds (default is 100)
            </summary>
            <param name="downTime">Click down time value</param>
        </member>
        <member name="M:experitestClient.IClient.SetDefaultTimeout(System.Int32)">
            <summary>
            Set the default timeout for click commands
            </summary>
            <param name="newTimeout">Waiting Timeout in MiliSec</param>
            <returns>the new timeout</returns>
        </member>
        <member name="M:experitestClient.IClient.SetDefaultWebView(System.String)">
            <summary>
            Set the WebView to work with
            </summary>
            <param name="webViewLocator">The locator of the WebView, empty to reset</param>
        </member>
        <member name="M:experitestClient.IClient.SetDevice(System.String)">
            <summary>
            Sets the device.<br/>
            
            </summary>
            <param name="device">Device name</param>
        </member>
        <member name="M:experitestClient.IClient.SetDragStartDelay(System.Int32)">
            <summary>
            Drag called after setting dragStartDelay will begin by long touch on the device in<br/>
            the initial drag location.<br/>
            
            </summary>
            <param name="delay">Delay value</param>
        </member>
        <member name="M:experitestClient.IClient.SetInKeyDelay(System.Int32)">
            <summary>
            Set the time between key down and key up
            </summary>
            <param name="delay">Delay value</param>
        </member>
        <member name="M:experitestClient.IClient.SetKeyToKeyDelay(System.Int32)">
            <summary>
            Set the time between two key press
            </summary>
            <param name="delay">Delay value</param>
        </member>
        <member name="M:experitestClient.IClient.SetLanguage(System.String)">
            <summary>
            Set the OCR language
            </summary>
            <param name="language">The language to use or empty to reset to English</param>
        </member>
        <member name="M:experitestClient.IClient.SetLanguagePropertiesFile(System.String)">
            <summary>
            Set language properties file
            </summary>
            <param name="propertiesfile">The language properties file path</param>
        </member>
        <member name="M:experitestClient.IClient.SetLocation(System.String,System.String)">
            <summary>
            Sets device's location to specified coordinate. Currently supported only on android
            </summary>
            <param name="latitude">Latitude in decimal degrees from -90 to 90. Positive latitudes are north of the equator and negative latitudes are south of the equator.</param>
            <param name="longitude">Longitude in decimal degrees from -180 to 180. Positive longitudes are east of the Prime Meridian and negative longitudes are west of the Prime Meridian</param>
        </member>
        <member name="M:experitestClient.IClient.SetMonitorPollingInterval(System.Int32)">
            <summary>
            Set monitor polling interval
            </summary>
            <param name="timemilli">The monitor polling time interval in milliseconds</param>
        </member>
        <member name="M:experitestClient.IClient.SetMonitorTestState(System.String)">
            <summary>
            Set the test status to the monitors
            </summary>
            <param name="testStatus">Set the current status of the test to be used by the monitors</param>
        </member>
        <member name="M:experitestClient.IClient.SetNetworkConditions(System.String)">
            <summary>
            Set profile for current device. To cancel profile leave the profile name empty
            </summary>
            <param name="profile">Set the profile to be used</param>
        </member>
        <member name="M:experitestClient.IClient.SetNetworkConditions(System.String,System.Int32)">
            <summary>
            Set profile for current device for a specified duration. To cancel profile leave the profile name empty
            </summary>
            <param name="profile">Set the profile to be used</param>
            <param name="duration">Set the duration in milliseconds to which to set the profile (0=forever)</param>
        </member>
        <member name="M:experitestClient.IClient.SetOcrIgnoreCase(System.Boolean)">
            <summary>
            Set the ignore case status (default is true).<br/>
            
            </summary>
            <param name="ignoreCase">should OCR avoid case sensitivity</param>
        </member>
        <member name="M:experitestClient.IClient.SetOcrTrainingFilePath(System.String)">
            <param name="trainingPath">path to the OCR training file</param>
        </member>
        <member name="M:experitestClient.IClient.SetPickerValues(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Set the values of the Picker element
            </summary>
            <param name="zoneName">Select Zone</param>
            <param name="elementName">Select Element</param>
            <param name="index">Element index</param>
            <param name="wheelIndex">Wheel Index</param>
            <param name="value">The value to set</param>
        </member>
        <member name="M:experitestClient.IClient.SetProjectBaseDirectory(System.String)">
            <summary>
            Sets the project base directory.<br/>
            This method should be called first,before any other called is used.<br/>
            In case of working on a remote agent, the project path should be the path on the remote machine.<br/>
            
            </summary>
            <param name="projectBaseDirectory">the new project base directory.</param>
        </member>
        <member name="M:experitestClient.IClient.SetProperty(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="key">key</param>
            <param name="value">Value</param>
        </member>
        <member name="M:experitestClient.IClient.SetRedToBlue(System.Boolean)">
            <param name="redToBlue"></param>
        </member>
        <member name="M:experitestClient.IClient.SetReporter(System.String,System.String)">
            <summary>
            Sets the reporter. Configure the internal reporter.<br/>
            
            </summary>
            <param name="reporterName">Comma seperated value string of reporter types. Supported types: html(=xml), pdf.</param>
            <param name="directory">The directory for the report to be generated in.</param>
            <returns>The reports directory path</returns>
        </member>
        <member name="M:experitestClient.IClient.SetReporter(System.String,System.String,System.String)">
            <summary>
            Sets the reporter. Configure the internal reporter.<br/>
            
            </summary>
            <param name="reporterName">Comma seperated value string of reporter types. Supported types: html(=xml), pdf.</param>
            <param name="directory">The directory for the report to be generated in.</param>
            <param name="testName">The name of the test as would appear in the report.</param>
            <returns>The reports directory path</returns>
        </member>
        <member name="M:experitestClient.IClient.SetShowImageAsLink(System.Boolean)">
            <summary>
            Show report images as link.<br/>
            
            </summary>
            <param name="showImageAsLink">show report images as link</param>
        </member>
        <member name="M:experitestClient.IClient.SetShowImageInReport(System.Boolean)">
            <summary>
            Decide whether to include step screenshots in report.<br/>
            
            </summary>
            <param name="showImageInReport">when set to False will not show any screenshot in report</param>
        </member>
        <member name="M:experitestClient.IClient.SetShowPassImageInReport(System.Boolean)">
            <summary>
            Decide whether to show screenshots of every step, or only failed steps in report.<br/>
            
            </summary>
            <param name="showPassImageInReport">when set to False will not show a screenshot of test steps that passed successfully</param>
        </member>
        <member name="M:experitestClient.IClient.SetShowReport(System.Boolean)">
            <summary>
            when set to False will not show reports steps.<br/>
            
            </summary>
            <param name="showReport">when set to False will not show reports steps</param>
        </member>
        <member name="M:experitestClient.IClient.SetSimCard(System.String)">
            <summary>
            Load or unload sim card (to unlaod sim-card name is equal to null) to the currently used device
            </summary>
            <param name="simCardName">the sim-card name, null to unload sim card form the device</param>
        </member>
        <member name="M:experitestClient.IClient.SetSpeed(System.String)">
            <param name="speed"></param>
        </member>
        <member name="M:experitestClient.IClient.SetWebAutoScroll(System.Boolean)">
            <summary>
            Set web autoscroll
            </summary>
            <param name="autoScroll">Set the autoscroll state</param>
        </member>
        <member name="M:experitestClient.IClient.SetWindowSize(System.Int32,System.Int32)">
            <summary>
            Set the active windows size and movie it to be fully visible.<br/>
            
            </summary>
            <param name="width">Window width</param>
            <param name="height">Window height</param>
        </member>
        <member name="M:experitestClient.IClient.Shake">
            <summary>
            Simulating Shake operation on the device.
            </summary>
        </member>
        <member name="M:experitestClient.IClient.SimulateCapture(System.String)">
            <summary>
            SimulateCapture
            </summary>
            <param name="picturePath">picture's full path</param>
        </member>
        <member name="M:experitestClient.IClient.Sleep(System.Int32)">
            <summary>
            Pause the script for a specified time.<br/>
            
            </summary>
            <param name="time">The time to pause in MiliSec</param>
        </member>
        <member name="M:experitestClient.IClient.StartAudioPlay(System.String)">
            <summary>
            Start play audio file
            </summary>
            <param name="audioFile">Set the audio file to start playing</param>
        </member>
        <member name="M:experitestClient.IClient.StartAudioRecording(System.String)">
            <summary>
            Start record audio file
            </summary>
            <param name="audioFile">Set the audio file name</param>
        </member>
        <member name="M:experitestClient.IClient.StartCall(System.String,System.String,System.String,System.Int32)">
            <summary>
            Generate a phone call using Skype infrastructure
            </summary>
            <param name="skypeUser">Skype user</param>
            <param name="skypePassword">Skype password</param>
            <param name="number">Number to call include country code</param>
            <param name="duration">Call duration (0 is infinite or until EndCall)</param>
        </member>
        <member name="M:experitestClient.IClient.StartLoggingDevice(System.String)">
            <summary>
            Start writing the current device's log to file
            </summary>
            <param name="path">Absolute path to log file, or where the log file should be created</param>
        </member>
        <member name="M:experitestClient.IClient.StartMonitor(System.String)">
            <summary>
            Clear monitoring collection data collected so far. If packageName is not empty, the application identified by this packageName will start being monitored.<br/>
                
            </summary>
            <param name="packageName">Package name (Android) or Bundle ID (iOS) of application</param>
        </member>
        <member name="M:experitestClient.IClient.StartMultiGesture(System.String)">
            <summary>
            Start a group of multi-touch gesture steps.<br/>
            Note: all steps will be performed only when executing the PerformMultiGestureStep command.<br/>
            See online documentation for details
            </summary>
            <param name="name">Gesture name</param>
        </member>
        <member name="M:experitestClient.IClient.StartStepsGroup(System.String)">
            <summary>
            Start grouping steps<br/>
            
            </summary>
            <param name="caption">The group's caption which will appear at the report</param>
        </member>
        <member name="M:experitestClient.IClient.StartTransaction(System.String)">
            <summary>
            Start to measure transaction duration<br/>
            
            </summary>
            <param name="name">Name of the transaction</param>
        </member>
        <member name="M:experitestClient.IClient.StartVideoRecord">
            <summary>
            Start the video recording.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.IClient.StopAudioPlay">
            <summary>
            Stop audio playing
            </summary>
        </member>
        <member name="M:experitestClient.IClient.StopAudioRecording">
            <summary>
            Stop audio recording
            </summary>
        </member>
        <member name="M:experitestClient.IClient.StopLoggingDevice">
            <summary>
            Stop writing the current device's log to file
            </summary>
        </member>
        <member name="M:experitestClient.IClient.StopStepsGroup">
            <summary>
            Stop grouping steps<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.IClient.StopVideoRecord">
            <summary>
            Stop the video recording.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.IClient.Swipe(System.String,System.Int32)">
            <summary>
            Swipe the screen in a given direction
            </summary>
            <param name="direction">Direction to swipe</param>
            <param name="offset">Swipe offset</param>
        </member>
        <member name="M:experitestClient.IClient.Swipe(System.String,System.Int32,System.Int32)">
            <summary>
            Swipe the screen in a given direction
            </summary>
            <param name="direction">Direction to swipe</param>
            <param name="offset">Swipe offset</param>
            <param name="time">Swipe overall time</param>
        </member>
        <member name="M:experitestClient.IClient.SwipeWhileNotFound(System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Swipe a list to identify an element<br/>
            
            </summary>
            <param name="direction">Direction to swipe</param>
            <param name="offset">Swipe offset</param>
            <param name="zone">Select Zone</param>
            <param name="elementtofind">Select Element to Find</param>
            <param name="delay">Time to wait before sending a command (in MiliSec)</param>
            <param name="rounds">Maximum swipe rounds</param>
            <param name="click">If TRUE then click</param>
        </member>
        <member name="M:experitestClient.IClient.SwipeWhileNotFound(System.String,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Swipe a list to identify an element<br/>
            
            </summary>
            <param name="direction">Direction to swipe</param>
            <param name="offset">Swipe offset</param>
            <param name="swipeTime">Swipe operation time</param>
            <param name="zone">Select Zone</param>
            <param name="elementtofind">Select Element to Find</param>
            <param name="delay">Time to wait before sending a command (in MiliSec)</param>
            <param name="rounds">Maximum swipe rounds</param>
            <param name="click">If TRUE then click</param>
        </member>
        <member name="M:experitestClient.IClient.SwipeWhileNotFound(System.String,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Swipe a list to identify an element<br/>
            
            </summary>
            <param name="direction">Direction to swipe</param>
            <param name="offset">Swipe offset</param>
            <param name="swipeTime">Swipe operation time</param>
            <param name="zone">Select Zone</param>
            <param name="elementtofind">Select Element to Find</param>
            <param name="elementtofindindex">Element to Find Index</param>
            <param name="delay">Time to wait before sending a command (in MiliSec)</param>
            <param name="rounds">Maximum swipe rounds</param>
            <param name="click">If TRUE then click</param>
        </member>
        <member name="M:experitestClient.IClient.Sync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Wait for the screen to be silent. Works on the graphical level of the screen.
            </summary>
            <param name="silentTime">The time for the screen to be silent in milliseconds</param>
            <param name="sensitivity">Sensitivity from 0 - 100 (0 is maximum sensitivity)</param>
            <param name="timeout">Waiting timeout in milliseconds</param>
            <returns>true if operation finished successfully</returns>
        </member>
        <member name="M:experitestClient.IClient.SyncElements(System.Int32,System.Int32)">
            <summary>
            Wait for all the UI elements on the page to appear. Works on the dump level - checks for changes in the UI dump.
            </summary>
            <param name="silentTime">The period of time for the UI elements to be static in milliseconds.</param>
            <param name="timeout">Waiting timeout in milliseconds</param>
            <returns>true if operation finished successfully</returns>
        </member>
        <member name="M:experitestClient.IClient.TextFilter(System.String,System.Int32)">
            <summary>
            Filter the text recognition text color for the next command.<br/>
            This setting will be applied on the next command only.<br/>
            It's only supported when you use text recognition (OCR).<br/>
            
            </summary>
            <param name="color">text color in RGB hex decimal string (0xFFFFFF for white).</param>
            <param name="sensitivity">Sensitivity from 0 - 100 (0 is no sensitivity)</param>
        </member>
        <member name="M:experitestClient.IClient.TouchDown(System.String,System.String,System.Int32)">
            <summary>
            Hold Touch down on element, Release with TouchUp command.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
        </member>
        <member name="M:experitestClient.IClient.TouchDownCoordinate(System.Int32,System.Int32)">
            <summary>
            Hold Touch down at X,Y coordinates related to the device screen, Release with TouchUp command.<br/>
            
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
        </member>
        <member name="M:experitestClient.IClient.TouchMove(System.String,System.String,System.Int32)">
            <summary>
            Move from last Touched down element/coordinate to specified element location.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
        </member>
        <member name="M:experitestClient.IClient.TouchMoveCoordinate(System.Int32,System.Int32)">
            <summary>
            Move from last Touched down element/coordinate to specified coordinate location.<br/>
            
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
        </member>
        <member name="M:experitestClient.IClient.TouchUp">
            <summary>
            Touch Up from last coordinate touched down or moved to.
            </summary>
        </member>
        <member name="M:experitestClient.IClient.Uninstall(System.String)">
            <summary>
            Uninstall the application
            </summary>
            <param name="application">The application name</param>
            <returns>uninstallation success</returns>
        </member>
        <member name="M:experitestClient.IClient.VerifyElementFound(System.String,System.String,System.Int32)">
            <summary>
            Check if an element is found in a specified zone.<br/>
            An Exception (or Assertion) will be thrown if the element is not found.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order (=the number of times the element appears more and above the first time)</param>
        </member>
        <member name="M:experitestClient.IClient.VerifyElementNotFound(System.String,System.String,System.Int32)">
            <summary>
            Check if an element is found in a specified zone.<br/>
            An Exception (or Assertion) will be thrown if the element is found.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order (=the number of times the element appears more and above the first time)</param>
        </member>
        <member name="M:experitestClient.IClient.VerifyIn(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Verify that an element("elementToFind") is found near to another element("elementSearch").<br/>
            The direction can be UP, DOWN, LEFT and RIGHT.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="searchElement">Search Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="elementFindZone">Find Element Zone</param>
            <param name="elementToFind">Element to Find</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.IClient.WaitForAudioPlayEnd(System.Int32)">
            <summary>
            Wait for audio file play to end
            </summary>
            <param name="timeout">Set the timeout</param>
        </member>
        <member name="M:experitestClient.IClient.WaitForElement(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Wait for an element to appear in a specified zone
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element to Wait For</param>
            <param name="index">Element Order</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
        </member>
        <member name="M:experitestClient.IClient.WaitForElementToVanish(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Wait for an element to vanish
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element to Wait For</param>
            <param name="index">Element Order</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
        </member>
        <member name="M:experitestClient.IClient.WaitForWindow(System.String,System.Int32)">
            <summary>
            Wait for a window
            </summary>
            <param name="name">Window name</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
        </member>
        <member name="F:experitestClient.Client.clientProxy">
            <summary>
            The clien
            </summary>
        </member>
        <member name="F:experitestClient.Client.url">
            <summary>
            The url.
            </summary>
        </member>
        <member name="F:experitestClient.Client.map">
            <summary>
            The dictionary.
            </summary>
        </member>
        <member name="F:experitestClient.Client.throwExceptionOnFail">
            <summary>
            The throw exception on failed.
            </summary>
        </member>
        <member name="M:experitestClient.Client.#ctor">
             <summary>
             Instantiates a new client.
            Uses the defaults '127.0.0.1' and port 8888.
             </summary>
        </member>
        <member name="M:experitestClient.Client.#ctor(experitestClient.Configuration)">
             <summary>
             Instantiates a new client.
            Uses the the configuration object.
             </summary>
        </member>
        <member name="M:experitestClient.Client.PingServer">
            <summary>
            ping Server.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.Client.Connect(System.String,System.Int32,System.String)">
            <summary>
            connect to the client.
            </summary>
            <param name="host">the host</param>
            <param name="port"> the port</param>
            <param name="clientName">the client</param>
        </member>
        <member name="M:experitestClient.Client.Configure(experitestClient.Configuration)">
            <summary>
            
            </summary>
            <param name="Config"></param>
            <returns></returns>
        </member>
        <member name="M:experitestClient.Client.GetClientConfigurationFromUI">
            <summary>
            Get configuration from UI popup dialog
            </summary>
            <returns>Array of strings with configurations</returns>
        </member>
        <member name="M:experitestClient.Client.AddDevice(System.String,System.String)">
            <summary>
            Add / reserve device. return the name that should be used to access the device.
            </summary>
            <param name="serialNumber">the device serial number / UDID</param>
            <param name="deviceName">the device suggested name (will add an index if the name exists)</param>
        </member>
        <member name="M:experitestClient.Client.ApplicationClearData(System.String)">
            <summary>
            Clear application data
            </summary>
            <param name="packageName">The application's package name</param>
        </member>
        <member name="M:experitestClient.Client.ApplicationClose(System.String)">
            <summary>
            Close application
            </summary>
            <param name="packageName">The application's package name</param>
            <returns>successful close</returns>
        </member>
        <member name="M:experitestClient.Client.Capture">
            <summary>
            Capture the current screen and add it to the report.
            </summary>
            <returns>the path of the captured image file.</returns>
        </member>
        <member name="M:experitestClient.Client.Capture(System.String)">
            <summary>
            Capture the current screen and add it to the report with the given line.
            </summary>
            <param name="line">the line to be used in the report</param>
            <returns>the path of the captured image file.</returns>
        </member>
        <member name="M:experitestClient.Client.CaptureElement(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create new element from image in given device coordinates, with given name and similarity percentage.
            </summary>
            <param name="name">New element's name</param>
            <param name="x">Image origin x coordinate</param>
            <param name="y">Image origin y coordinate</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <param name="similarity">the similarity between pictures</param>
        </member>
        <member name="M:experitestClient.Client.ClearAllSms">
            <summary>
            Clear all SMS on a device.
            </summary>
        </member>
        <member name="M:experitestClient.Client.ClearDeviceLog">
            <summary>
            Clear device log
            </summary>
        </member>
        <member name="M:experitestClient.Client.ClearLocation">
            <summary>
            Clears the mock location. Currently supported only on android
            </summary>
        </member>
        <member name="M:experitestClient.Client.Click(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Click an element.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
            <param name="clickCount">Number of Clicks</param>
        </member>
        <member name="M:experitestClient.Client.Click(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Click on or near to an element. The offset is specified by x, y.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
            <param name="clickCount">Number of Clicks</param>
            <param name="x">Horizontal Offset from Element</param>
            <param name="y">Vertical Offset from Element</param>
        </member>
        <member name="M:experitestClient.Client.ClickCoordinate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Click in window X,Y coordinates related to the device screen.<br/>
            
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="clickCount">Number of clicks</param>
        </member>
        <member name="M:experitestClient.Client.ClickIn(System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Search for an element and click on an element near him. The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="searchElement">Search Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="clickElement">Click Element</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.Client.ClickIn(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Search for an element and click on an element near him. The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="searchElement">Search Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="clickElementZone">Click Element Zone</param>
            <param name="clickElement">Click Element</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.Client.ClickIn(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Search for an element and click on an element near him. The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="searchElement">Search Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="clickElementZone">Click Element Zone</param>
            <param name="clickElement">Click Element</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
            <param name="clickCount">Number of Clicks</param>
        </member>
        <member name="M:experitestClient.Client.ClickIn(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Search for an element and click on an element near him. The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="searchElement">Search Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="clickElementZone">Click Element Zone</param>
            <param name="clickElement">Click Element</param>
            <param name="clickElementIndex">Click Element Index</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
            <param name="clickCount">Number of Clicks</param>
        </member>
        <member name="M:experitestClient.Client.ClickTableCell(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Clicking on table cell by its header element and row element.
            </summary>
            <param name="zone">Select zone</param>
            <param name="headerElement">Select table header element</param>
            <param name="headerIndex">Header element index</param>
            <param name="rowElement">Select table row element</param>
            <param name="rowIndex">Row element index</param>
        </member>
        <member name="M:experitestClient.Client.CloseDevice">
            <summary>
            Close connection to the device.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.Client.CloseDeviceReflection">
            <summary>
            Hides the current device screen. If the current device screen is not open, this command does nothing.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.Client.CloseKeyboard">
            <summary>
            Close device keyboard
            </summary>
        </member>
        <member name="M:experitestClient.Client.CollectSupportData(System.String,System.String,System.String,System.String,System.String,System.String)">
            <param name="zipDestination">The path in  which the zip will be saved. If empty, a default path will be used</param>
            <param name="applicationPath">An absolute path to the application file on the PC</param>
            <param name="device">Device name</param>
            <param name="scenario">Description of your scenario</param>
            <param name="expectedResult">The result you expected</param>
            <param name="actualResult">The result you got after running the scenario</param>
            <returns>returns the collectSupportData folder path</returns>
        </member>
        <member name="M:experitestClient.Client.CollectSupportData(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <param name="zipDestination">The path in  which the zip will be saved. If empty, a default path will be used</param>
            <param name="applicationPath">An absolute path to the application file on the PC</param>
            <param name="device">Device name</param>
            <param name="scenario">Description of your scenario</param>
            <param name="expectedResult">The result you expected</param>
            <param name="actualResult">The result you got after running the scenario</param>
            <param name="withCloudData">Include cloud data in the support folder</param>
            <param name="onlyLatestLogs">Include only latest logs in the support folder</param>
            <returns>returns the collectSupportData folder path</returns>
        </member>
        <member name="M:experitestClient.Client.DeviceAction(System.String)">
            <summary>
            Execute any of the following device actions:<br/>
            Home, Back, Power, Landscape, Portrait, Change Orientation, Menu, Unlock, Paste, Volume Up, Volume Down, Recent Apps.<br/>
            
            </summary>
            <param name="action">Name of action to perform</param>
        </member>
        <member name="M:experitestClient.Client.Drag(System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Drag an element in a specified zone.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element to drag</param>
            <param name="index">Element Order (=the number of times the element appears more and above the first time)</param>
            <param name="xOffset">X drag offset</param>
            <param name="yOffset">Y drag offset</param>
        </member>
        <member name="M:experitestClient.Client.DragCoordinates(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Drag base on coordinates
            </summary>
            <param name="x1">First point X</param>
            <param name="y1">First point Y</param>
            <param name="x2">Second point X</param>
            <param name="y2">Second point Y</param>
        </member>
        <member name="M:experitestClient.Client.DragCoordinates(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Drag base on coordinates
            </summary>
            <param name="x1">First point X</param>
            <param name="y1">First point Y</param>
            <param name="x2">Second point X</param>
            <param name="y2">Second point Y</param>
            <param name="time">Drag time (ms)</param>
        </member>
        <member name="M:experitestClient.Client.DragDrop(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Drag an element in a specified zone and drop it at a second element<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="dragElement">Drag element</param>
            <param name="dragIndex">Drag element index</param>
            <param name="dropElement">Drop element</param>
            <param name="dropIndex">Drop element index</param>
        </member>
        <member name="M:experitestClient.Client.Drop">
            <summary>
            Drop all project information.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.Client.ElementGetProperty(System.String,System.String,System.Int32,System.String)">
            <summary>
            Get element property
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="property">Property</param>
        </member>
        <member name="M:experitestClient.Client.ElementGetTableRowsCount(System.String,System.Int32,System.Boolean)">
            <summary>
            Get table total or visible rows count
            </summary>
            <param name="tableLocator">Table Locator</param>
            <param name="tableIndex">Table Locator Index</param>
            <param name="visible">Only visible</param>
        </member>
        <member name="M:experitestClient.Client.ElementGetTableRowsCount(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Get table total or visible rows count
            </summary>
            <param name="zone">Select Zone</param>
            <param name="tableLocator">Select Table Locator</param>
            <param name="tableIndex">Table Locator Index</param>
            <param name="visible">Only visible</param>
        </member>
        <member name="M:experitestClient.Client.ElementGetTableValue(System.String,System.Int32,System.String)">
            <summary>
            Get table cell value
            </summary>
            <param name="rowLocator">Row Locator</param>
            <param name="rowLocatorIndex">Row Locator Index</param>
            <param name="columnLocator">Column Locator</param>
        </member>
        <member name="M:experitestClient.Client.ElementGetText(System.String,System.String,System.Int32)">
            <summary>
            Get text from element
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
        </member>
        <member name="M:experitestClient.Client.ElementListPick(System.String,System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Select an element in a list (first make the element visible)
            </summary>
            <param name="listZone">Select List Zone</param>
            <param name="listLocator">List locator</param>
            <param name="elementZone">Select Element Zone</param>
            <param name="elementLocator">Element locator</param>
            <param name="index">Element index</param>
            <param name="click">If TRUE then click</param>
        </member>
        <member name="M:experitestClient.Client.ElementListSelect(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Select an element in a list (first make the element visible)
            </summary>
            <param name="listLocator">List locator</param>
            <param name="elementLocator">Element locator</param>
            <param name="index">Element index</param>
            <param name="click">If TRUE then click</param>
        </member>
        <member name="M:experitestClient.Client.ElementListVisible(System.String,System.String,System.Int32)">
            <summary>
            Make the target element visible
            </summary>
            <param name="listLocator">List locator</param>
            <param name="elementLocator">Element locator</param>
            <param name="index">Element index</param>
        </member>
        <member name="M:experitestClient.Client.ElementScrollToTableRow(System.String,System.Int32,System.Int32)">
            <summary>
            Scroll table / list to the given row
            </summary>
            <param name="tableLocator">Table Locator</param>
            <param name="tableIndex">Table Locator Index</param>
            <param name="rowIndex">Row Index</param>
        </member>
        <member name="M:experitestClient.Client.ElementScrollToTableRow(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Scroll table / list to the given row
            </summary>
            <param name="zone">Select Zone</param>
            <param name="tableLocator">Select Table Locator</param>
            <param name="tableIndex">Table Locator Index</param>
            <param name="rowIndex">Row Index</param>
        </member>
        <member name="M:experitestClient.Client.ElementSendText(System.String,System.String,System.Int32,System.String)">
            <summary>
            Send text to an element
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="text">Text to Send</param>
        </member>
        <member name="M:experitestClient.Client.ElementSetProperty(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Set element property
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="property">Property</param>
            <param name="value">The value to set</param>
        </member>
        <member name="M:experitestClient.Client.ElementSwipe(System.String,System.String,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Swipe the screen in a given direction
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to swipe</param>
            <param name="offset">Swipe offset</param>
            <param name="time">Swipe overall time</param>
        </member>
        <member name="M:experitestClient.Client.ElementSwipeWhileNotFound(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Swipe a component to search for an element or text.<br/>
            
            </summary>
            <param name="componentZone">Zone of the container element;</param>
            <param name="componentElement">The container element;</param>
            <param name="direction">Direction to swipe;</param>
            <param name="offset">Swipe offset;</param>
            <param name="swipeTime">Swipe operation time;</param>
            <param name="elementfindzone">Select Zone of the sought element;</param>
            <param name="elementtofind">Select element to find from the drop-down list OR (for OCR text identification) insert text into the empty box in the drop-down list;</param>
            <param name="elementtofindindex">The sought element's index (i.e., the number of times the element appears after the first appearance minus two). Index=0 refers to the first appearance of the element; Index=1 refers to the second appearance of the element, etc.</param>
            <param name="delay">Time to wait before sending a command (in milliseconds);</param>
            <param name="rounds">Maximum swipe rounds;</param>
            <param name="click">Click the found element if TRUE.</param>
        </member>
        <member name="M:experitestClient.Client.EndTransaction(System.String)">
            <summary>
            End measuring transaction duration<br/>
            
            </summary>
            <param name="name">Name of the transaction</param>
        </member>
        <member name="M:experitestClient.Client.Exit">
            <summary>
            Exit SeeTest.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.Client.ExtractLanguageFiles(System.String,System.String,System.Boolean)">
            <summary>
            Extracts the language files of an application to the specified directory
            </summary>
            <param name="application">Language files source application</param>
            <param name="directoryPath">Directory's full path where to extract the language files</param>
            <param name="allowOverwrite">Whether to allow overwriting existing langauge files in directory</param>
        </member>
        <member name="M:experitestClient.Client.FindElements(System.String,System.String,System.String,System.String)">
            <param name="zone">zone of the element (NATIVE / WEB)</param>
            <param name="parent">full xpath of parent (empty string / return of previous call)</param>
            <param name="by">currently only xpath supported</param>
            <param name="value">full xpath of the element to search</param>
        </member>
        <member name="M:experitestClient.Client.Flick(System.String,System.Int32)">
            <summary>
            Flick the screen in a given direction
            </summary>
            <param name="direction">Direction to flick</param>
            <param name="offset">Flick offset</param>
        </member>
        <member name="M:experitestClient.Client.FlickCoordinate(System.Int32,System.Int32,System.String)">
            <summary>
            Flick from a given point in a given direction
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="direction">Direction to flick</param>
        </member>
        <member name="M:experitestClient.Client.FlickElement(System.String,System.String,System.Int32,System.String)">
            <summary>
            Flick the element in a given direction
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
            <param name="direction">Direction to flick</param>
        </member>
        <member name="M:experitestClient.Client.ForceTouch(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Force touch on element and drag for distance.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
            <param name="duration">Duration</param>
            <param name="force">Force level in percent</param>
            <param name="dragDistanceX">Horizontal distance of drag from Element</param>
            <param name="dragDistanceY">Vertical distance of drag from Element</param>
            <param name="dragDuration">Drag Duration</param>
        </member>
        <member name="M:experitestClient.Client.GenerateReport">
            <summary>
            Generates a SeeTest report.<br/>
            
            </summary>
            <returns>returns the report's folder path</returns>
        </member>
        <member name="M:experitestClient.Client.GenerateReport(System.Boolean)">
            <summary>
            Generates a SeeTest report.<br/>
            
            </summary>
            <param name="releaseClient">If FALSE then device will not be released</param>
            <returns>returns the report's folder path</returns>
        </member>
        <member name="M:experitestClient.Client.GenerateReport(System.Boolean,System.String)">
            <summary>
            Generates a SeeTest report and attach it to external tool entity.<br/>
            Suply a path to java properties file containning the data for the entity update.<br/>
            See documentation online for details.<br/>
            
            </summary>
            <param name="releaseClient">If FALSE then device will not be released</param>
            <param name="propFilePath">path to Java properties file</param>
            <returns>returns the report's folder path, or the created entity if exists</returns>
        </member>
        <member name="M:experitestClient.Client.GetAllSms(System.Int32)">
            <summary>
            Get all  SMS or wait up to 'timeout' milliseconds.
            </summary>
            <param name="timeout">Wait timeout</param>
        </member>
        <member name="M:experitestClient.Client.GetAllValues(System.String,System.String,System.String)">
            <summary>
            Get all the values of a property in a given element. Note: Supported properties are available on Object spy. 
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="property">Property</param>
        </member>
        <member name="M:experitestClient.Client.GetAllZonesWithElement(System.String)">
            <summary>
            Get all the zones names that has an element with the given name.
            </summary>
            <param name="element">the element name to search for</param>
            <returns>comma delimited string with the zones names</returns>
        </member>
        <member name="M:experitestClient.Client.GetAvailableAgentPort">
            <summary>
            Get available Agent Port.<br/>
            Get a port number where a SeeTest agent listens.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.Client.GetAvailableAgentPort(System.String)">
            <summary>
            Get available Agent Port.<br/>
            Get a port number of a SeeTest agent supporting (licensed to) the given<br/>
            device type.<br/>
            
            </summary>
            <param name="featureName">A device type that is supported by the requested agent. One of ANDROID, IPHONE, BLACKBERRY or WINDOWS_PHONE.</param>
        </member>
        <member name="M:experitestClient.Client.GetConnectedDevices">
            <summary>
            Get connected devices.
            </summary>
        </member>
        <member name="M:experitestClient.Client.GetCoordinateColor(System.Int32,System.Int32)">
            <summary>
            Returns an integer representation in the RGB color model for coordinate (x,y) 
            </summary>
            <param name="x">the X coordinate of the target pixel</param>
            <param name="y">the Y coordinate of the target pixel</param>
        </member>
        <member name="M:experitestClient.Client.GetCounter(System.String)">
            <summary>
            Get monitor counter value
            </summary>
            <param name="counterName">Counter name (cpu, memory...)</param>
        </member>
        <member name="M:experitestClient.Client.GetCurrentApplicationName">
            <summary>
            Get the name of application that is running in the foreground of the device
            </summary>
        </member>
        <member name="M:experitestClient.Client.GetDefaultTimeout">
            <summary>
            Gets the default timeout.
            </summary>
            <returns>the default timeout</returns>
        </member>
        <member name="M:experitestClient.Client.GetDeviceLog">
            <summary>
            Download device log to reports directory
            </summary>
            <returns>path to the file that was downloaded</returns>
        </member>
        <member name="M:experitestClient.Client.GetDeviceProperty(System.String)">
            <summary>
                        Get device property value for the given key.<br/>
                    
            </summary>
            <param name="key">device_property</param>
            <returns>The property value</returns>
        </member>
        <member name="M:experitestClient.Client.GetDevicesInformation">
            <summary>
            Get an XML formated string containing all the devices information
            </summary>
        </member>
        <member name="M:experitestClient.Client.GetElementCount(System.String,System.String)">
            <summary>
            Count the number of times an element is been found in the current screen.
            </summary>
            <param name="zone">the element zone</param>
            <param name="element">the element name</param>
            <returns>the number of times the elment was identified</returns>
        </member>
        <member name="M:experitestClient.Client.GetElementCountIn(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Search for an element and count the number of times an element is found near him.The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zoneName">Select Zone</param>
            <param name="elementSearch">Element Search</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="elementCountZone">Select Zone</param>
            <param name="elementCount">Element to count</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.Client.GetInstalledApplications">
            <summary>
            Get a string containing all installed application on the device
            </summary>
        </member>
        <member name="M:experitestClient.Client.GetLastSMS(System.Int32)">
            <summary>
            Get last received SMS or wait up to 'timeout' milliseconds to receive one.
            </summary>
            <param name="timeout">Wait timeout</param>
        </member>
        <member name="M:experitestClient.Client.GetMonitorsData(System.String)">
            <summary>
            Returns a CSV format of the running monitors (CPU/Memomy) for all<br/>
                  devices<br/>
                
            </summary>
            <param name="cSVfilepath">If set will save the CSV in the given location (should be absolute path), if not set will use a default location.</param>
        </member>
        <member name="M:experitestClient.Client.GetPickerValues(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Get all values from picker, works only on iOS
            </summary>
            <param name="zone">Select Zone</param>
            <param name="pickerElement">Select Picker Element</param>
            <param name="index">Picker index</param>
            <param name="wheelIndex">Wheel index at picker component</param>
        </member>
        <member name="M:experitestClient.Client.GetPosition(System.String,System.String)">
            <summary>
            Gets position an position. The position is absolute.<br/>
            
            </summary>
            <param name="zone">the element zone</param>
            <param name="element">Select Element to Get Position For</param>
            <returns>the comma delimited string with the X,Y of the element coordination.</returns>
        </member>
        <member name="M:experitestClient.Client.GetPositionWindowRelative(System.String,System.String)">
            <summary>
            Get the element position relative to the window (and not the screen absolute coordinates)
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element to Get Position For</param>
            <returns>the comma delimited string with the X,Y of the element coordination.</returns>
        </member>
        <member name="M:experitestClient.Client.GetProperty(System.String)">
            <summary>
            Get SeeTest's property value for the given key (in %appdata%\seetest\app.properties file).<br/>
            
            </summary>
            <param name="property">The property key.</param>
            <returns>the property value</returns>
        </member>
        <member name="M:experitestClient.Client.GetSimCard">
            <summary>
            Get sim-card name assigned to the currently used device
            </summary>
        </member>
        <member name="M:experitestClient.Client.GetSimCards(System.Boolean)">
            <summary>
            Get list of sim-card names which are either ready to use or already assigned (depeand on the argument) to the currently used device
            </summary>
            <param name="readyToUse">If TRUE return all available sim cards which are ready to use. If FALSE return all sim cards assigned for the device</param>
        </member>
        <member name="M:experitestClient.Client.GetTableCellText(System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get text content of table cell by its header element and row element.
            </summary>
            <param name="zone">Select zone</param>
            <param name="headerElement">Select table header element</param>
            <param name="headerIndex">Header element index</param>
            <param name="rowElement">Select table row element</param>
            <param name="rowIndex">Row element index</param>
            <param name="width">Width of the search</param>
            <param name="height">Height of the search</param>
        </member>
        <member name="M:experitestClient.Client.GetText(System.String)">
            <summary>
            Gets the text that appears in a specified zone.<br/>
            
            </summary>
            <param name="zone">Select the Zone to Get Text From, 'TEXT' and 'NATIVE' can be used as well.</param>
            <returns>the text</returns>
        </member>
        <member name="M:experitestClient.Client.GetTextIn(System.String,System.String,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Get a text in a specified area indicate by an element, direction, width and height.<br/>
            The direction can be UP, DOWN, LEFT and RIGHT.<br/>
            Use this method to get the text found in an area related to a given element.<br/>
            When using zone NATIVE, only leafs elements will be searched in order to prevent multiple<br/>
            occurrences of the same text (containers can include the sub elements text too).<br/>
            
            </summary>
            <param name="zone">Anchor Zone</param>
            <param name="element">Anchor Element</param>
            <param name="index">Anchor Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.Client.GetTextIn(System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Get a text in a specified area indicate by an element,direction, width and height. The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="textZone">The zone to extract the text from</param>
            <param name="direction">Direction to analyze</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.Client.GetTextIn(System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get the text in a specific area relative to an element, index, direction, width and height. Direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="textZone">The zone to extract the text from</param>
            <param name="direction">Direction to analyze</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
            <param name="xOffset">identification rectangle x offset</param>
            <param name="yOffset">identification rectangle y offset</param>
        </member>
        <member name="M:experitestClient.Client.GetVisualDump(System.String)">
            <summary>
            Get visual dump
            </summary>
            <param name="type">Set the dump type</param>
        </member>
        <member name="M:experitestClient.Client.HybridClearCache(System.Boolean,System.Boolean)">
            <summary>
            Clear browser cookies and/or cache
            </summary>
            <param name="clearCookies">If true cookies will be cleared</param>
            <param name="clearCache">If true cache will be cleared</param>
        </member>
        <member name="M:experitestClient.Client.HybridGetHtml(System.String,System.Int32)">
            <summary>
            Get HTML content from a webView element
            </summary>
            <param name="webViewLocator">WebView locator string like id=web or empty for the first WebView in page</param>
            <param name="index">Element index</param>
        </member>
        <member name="M:experitestClient.Client.HybridRunJavascript(System.String,System.Int32,System.String)">
            <summary>
            Run Javascript in a WebView.
            </summary>
            <param name="webViewLocator">WebView locator string like id=web or empty for the first WebView in page</param>
            <param name="index">Element index</param>
            <param name="script">Javascript</param>
        </member>
        <member name="M:experitestClient.Client.HybridSelect(System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Select an option from a select element in a WebView. Using the input method and value to identify the element
            </summary>
            <param name="webViewLocator">WebView locator string like id=web or empty for the first WebView in page</param>
            <param name="index">Element index</param>
            <param name="method">Identification method (css/id)</param>
            <param name="value">Identification value</param>
            <param name="select">Option to select</param>
        </member>
        <member name="M:experitestClient.Client.HybridWaitForPageLoad(System.Int32)">
            <summary>
            Wait for web page to load
            </summary>
            <param name="timeout">Waiting Timeout in MiliSec</param>
        </member>
        <member name="M:experitestClient.Client.Install(System.String,System.Boolean)">
            <summary>
            Install the application in the given path on the device
            </summary>
            <param name="path">can be an APK/IPA etc. absolute path or an activity name from the application manager.</param>
            <param name="sign">If set to TRUE will sign the application (if not already signed)</param>
            <returns>installation success</returns>
        </member>
        <member name="M:experitestClient.Client.Install(System.String,System.Boolean,System.Boolean)">
            <summary>
            Install the application in the given path on the device
            </summary>
            <param name="path">can be an APK/IPA etc. absolute path or an activity name from the application manager.</param>
            <param name="instrument">If set to TRUE will sign the application (if not already instrumented)</param>
            <param name="keepData">If set to TRUE will keep application data</param>
            <returns>installation success</returns>
        </member>
        <member name="M:experitestClient.Client.IsElementBlank(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Check if a given element found in the specified zone is blank; if blank returns TRUE if not found returns FALSE
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Element to find</param>
            <param name="index">Element index</param>
            <param name="colorGroups">The number of color groups that indicate an image</param>
        </member>
        <member name="M:experitestClient.Client.IsElementFound(System.String,System.String)">
            <summary>
            Check if a given element is found in the specified zone; if the element found returns TRUE if not found returns FALSE
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Element to find</param>
        </member>
        <member name="M:experitestClient.Client.IsElementFound(System.String,System.String,System.Int32)">
            <summary>
            Check if a given element is found in the specified zone; if found returns TRUE if not found returns FALSE
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Element to find</param>
            <param name="index">Element index</param>
        </member>
        <member name="M:experitestClient.Client.IsFoundIn(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Search for an element and check if an element related to it exist. The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="searchElement">Search Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="elementFindZone">Find Element Zone</param>
            <param name="elementToFind">Element to Find</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.Client.IsTextFound(System.String,System.String,System.Boolean)">
            <summary>
            Check if a given text is found in the specified zone; if the element found returns TRUE if not found returns FALSE
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Element to find</param>
            <param name="ignoreCase">should command case sensitivity</param>
        </member>
        <member name="M:experitestClient.Client.Launch(System.String,System.Boolean,System.Boolean)">
            <summary>
            Launch activity
            </summary>
            <param name="activityURL">The application main activity or URL</param>
            <param name="instrument">If set to true then will launch in instrument mode</param>
            <param name="stopIfRunning">If set to true then will stop the running process before launching it</param>
        </member>
        <member name="M:experitestClient.Client.ListSelect(System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Select an element from a list. Used for non-touch devices like blackberry.<br/>
            
            </summary>
            <param name="sendRest">Navigate to the list start</param>
            <param name="sendNavigation">Send to navigate in the list</param>
            <param name="delay">Time to wait before sending a command (in MiliSec)</param>
            <param name="textToIdentify">Select text to Find</param>
            <param name="color">Color to filter</param>
            <param name="rounds">Maximum navigation rounds</param>
            <param name="sendonfind">Send on text find</param>
            <returns>true if element was found</returns>
        </member>
        <member name="M:experitestClient.Client.LongClick(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Long click on or near to an element (the proximity to the element is specified by a X-Y offset).<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
            <param name="clickCount">Number of Clicks</param>
            <param name="x">Horizontal Offset from Element</param>
            <param name="y">Vertical Offset from Element</param>
        </member>
        <member name="M:experitestClient.Client.Maximize">
            <summary>
            Maximize the working window
            </summary>
        </member>
        <member name="M:experitestClient.Client.MultiClick(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Click on an element with a finger.<br/>
            Note: element will be identified right before performing the gesutre
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.Client.MultiClickCoordinate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Click with a finger on given coordinate
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.Client.MultiClickOffset(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Click with a finger near an element, in given offset form the element.<br/>
            Note: element will be identified right before performing the gesutre
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.Client.MultiSwipe(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Swipe the screen in a given direction
            </summary>
            <param name="direction">Swipe direction</param>
            <param name="offset">Swipe offset</param>
            <param name="time">Swipe overall time</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.Client.MultiTouchDown(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Hold a finger Touched down on an element. Release with MultiTouchUp command.<br/>
            Note: element will be identified right before performing the gesture
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.Client.MultiTouchDownCoordinate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Hold a finger Touched down on a given coordinate
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.Client.MultiTouchMove(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Gesture-move a finger to the element, from the last coordinate touched down or moved to.<br/>
            Note: element will be identified right before performing the gesutre
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.Client.MultiTouchMoveCoordinate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Move a finger to the given coordinate, from the last coordinate touched down or moved to.
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.Client.MultiTouchUp(System.Int32)">
            <summary>
            Touch up with a finger, from the last coordinate touched down or moved to
            </summary>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.Client.MultiWait(System.Int32,System.Int32)">
            <summary>
            Wait with a finger in the last touch point, for the given time
            </summary>
            <param name="time">Wait time</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.Client.OpenDevice">
            <summary>
            Opens current device's screen.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.Client.P2cx(System.Int32)">
            <summary>
            Convert percentage into pixel.
            </summary>
            <param name="percentage">Screen Percentage</param>
        </member>
        <member name="M:experitestClient.Client.P2cy(System.Int32)">
            <summary>
            Convert percentage into pixel.
            </summary>
            <param name="percentage">Screen Percentage</param>
        </member>
        <member name="M:experitestClient.Client.PerformMultiGesture">
            <summary>
            Perform the multi-touch gesture steps which were added after the last StartMultiGestureStep command
            </summary>
        </member>
        <member name="M:experitestClient.Client.Pinch(System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            Pinch In/Out at X,Y in specific radius, if X and Y equal to 0, the pinch will be performed from the center of the screen. In most cases, pinching IN would be used to ZOOM OUT, and pinching OUT would be used to ZOOM IN.
            </summary>
            <param name="inside">Set 'true' to pinch in (zoom out), 'false' to pinch out (zoom in) </param>
            <param name="x">X center</param>
            <param name="y">Y center</param>
            <param name="radius">The pinch radius</param>
        </member>
        <member name="M:experitestClient.Client.Pinch(System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Pinch In/Out at X,Y in specific radius, if X and Y equal to 0, the pinch will be performed from the center of the screen. In most cases, pinching IN would be used to ZOOM OUT, and pinching OUT would be used to ZOOM IN.<br/>
            
            </summary>
            <param name="inside">Set 'true' to pinch in (zoom out), 'false' to pinch out (zoom in) </param>
            <param name="x">X center</param>
            <param name="y">Y center</param>
            <param name="radius">The pinch radius</param>
            <param name="horizontal">Vertical / horizontal pinch</param>
        </member>
        <member name="M:experitestClient.Client.PortForward(System.Int32,System.Int32)">
            <summary>
            Forward an agent port
            </summary>
            <param name="localPort">The local port</param>
            <param name="remotePort">The remote port</param>
            <returns>the remote port assigned</returns>
        </member>
        <member name="M:experitestClient.Client.PressWhileNotFound(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Press on a certain element (ElementToClick) while another element (ElementToFind)is not found.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="elementtoclick">Select Element To Click</param>
            <param name="elementtofind">Select Element To Find</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
            <param name="delay">Time to wait before clicking on the ElementToClick (in MiliSec)</param>
        </member>
        <member name="M:experitestClient.Client.PressWhileNotFound(System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Press on a certain element (ElementToClick) while another element (ElementToFind)is not found.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="elementtoclick">Select Element To Click</param>
            <param name="elementtoclickindex">Element To Click Index</param>
            <param name="elementtofind">Select Element To Find</param>
            <param name="elementtofindindex">Element To Find Index</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
            <param name="delay">Time to wait before clicking on the ElementToClick (in MiliSec)</param>
        </member>
        <member name="M:experitestClient.Client.Reboot(System.Int32)">
            <summary>
            Will reboot the device
            </summary>
            <param name="timeout">Timeout waiting for the device to reboot. Minimum value is 40000.</param>
            <returns>have device already been rebooted within given timeout</returns>
        </member>
        <member name="M:experitestClient.Client.ReleaseClient">
            <summary>
            Release Controller.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.Client.ReleaseDevice(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Release device as well as the agent assigned to it. It will enable other tests that are waiting to be executed to start doing so.
            </summary>
            <param name="deviceName">Name of the device to release</param>
            <param name="releaseAgent">Deprecated. If TRUE or FALSE then agent will be released</param>
            <param name="removeFromDeviceList">If TRUE then the device will be remove from the device list</param>
            <param name="releaseFromCloud">If TRUE then the device will be released from the cloud</param>
        </member>
        <member name="M:experitestClient.Client.Report(System.String,System.Boolean)">
            <summary>
            Add a step with a custom message to the test report.<br/>
            
            </summary>
            <param name="message">The message to report.</param>
            <param name="status">TRUE marks this step as successfully passed, FALSE marks it as failed.</param>
        </member>
        <member name="M:experitestClient.Client.Report(System.String,System.String,System.Boolean)">
            <summary>
            Add a step with a custom message and image to the test report.<br/>
            
            </summary>
            <param name="pathToImage">Pass to the image, can be either a local full path or a URL.</param>
            <param name="message">The message to report.</param>
            <param name="status">TRUE marks this step as successfully passed, FALSE marks it as failed.</param>
        </member>
        <member name="M:experitestClient.Client.ResetDeviceBridge">
            <summary>
            Reset Device Bridge.
            </summary>
        </member>
        <member name="M:experitestClient.Client.ResetDeviceBridge(System.String)">
            <summary>
            Reset Device Bridge.
            </summary>
            <param name="deviceType">A device type that is supported by the requested agent</param>
        </member>
        <member name="M:experitestClient.Client.RightClick(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Right-click on or near to an element (the proximity to the element is specified by a X-Y offset)
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
            <param name="clickCount">Number of Clicks</param>
            <param name="x">Horizontal Offset from Element</param>
            <param name="y">Vertical Offset from Element</param>
        </member>
        <member name="M:experitestClient.Client.Run(System.String)">
            <summary>
            Run the given command line as shell command on the device (adb for android and SSH for iOS).<br/>
            When running an executable a full pathshould be given.<br/>
            
            </summary>
            <param name="command">The command to run</param>
        </member>
        <member name="M:experitestClient.Client.RunLayoutTest(System.String)">
            <summary>
            Run a layout test
            </summary>
            <param name="xml">the xml of the layout tests</param>
        </member>
        <member name="M:experitestClient.Client.RunNativeAPICall(System.String,System.String,System.Int32,System.String)">
            <summary>
            Run native API call on the given element. 
            </summary>
            <param name="zone">Select Zone (should be NATIVE)</param>
            <param name="element">Select Element (should use xpath)</param>
            <param name="index">Element index</param>
            <param name="script">Script to execute</param>
        </member>
        <member name="M:experitestClient.Client.SendText(System.String)">
            <summary>
            Sends/inserts text to the application. Supports the following keyboard actions as well: {ENTER}, {BKSP}. Device actions can now be found under DeviceAction command.<br/>
            
            </summary>
            <param name="text">Text to send</param>
        </member>
        <member name="M:experitestClient.Client.SendWhileNotFound(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Send a given text while an element is not found
            </summary>
            <param name="toSend">Insert Text To Send</param>
            <param name="zone">Select Zone</param>
            <param name="elementtofind">Select Element to Find</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
            <param name="delay">Time to wait before sending a command (in MiliSec)</param>
        </member>
        <member name="M:experitestClient.Client.SendWhileNotFound(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Send a given text while an element is not found
            </summary>
            <param name="toSend">Insert Text To Send</param>
            <param name="zone">Select Zone</param>
            <param name="elementtofind">Select Element to Find</param>
            <param name="elementtofindindex">Element to Find Index</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
            <param name="delay">Time to wait before sending a command (in MiliSec)</param>
        </member>
        <member name="M:experitestClient.Client.SetApplicationTitle(System.String)">
            <summary>
            Sets the application title.<br/>
             Switch tested application/window.<br/>
             The title of the application is searched in the following order:<br/>
             1. search for windows with the given window ID (only if the title is a number).<br/>
             2. search for complete match.<br/>
             3. search for partial match (contains).<br/>
             4. Regular expression match.<br/>
             When working on the desktop use the 'desktop' as the application title.<br/>
            
            </summary>
            <param name="title">Insert New Application/Window Title</param>
        </member>
        <member name="M:experitestClient.Client.SetAuthenticationReply(System.String,System.Int32)">
            <summary>
            Set the reply type for later authentication requests.<br/>
            See online documentation for details.<br/>
            
            </summary>
            <param name="reply">The reply type to mock</param>
            <param name="delay">Delay after request in ms</param>
        </member>
        <member name="M:experitestClient.Client.SetDefaultClickDownTime(System.Int32)">
            <summary>
            Set the default click down time in milliseconds (default is 100)
            </summary>
            <param name="downTime">Click down time value</param>
        </member>
        <member name="M:experitestClient.Client.SetDefaultTimeout(System.Int32)">
            <summary>
            Set the default timeout for click commands
            </summary>
            <param name="newTimeout">Waiting Timeout in MiliSec</param>
            <returns>the new timeout</returns>
        </member>
        <member name="M:experitestClient.Client.SetDefaultWebView(System.String)">
            <summary>
            Set the WebView to work with
            </summary>
            <param name="webViewLocator">The locator of the WebView, empty to reset</param>
        </member>
        <member name="M:experitestClient.Client.SetDevice(System.String)">
            <summary>
            Sets the device.<br/>
            
            </summary>
            <param name="device">Device name</param>
        </member>
        <member name="M:experitestClient.Client.SetDragStartDelay(System.Int32)">
            <summary>
            Drag called after setting dragStartDelay will begin by long touch on the device in<br/>
            the initial drag location.<br/>
            
            </summary>
            <param name="delay">Delay value</param>
        </member>
        <member name="M:experitestClient.Client.SetInKeyDelay(System.Int32)">
            <summary>
            Set the time between key down and key up
            </summary>
            <param name="delay">Delay value</param>
        </member>
        <member name="M:experitestClient.Client.SetKeyToKeyDelay(System.Int32)">
            <summary>
            Set the time between two key press
            </summary>
            <param name="delay">Delay value</param>
        </member>
        <member name="M:experitestClient.Client.SetLanguage(System.String)">
            <summary>
            Set the OCR language
            </summary>
            <param name="language">The language to use or empty to reset to English</param>
        </member>
        <member name="M:experitestClient.Client.SetLanguagePropertiesFile(System.String)">
            <summary>
            Set language properties file
            </summary>
            <param name="propertiesfile">The language properties file path</param>
        </member>
        <member name="M:experitestClient.Client.SetLocation(System.String,System.String)">
            <summary>
            Sets device's location to specified coordinate. Currently supported only on android
            </summary>
            <param name="latitude">Latitude in decimal degrees from -90 to 90. Positive latitudes are north of the equator and negative latitudes are south of the equator.</param>
            <param name="longitude">Longitude in decimal degrees from -180 to 180. Positive longitudes are east of the Prime Meridian and negative longitudes are west of the Prime Meridian</param>
        </member>
        <member name="M:experitestClient.Client.SetMonitorPollingInterval(System.Int32)">
            <summary>
            Set monitor polling interval
            </summary>
            <param name="timemilli">The monitor polling time interval in milliseconds</param>
        </member>
        <member name="M:experitestClient.Client.SetMonitorTestState(System.String)">
            <summary>
            Set the test status to the monitors
            </summary>
            <param name="testStatus">Set the current status of the test to be used by the monitors</param>
        </member>
        <member name="M:experitestClient.Client.SetNetworkConditions(System.String)">
            <summary>
            Set profile for current device. To cancel profile leave the profile name empty
            </summary>
            <param name="profile">Set the profile to be used</param>
        </member>
        <member name="M:experitestClient.Client.SetNetworkConditions(System.String,System.Int32)">
            <summary>
            Set profile for current device for a specified duration. To cancel profile leave the profile name empty
            </summary>
            <param name="profile">Set the profile to be used</param>
            <param name="duration">Set the duration in milliseconds to which to set the profile (0=forever)</param>
        </member>
        <member name="M:experitestClient.Client.SetOcrIgnoreCase(System.Boolean)">
            <summary>
            Set the ignore case status (default is true).<br/>
            
            </summary>
            <param name="ignoreCase">should OCR avoid case sensitivity</param>
        </member>
        <member name="M:experitestClient.Client.SetOcrTrainingFilePath(System.String)">
            <param name="trainingPath">path to the OCR training file</param>
        </member>
        <member name="M:experitestClient.Client.SetPickerValues(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Set the values of the Picker element
            </summary>
            <param name="zoneName">Select Zone</param>
            <param name="elementName">Select Element</param>
            <param name="index">Element index</param>
            <param name="wheelIndex">Wheel Index</param>
            <param name="value">The value to set</param>
        </member>
        <member name="M:experitestClient.Client.SetProjectBaseDirectory(System.String)">
            <summary>
            Sets the project base directory.<br/>
            This method should be called first,before any other called is used.<br/>
            In case of working on a remote agent, the project path should be the path on the remote machine.<br/>
            
            </summary>
            <param name="projectBaseDirectory">the new project base directory.</param>
        </member>
        <member name="M:experitestClient.Client.SetProperty(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="key">key</param>
            <param name="value">Value</param>
        </member>
        <member name="M:experitestClient.Client.SetRedToBlue(System.Boolean)">
            <param name="redToBlue"></param>
        </member>
        <member name="M:experitestClient.Client.SetReporter(System.String,System.String)">
            <summary>
            Sets the reporter. Configure the internal reporter.<br/>
            
            </summary>
            <param name="reporterName">Comma seperated value string of reporter types. Supported types: html(=xml), pdf.</param>
            <param name="directory">The directory for the report to be generated in.</param>
            <returns>The reports directory path</returns>
        </member>
        <member name="M:experitestClient.Client.SetReporter(System.String,System.String,System.String)">
            <summary>
            Sets the reporter. Configure the internal reporter.<br/>
            
            </summary>
            <param name="reporterName">Comma seperated value string of reporter types. Supported types: html(=xml), pdf.</param>
            <param name="directory">The directory for the report to be generated in.</param>
            <param name="testName">The name of the test as would appear in the report.</param>
            <returns>The reports directory path</returns>
        </member>
        <member name="M:experitestClient.Client.SetShowImageAsLink(System.Boolean)">
            <summary>
            Show report images as link.<br/>
            
            </summary>
            <param name="showImageAsLink">show report images as link</param>
        </member>
        <member name="M:experitestClient.Client.SetShowImageInReport(System.Boolean)">
            <summary>
            Decide whether to include step screenshots in report.<br/>
            
            </summary>
            <param name="showImageInReport">when set to False will not show any screenshot in report</param>
        </member>
        <member name="M:experitestClient.Client.SetShowPassImageInReport(System.Boolean)">
            <summary>
            Decide whether to show screenshots of every step, or only failed steps in report.<br/>
            
            </summary>
            <param name="showPassImageInReport">when set to False will not show a screenshot of test steps that passed successfully</param>
        </member>
        <member name="M:experitestClient.Client.SetShowReport(System.Boolean)">
            <summary>
            when set to False will not show reports steps.<br/>
            
            </summary>
            <param name="showReport">when set to False will not show reports steps</param>
        </member>
        <member name="M:experitestClient.Client.SetSimCard(System.String)">
            <summary>
            Load or unload sim card (to unlaod sim-card name is equal to null) to the currently used device
            </summary>
            <param name="simCardName">the sim-card name, null to unload sim card form the device</param>
        </member>
        <member name="M:experitestClient.Client.SetSpeed(System.String)">
            <param name="speed"></param>
        </member>
        <member name="M:experitestClient.Client.SetWebAutoScroll(System.Boolean)">
            <summary>
            Set web autoscroll
            </summary>
            <param name="autoScroll">Set the autoscroll state</param>
        </member>
        <member name="M:experitestClient.Client.SetWindowSize(System.Int32,System.Int32)">
            <summary>
            Set the active windows size and movie it to be fully visible.<br/>
            
            </summary>
            <param name="width">Window width</param>
            <param name="height">Window height</param>
        </member>
        <member name="M:experitestClient.Client.Shake">
            <summary>
            Simulating Shake operation on the device.
            </summary>
        </member>
        <member name="M:experitestClient.Client.SimulateCapture(System.String)">
            <summary>
            SimulateCapture
            </summary>
            <param name="picturePath">picture's full path</param>
        </member>
        <member name="M:experitestClient.Client.Sleep(System.Int32)">
            <summary>
            Pause the script for a specified time.<br/>
            
            </summary>
            <param name="time">The time to pause in MiliSec</param>
        </member>
        <member name="M:experitestClient.Client.StartAudioPlay(System.String)">
            <summary>
            Start play audio file
            </summary>
            <param name="audioFile">Set the audio file to start playing</param>
        </member>
        <member name="M:experitestClient.Client.StartAudioRecording(System.String)">
            <summary>
            Start record audio file
            </summary>
            <param name="audioFile">Set the audio file name</param>
        </member>
        <member name="M:experitestClient.Client.StartCall(System.String,System.String,System.String,System.Int32)">
            <summary>
            Generate a phone call using Skype infrastructure
            </summary>
            <param name="skypeUser">Skype user</param>
            <param name="skypePassword">Skype password</param>
            <param name="number">Number to call include country code</param>
            <param name="duration">Call duration (0 is infinite or until EndCall)</param>
        </member>
        <member name="M:experitestClient.Client.StartLoggingDevice(System.String)">
            <summary>
            Start writing the current device's log to file
            </summary>
            <param name="path">Absolute path to log file, or where the log file should be created</param>
        </member>
        <member name="M:experitestClient.Client.StartMonitor(System.String)">
            <summary>
            Clear monitoring collection data collected so far. If packageName is not empty, the application identified by this packageName will start being monitored.<br/>
                
            </summary>
            <param name="packageName">Package name (Android) or Bundle ID (iOS) of application</param>
        </member>
        <member name="M:experitestClient.Client.StartMultiGesture(System.String)">
            <summary>
            Start a group of multi-touch gesture steps.<br/>
            Note: all steps will be performed only when executing the PerformMultiGestureStep command.<br/>
            See online documentation for details
            </summary>
            <param name="name">Gesture name</param>
        </member>
        <member name="M:experitestClient.Client.StartStepsGroup(System.String)">
            <summary>
            Start grouping steps<br/>
            
            </summary>
            <param name="caption">The group's caption which will appear at the report</param>
        </member>
        <member name="M:experitestClient.Client.StartTransaction(System.String)">
            <summary>
            Start to measure transaction duration<br/>
            
            </summary>
            <param name="name">Name of the transaction</param>
        </member>
        <member name="M:experitestClient.Client.StartVideoRecord">
            <summary>
            Start the video recording.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.Client.StopAudioPlay">
            <summary>
            Stop audio playing
            </summary>
        </member>
        <member name="M:experitestClient.Client.StopAudioRecording">
            <summary>
            Stop audio recording
            </summary>
        </member>
        <member name="M:experitestClient.Client.StopLoggingDevice">
            <summary>
            Stop writing the current device's log to file
            </summary>
        </member>
        <member name="M:experitestClient.Client.StopStepsGroup">
            <summary>
            Stop grouping steps<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.Client.StopVideoRecord">
            <summary>
            Stop the video recording.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.Client.Swipe(System.String,System.Int32)">
            <summary>
            Swipe the screen in a given direction
            </summary>
            <param name="direction">Direction to swipe</param>
            <param name="offset">Swipe offset</param>
        </member>
        <member name="M:experitestClient.Client.Swipe(System.String,System.Int32,System.Int32)">
            <summary>
            Swipe the screen in a given direction
            </summary>
            <param name="direction">Direction to swipe</param>
            <param name="offset">Swipe offset</param>
            <param name="time">Swipe overall time</param>
        </member>
        <member name="M:experitestClient.Client.SwipeWhileNotFound(System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Swipe a list to identify an element<br/>
            
            </summary>
            <param name="direction">Direction to swipe</param>
            <param name="offset">Swipe offset</param>
            <param name="zone">Select Zone</param>
            <param name="elementtofind">Select Element to Find</param>
            <param name="delay">Time to wait before sending a command (in MiliSec)</param>
            <param name="rounds">Maximum swipe rounds</param>
            <param name="click">If TRUE then click</param>
        </member>
        <member name="M:experitestClient.Client.SwipeWhileNotFound(System.String,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Swipe a list to identify an element<br/>
            
            </summary>
            <param name="direction">Direction to swipe</param>
            <param name="offset">Swipe offset</param>
            <param name="swipeTime">Swipe operation time</param>
            <param name="zone">Select Zone</param>
            <param name="elementtofind">Select Element to Find</param>
            <param name="delay">Time to wait before sending a command (in MiliSec)</param>
            <param name="rounds">Maximum swipe rounds</param>
            <param name="click">If TRUE then click</param>
        </member>
        <member name="M:experitestClient.Client.SwipeWhileNotFound(System.String,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Swipe a list to identify an element<br/>
            
            </summary>
            <param name="direction">Direction to swipe</param>
            <param name="offset">Swipe offset</param>
            <param name="swipeTime">Swipe operation time</param>
            <param name="zone">Select Zone</param>
            <param name="elementtofind">Select Element to Find</param>
            <param name="elementtofindindex">Element to Find Index</param>
            <param name="delay">Time to wait before sending a command (in MiliSec)</param>
            <param name="rounds">Maximum swipe rounds</param>
            <param name="click">If TRUE then click</param>
        </member>
        <member name="M:experitestClient.Client.Sync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Wait for the screen to be silent. Works on the graphical level of the screen.
            </summary>
            <param name="silentTime">The time for the screen to be silent in milliseconds</param>
            <param name="sensitivity">Sensitivity from 0 - 100 (0 is maximum sensitivity)</param>
            <param name="timeout">Waiting timeout in milliseconds</param>
            <returns>true if operation finished successfully</returns>
        </member>
        <member name="M:experitestClient.Client.SyncElements(System.Int32,System.Int32)">
            <summary>
            Wait for all the UI elements on the page to appear. Works on the dump level - checks for changes in the UI dump.
            </summary>
            <param name="silentTime">The period of time for the UI elements to be static in milliseconds.</param>
            <param name="timeout">Waiting timeout in milliseconds</param>
            <returns>true if operation finished successfully</returns>
        </member>
        <member name="M:experitestClient.Client.TextFilter(System.String,System.Int32)">
            <summary>
            Filter the text recognition text color for the next command.<br/>
            This setting will be applied on the next command only.<br/>
            It's only supported when you use text recognition (OCR).<br/>
            
            </summary>
            <param name="color">text color in RGB hex decimal string (0xFFFFFF for white).</param>
            <param name="sensitivity">Sensitivity from 0 - 100 (0 is no sensitivity)</param>
        </member>
        <member name="M:experitestClient.Client.TouchDown(System.String,System.String,System.Int32)">
            <summary>
            Hold Touch down on element, Release with TouchUp command.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
        </member>
        <member name="M:experitestClient.Client.TouchDownCoordinate(System.Int32,System.Int32)">
            <summary>
            Hold Touch down at X,Y coordinates related to the device screen, Release with TouchUp command.<br/>
            
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
        </member>
        <member name="M:experitestClient.Client.TouchMove(System.String,System.String,System.Int32)">
            <summary>
            Move from last Touched down element/coordinate to specified element location.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
        </member>
        <member name="M:experitestClient.Client.TouchMoveCoordinate(System.Int32,System.Int32)">
            <summary>
            Move from last Touched down element/coordinate to specified coordinate location.<br/>
            
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
        </member>
        <member name="M:experitestClient.Client.TouchUp">
            <summary>
            Touch Up from last coordinate touched down or moved to.
            </summary>
        </member>
        <member name="M:experitestClient.Client.Uninstall(System.String)">
            <summary>
            Uninstall the application
            </summary>
            <param name="application">The application name</param>
            <returns>uninstallation success</returns>
        </member>
        <member name="M:experitestClient.Client.VerifyElementFound(System.String,System.String,System.Int32)">
            <summary>
            Check if an element is found in a specified zone.<br/>
            An Exception (or Assertion) will be thrown if the element is not found.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order (=the number of times the element appears more and above the first time)</param>
        </member>
        <member name="M:experitestClient.Client.VerifyElementNotFound(System.String,System.String,System.Int32)">
            <summary>
            Check if an element is found in a specified zone.<br/>
            An Exception (or Assertion) will be thrown if the element is found.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order (=the number of times the element appears more and above the first time)</param>
        </member>
        <member name="M:experitestClient.Client.VerifyIn(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Verify that an element("elementToFind") is found near to another element("elementSearch").<br/>
            The direction can be UP, DOWN, LEFT and RIGHT.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="searchElement">Search Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="elementFindZone">Find Element Zone</param>
            <param name="elementToFind">Element to Find</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.Client.WaitForAudioPlayEnd(System.Int32)">
            <summary>
            Wait for audio file play to end
            </summary>
            <param name="timeout">Set the timeout</param>
        </member>
        <member name="M:experitestClient.Client.WaitForElement(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Wait for an element to appear in a specified zone
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element to Wait For</param>
            <param name="index">Element Order</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
        </member>
        <member name="M:experitestClient.Client.WaitForElementToVanish(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Wait for an element to vanish
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element to Wait For</param>
            <param name="index">Element Order</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
        </member>
        <member name="M:experitestClient.Client.WaitForWindow(System.String,System.Int32)">
            <summary>
            Wait for a window
            </summary>
            <param name="name">Window name</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
        </member>
        <member name="M:experitestClient.Client.WaitForDevice(System.String,System.Int32)">
            <summary>
            Command for the Executor Add-On. This command allows you to wait for a device with specific properties, and then execute the test on the device once it's available. The query is build using XPath syntax. For available properties of a specific device, use the GetDeviceInformation command. In order to release the device and make it available for other future tests, use the Release command.
            This command acts as follows:
            1. Gets a list of all devices that match the user's query.
            2. Filters out devices that are not available (reserved/locked/off-line).
            3. Filters out devices that have already been locked for the current client.
            4. Sorts the list (preferring local devices over remote ones). 
            5. Iterates over the devices list, and over the available agents, until a match is found.
            6. If a match is found, the device is locked and set active, the previous used agent (if any) turns free, and the new one is locked. 
            7. The following applies only in the first call for a specific client: if the current agent does not match the required license, the command tries to lock another agent.
            8. If no match is found or a timeout has passed, an exception is thrown.
            * The command returns the name of the newly locked device.
            ** If the device is already locked for the client - it will not be set again. The command will look for an other device.
            </summary>
            <param name="quary">Search device query</param>
            <param name="timeout">Timeout in milliseconds to wait for an available device according to the search query</param>
            <returns>device name if and only if command succeeded; otherwise an exception is thrown</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:experitestClient.Client.getLastCommandResultMap" -->
        <member name="T:experitestClient.Client.ClientMonitor">
            <summary>
            Instantiates a new client. The host and port can be used to connect to remote machine
            If used with local machine '127.0.0.1' and 8889 should be used. The agent port can be
            controlled from the SeeTest UI.
            </summary>
            <param name="host">the host</param>
            <param name="port"> the port</param>
            
        </member>
        <member name="T:experitestClient.VBClient">
            <summary>
            The Class VBClient. The VBClient is used to control the agent that is part of the SeeTest from unmanaged code.
            The client and the agent can be on the same machine or on different machines. It uses
            XML-RPC calls to communicate with the agent.
            </summary>
        </member>
        <member name="F:experitestClient.VBClient.clientProxy">
            <summary>
            The clien
            </summary>
        </member>
        <member name="F:experitestClient.VBClient.url">
            <summary>
            The url.
            </summary>
        </member>
        <member name="F:experitestClient.VBClient.map">
            <summary>
            The dictionary.
            </summary>
        </member>
        <member name="F:experitestClient.VBClient.throwExceptionOnFail">
            <summary>
            The throw exception on failed.
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.#ctor">
             <summary>
             Instantiates a new client.
            Uses the defaults '127.0.0.1' and port 8888.
             </summary>
        </member>
        <member name="M:experitestClient.VBClient.#ctor(experitestClient.Configuration)">
             <summary>
             Instantiates a new client.
            Uses the the configuration object.
             </summary>
        </member>
        <member name="M:experitestClient.VBClient.PingServer">
             <summary>
             ping Server.<br/>
            
             </summary>
        </member>
        <member name="M:experitestClient.VBClient.Connect(System.String,System.Int32,System.String)">
            <summary>
            connect to the client.
            </summary>
            <param name="host">the host</param>
            <param name="port"> the port</param>
            <param name="clientName">the client</param>
        </member>
        <member name="M:experitestClient.VBClient.Configure(experitestClient.Configuration)">
             <summary>
            
             </summary>
             <param name="Config"></param>
             <returns></returns>
        </member>
        <member name="M:experitestClient.VBClient.GetClientConfigurationFromUI">
            <summary>
            Get configuration from UI popup dialog
            </summary>
            <returns>Array of strings with configurations</returns>
        </member>
        <member name="M:experitestClient.VBClient.AddDevice(System.String,System.String)">
            <summary>
            Add / reserve device. return the name that should be used to access the device.
            </summary>
            <param name="serialNumber">the device serial number / UDID</param>
            <param name="deviceName">the device suggested name (will add an index if the name exists)</param>
        </member>
        <member name="M:experitestClient.VBClient.ApplicationClearData(System.String)">
            <summary>
            Clear application data
            </summary>
            <param name="packageName">The application's package name</param>
        </member>
        <member name="M:experitestClient.VBClient.ApplicationClose(System.String)">
            <summary>
            Close application
            </summary>
            <param name="packageName">The application's package name</param>
            <returns>successful close</returns>
        </member>
        <member name="M:experitestClient.VBClient.Capture">
            <summary>
            Capture the current screen and add it to the report.
            </summary>
            <returns>the path of the captured image file.</returns>
        </member>
        <member name="M:experitestClient.VBClient.captureLine(System.String)">
            <summary>
            Capture the current screen and add it to the report with the given line.
            </summary>
            <param name="line">the line to be used in the report</param>
            <returns>the path of the captured image file.</returns>
        </member>
        <member name="M:experitestClient.VBClient.CaptureElement(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create new element from image in given device coordinates, with given name and similarity percentage.
            </summary>
            <param name="name">New element's name</param>
            <param name="x">Image origin x coordinate</param>
            <param name="y">Image origin y coordinate</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <param name="similarity">the similarity between pictures</param>
        </member>
        <member name="M:experitestClient.VBClient.clearAllSms">
            <summary>
            Clear all SMS on a device.
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.ClearDeviceLog">
            <summary>
            Clear device log
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.ClearLocation">
            <summary>
            Clears the mock location. Currently supported only on android
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.Click(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Click an element.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
            <param name="clickCount">Number of Clicks</param>
        </member>
        <member name="M:experitestClient.VBClient.clickOffset(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Click on or near to an element. The offset is specified by x, y.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
            <param name="clickCount">Number of Clicks</param>
            <param name="x">Horizontal Offset from Element</param>
            <param name="y">Vertical Offset from Element</param>
        </member>
        <member name="M:experitestClient.VBClient.ClickCoordinate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Click in window X,Y coordinates related to the device screen.<br/>
            
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="clickCount">Number of clicks</param>
        </member>
        <member name="M:experitestClient.VBClient.ClickIn(System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Search for an element and click on an element near him. The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="searchElement">Search Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="clickElement">Click Element</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.VBClient.clickIn2(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Search for an element and click on an element near him. The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="searchElement">Search Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="clickElementZone">Click Element Zone</param>
            <param name="clickElement">Click Element</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.VBClient.clickIn2_5(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Search for an element and click on an element near him. The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="searchElement">Search Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="clickElementZone">Click Element Zone</param>
            <param name="clickElement">Click Element</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
            <param name="clickCount">Number of Clicks</param>
        </member>
        <member name="M:experitestClient.VBClient.clickIn3(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Search for an element and click on an element near him. The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="searchElement">Search Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="clickElementZone">Click Element Zone</param>
            <param name="clickElement">Click Element</param>
            <param name="clickElementIndex">Click Element Index</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
            <param name="clickCount">Number of Clicks</param>
        </member>
        <member name="M:experitestClient.VBClient.ClickTableCell(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Clicking on table cell by its header element and row element.
            </summary>
            <param name="zone">Select zone</param>
            <param name="headerElement">Select table header element</param>
            <param name="headerIndex">Header element index</param>
            <param name="rowElement">Select table row element</param>
            <param name="rowIndex">Row element index</param>
        </member>
        <member name="M:experitestClient.VBClient.CloseDevice">
            <summary>
            Close connection to the device.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.CloseDeviceReflection">
            <summary>
            Hides the current device screen. If the current device screen is not open, this command does nothing.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.CloseKeyboard">
            <summary>
            Close device keyboard
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.CollectSupportData(System.String,System.String,System.String,System.String,System.String,System.String)">
            <param name="zipDestination">The path in  which the zip will be saved. If empty, a default path will be used</param>
            <param name="applicationPath">An absolute path to the application file on the PC</param>
            <param name="device">Device name</param>
            <param name="scenario">Description of your scenario</param>
            <param name="expectedResult">The result you expected</param>
            <param name="actualResult">The result you got after running the scenario</param>
            <returns>returns the collectSupportData folder path</returns>
        </member>
        <member name="M:experitestClient.VBClient.CollectSupportData2(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <param name="zipDestination">The path in  which the zip will be saved. If empty, a default path will be used</param>
            <param name="applicationPath">An absolute path to the application file on the PC</param>
            <param name="device">Device name</param>
            <param name="scenario">Description of your scenario</param>
            <param name="expectedResult">The result you expected</param>
            <param name="actualResult">The result you got after running the scenario</param>
            <param name="withCloudData">Include cloud data in the support folder</param>
            <param name="onlyLatestLogs">Include only latest logs in the support folder</param>
            <returns>returns the collectSupportData folder path</returns>
        </member>
        <member name="M:experitestClient.VBClient.DeviceAction(System.String)">
            <summary>
            Execute any of the following device actions:<br/>
            Home, Back, Power, Landscape, Portrait, Change Orientation, Menu, Unlock, Paste, Volume Up, Volume Down, Recent Apps.<br/>
            
            </summary>
            <param name="action">Name of action to perform</param>
        </member>
        <member name="M:experitestClient.VBClient.Drag(System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Drag an element in a specified zone.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element to drag</param>
            <param name="index">Element Order (=the number of times the element appears more and above the first time)</param>
            <param name="xOffset">X drag offset</param>
            <param name="yOffset">Y drag offset</param>
        </member>
        <member name="M:experitestClient.VBClient.DragCoordinates(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Drag base on coordinates
            </summary>
            <param name="x1">First point X</param>
            <param name="y1">First point Y</param>
            <param name="x2">Second point X</param>
            <param name="y2">Second point Y</param>
        </member>
        <member name="M:experitestClient.VBClient.dragCoordinates2(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Drag base on coordinates
            </summary>
            <param name="x1">First point X</param>
            <param name="y1">First point Y</param>
            <param name="x2">Second point X</param>
            <param name="y2">Second point Y</param>
            <param name="time">Drag time (ms)</param>
        </member>
        <member name="M:experitestClient.VBClient.DragDrop(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Drag an element in a specified zone and drop it at a second element<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="dragElement">Drag element</param>
            <param name="dragIndex">Drag element index</param>
            <param name="dropElement">Drop element</param>
            <param name="dropIndex">Drop element index</param>
        </member>
        <member name="M:experitestClient.VBClient.Drop">
            <summary>
            Drop all project information.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.ElementGetProperty(System.String,System.String,System.Int32,System.String)">
            <summary>
            Get element property
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="property">Property</param>
        </member>
        <member name="M:experitestClient.VBClient.elementGetTableRowsCount2(System.String,System.Int32,System.Boolean)">
            <summary>
            Get table total or visible rows count
            </summary>
            <param name="tableLocator">Table Locator</param>
            <param name="tableIndex">Table Locator Index</param>
            <param name="visible">Only visible</param>
        </member>
        <member name="M:experitestClient.VBClient.ElementGetTableRowsCount(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Get table total or visible rows count
            </summary>
            <param name="zone">Select Zone</param>
            <param name="tableLocator">Select Table Locator</param>
            <param name="tableIndex">Table Locator Index</param>
            <param name="visible">Only visible</param>
        </member>
        <member name="M:experitestClient.VBClient.ElementGetTableValue(System.String,System.Int32,System.String)">
            <summary>
            Get table cell value
            </summary>
            <param name="rowLocator">Row Locator</param>
            <param name="rowLocatorIndex">Row Locator Index</param>
            <param name="columnLocator">Column Locator</param>
        </member>
        <member name="M:experitestClient.VBClient.ElementGetText(System.String,System.String,System.Int32)">
            <summary>
            Get text from element
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
        </member>
        <member name="M:experitestClient.VBClient.ElementListPick(System.String,System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Select an element in a list (first make the element visible)
            </summary>
            <param name="listZone">Select List Zone</param>
            <param name="listLocator">List locator</param>
            <param name="elementZone">Select Element Zone</param>
            <param name="elementLocator">Element locator</param>
            <param name="index">Element index</param>
            <param name="click">If TRUE then click</param>
        </member>
        <member name="M:experitestClient.VBClient.ElementListSelect(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Select an element in a list (first make the element visible)
            </summary>
            <param name="listLocator">List locator</param>
            <param name="elementLocator">Element locator</param>
            <param name="index">Element index</param>
            <param name="click">If TRUE then click</param>
        </member>
        <member name="M:experitestClient.VBClient.ElementListVisible(System.String,System.String,System.Int32)">
            <summary>
            Make the target element visible
            </summary>
            <param name="listLocator">List locator</param>
            <param name="elementLocator">Element locator</param>
            <param name="index">Element index</param>
        </member>
        <member name="M:experitestClient.VBClient.elementScrollToTableRow2(System.String,System.Int32,System.Int32)">
            <summary>
            Scroll table / list to the given row
            </summary>
            <param name="tableLocator">Table Locator</param>
            <param name="tableIndex">Table Locator Index</param>
            <param name="rowIndex">Row Index</param>
        </member>
        <member name="M:experitestClient.VBClient.ElementScrollToTableRow(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Scroll table / list to the given row
            </summary>
            <param name="zone">Select Zone</param>
            <param name="tableLocator">Select Table Locator</param>
            <param name="tableIndex">Table Locator Index</param>
            <param name="rowIndex">Row Index</param>
        </member>
        <member name="M:experitestClient.VBClient.ElementSendText(System.String,System.String,System.Int32,System.String)">
            <summary>
            Send text to an element
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="text">Text to Send</param>
        </member>
        <member name="M:experitestClient.VBClient.ElementSetProperty(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Set element property
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="property">Property</param>
            <param name="value">The value to set</param>
        </member>
        <member name="M:experitestClient.VBClient.ElementSwipe(System.String,System.String,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Swipe the screen in a given direction
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to swipe</param>
            <param name="offset">Swipe offset</param>
            <param name="time">Swipe overall time</param>
        </member>
        <member name="M:experitestClient.VBClient.elementSwipeWhileNotFound(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Swipe a component to search for an element or text.<br/>
            
            </summary>
            <param name="componentZone">Zone of the container element;</param>
            <param name="componentElement">The container element;</param>
            <param name="direction">Direction to swipe;</param>
            <param name="offset">Swipe offset;</param>
            <param name="swipeTime">Swipe operation time;</param>
            <param name="elementfindzone">Select Zone of the sought element;</param>
            <param name="elementtofind">Select element to find from the drop-down list OR (for OCR text identification) insert text into the empty box in the drop-down list;</param>
            <param name="elementtofindindex">The sought element's index (i.e., the number of times the element appears after the first appearance minus two). Index=0 refers to the first appearance of the element; Index=1 refers to the second appearance of the element, etc.</param>
            <param name="delay">Time to wait before sending a command (in milliseconds);</param>
            <param name="rounds">Maximum swipe rounds;</param>
            <param name="click">Click the found element if TRUE.</param>
        </member>
        <member name="M:experitestClient.VBClient.EndTransaction(System.String)">
            <summary>
            End measuring transaction duration<br/>
            
            </summary>
            <param name="name">Name of the transaction</param>
        </member>
        <member name="M:experitestClient.VBClient.Exit">
            <summary>
            Exit SeeTest.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.ExtractLanguageFiles(System.String,System.String,System.Boolean)">
            <summary>
            Extracts the language files of an application to the specified directory
            </summary>
            <param name="application">Language files source application</param>
            <param name="directoryPath">Directory's full path where to extract the language files</param>
            <param name="allowOverwrite">Whether to allow overwriting existing langauge files in directory</param>
        </member>
        <member name="M:experitestClient.VBClient.FindElements(System.String,System.String,System.String,System.String)">
            <param name="zone">zone of the element (NATIVE / WEB)</param>
            <param name="parent">full xpath of parent (empty string / return of previous call)</param>
            <param name="by">currently only xpath supported</param>
            <param name="value">full xpath of the element to search</param>
        </member>
        <member name="M:experitestClient.VBClient.Flick(System.String,System.Int32)">
            <summary>
            Flick the screen in a given direction
            </summary>
            <param name="direction">Direction to flick</param>
            <param name="offset">Flick offset</param>
        </member>
        <member name="M:experitestClient.VBClient.FlickCoordinate(System.Int32,System.Int32,System.String)">
            <summary>
            Flick from a given point in a given direction
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="direction">Direction to flick</param>
        </member>
        <member name="M:experitestClient.VBClient.FlickElement(System.String,System.String,System.Int32,System.String)">
            <summary>
            Flick the element in a given direction
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
            <param name="direction">Direction to flick</param>
        </member>
        <member name="M:experitestClient.VBClient.ForceTouch(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Force touch on element and drag for distance.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
            <param name="duration">Duration</param>
            <param name="force">Force level in percent</param>
            <param name="dragDistanceX">Horizontal distance of drag from Element</param>
            <param name="dragDistanceY">Vertical distance of drag from Element</param>
            <param name="dragDuration">Drag Duration</param>
        </member>
        <member name="M:experitestClient.VBClient.GenerateReport">
            <summary>
            Generates a SeeTest report.<br/>
            
            </summary>
            <returns>returns the report's folder path</returns>
        </member>
        <member name="M:experitestClient.VBClient.generateReport2(System.Boolean)">
            <summary>
            Generates a SeeTest report.<br/>
            
            </summary>
            <param name="releaseClient">If FALSE then device will not be released</param>
            <returns>returns the report's folder path</returns>
        </member>
        <member name="M:experitestClient.VBClient.GenerateReport(System.Boolean,System.String)">
            <summary>
            Generates a SeeTest report and attach it to external tool entity.<br/>
            Suply a path to java properties file containning the data for the entity update.<br/>
            See documentation online for details.<br/>
            
            </summary>
            <param name="releaseClient">If FALSE then device will not be released</param>
            <param name="propFilePath">path to Java properties file</param>
            <returns>returns the report's folder path, or the created entity if exists</returns>
        </member>
        <member name="M:experitestClient.VBClient.getAllSms(System.Int32)">
            <summary>
            Get all  SMS or wait up to 'timeout' milliseconds.
            </summary>
            <param name="timeout">Wait timeout</param>
        </member>
        <member name="M:experitestClient.VBClient.GetAllValues(System.String,System.String,System.String)">
            <summary>
            Get all the values of a property in a given element. Note: Supported properties are available on Object spy. 
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="property">Property</param>
        </member>
        <member name="M:experitestClient.VBClient.GetAllZonesWithElement(System.String)">
            <summary>
            Get all the zones names that has an element with the given name.
            </summary>
            <param name="element">the element name to search for</param>
            <returns>comma delimited string with the zones names</returns>
        </member>
        <member name="M:experitestClient.VBClient.GetAvailableAgentPort">
            <summary>
            Get available Agent Port.<br/>
            Get a port number where a SeeTest agent listens.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.getAvailableAgentPort2(System.String)">
            <summary>
            Get available Agent Port.<br/>
            Get a port number of a SeeTest agent supporting (licensed to) the given<br/>
            device type.<br/>
            
            </summary>
            <param name="featureName">A device type that is supported by the requested agent. One of ANDROID, IPHONE, BLACKBERRY or WINDOWS_PHONE.</param>
        </member>
        <member name="M:experitestClient.VBClient.GetConnectedDevices">
            <summary>
            Get connected devices.
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.GetCoordinateColor(System.Int32,System.Int32)">
            <summary>
            Returns an integer representation in the RGB color model for coordinate (x,y) 
            </summary>
            <param name="x">the X coordinate of the target pixel</param>
            <param name="y">the Y coordinate of the target pixel</param>
        </member>
        <member name="M:experitestClient.VBClient.GetCounter(System.String)">
            <summary>
            Get monitor counter value
            </summary>
            <param name="counterName">Counter name (cpu, memory...)</param>
        </member>
        <member name="M:experitestClient.VBClient.GetCurrentApplicationName">
            <summary>
            Get the name of application that is running in the foreground of the device
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.GetDefaultTimeout">
            <summary>
            Gets the default timeout.
            </summary>
            <returns>the default timeout</returns>
        </member>
        <member name="M:experitestClient.VBClient.GetDeviceLog">
            <summary>
            Download device log to reports directory
            </summary>
            <returns>path to the file that was downloaded</returns>
        </member>
        <member name="M:experitestClient.VBClient.GetDeviceProperty(System.String)">
            <summary>
                        Get device property value for the given key.<br/>
                    
            </summary>
            <param name="key">device_property</param>
            <returns>The property value</returns>
        </member>
        <member name="M:experitestClient.VBClient.GetDevicesInformation">
            <summary>
            Get an XML formated string containing all the devices information
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.GetElementCount(System.String,System.String)">
            <summary>
            Count the number of times an element is been found in the current screen.
            </summary>
            <param name="zone">the element zone</param>
            <param name="element">the element name</param>
            <returns>the number of times the elment was identified</returns>
        </member>
        <member name="M:experitestClient.VBClient.GetElementCountIn(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Search for an element and count the number of times an element is found near him.The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zoneName">Select Zone</param>
            <param name="elementSearch">Element Search</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="elementCountZone">Select Zone</param>
            <param name="elementCount">Element to count</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.VBClient.GetInstalledApplications">
            <summary>
            Get a string containing all installed application on the device
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.getLastSMS(System.Int32)">
            <summary>
            Get last received SMS or wait up to 'timeout' milliseconds to receive one.
            </summary>
            <param name="timeout">Wait timeout</param>
        </member>
        <member name="M:experitestClient.VBClient.GetMonitorsData(System.String)">
            <summary>
            Returns a CSV format of the running monitors (CPU/Memomy) for all<br/>
                  devices<br/>
                
            </summary>
            <param name="cSVfilepath">If set will save the CSV in the given location (should be absolute path), if not set will use a default location.</param>
        </member>
        <member name="M:experitestClient.VBClient.GetPickerValues(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Get all values from picker, works only on iOS
            </summary>
            <param name="zone">Select Zone</param>
            <param name="pickerElement">Select Picker Element</param>
            <param name="index">Picker index</param>
            <param name="wheelIndex">Wheel index at picker component</param>
        </member>
        <member name="M:experitestClient.VBClient.GetPosition(System.String,System.String)">
            <summary>
            Gets position an position. The position is absolute.<br/>
            
            </summary>
            <param name="zone">the element zone</param>
            <param name="element">Select Element to Get Position For</param>
            <returns>the comma delimited string with the X,Y of the element coordination.</returns>
        </member>
        <member name="M:experitestClient.VBClient.GetPositionWindowRelative(System.String,System.String)">
            <summary>
            Get the element position relative to the window (and not the screen absolute coordinates)
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element to Get Position For</param>
            <returns>the comma delimited string with the X,Y of the element coordination.</returns>
        </member>
        <member name="M:experitestClient.VBClient.GetProperty(System.String)">
            <summary>
            Get SeeTest's property value for the given key (in %appdata%\seetest\app.properties file).<br/>
            
            </summary>
            <param name="property">The property key.</param>
            <returns>the property value</returns>
        </member>
        <member name="M:experitestClient.VBClient.GetSimCard">
            <summary>
            Get sim-card name assigned to the currently used device
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.GetSimCards(System.Boolean)">
            <summary>
            Get list of sim-card names which are either ready to use or already assigned (depeand on the argument) to the currently used device
            </summary>
            <param name="readyToUse">If TRUE return all available sim cards which are ready to use. If FALSE return all sim cards assigned for the device</param>
        </member>
        <member name="M:experitestClient.VBClient.GetTableCellText(System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get text content of table cell by its header element and row element.
            </summary>
            <param name="zone">Select zone</param>
            <param name="headerElement">Select table header element</param>
            <param name="headerIndex">Header element index</param>
            <param name="rowElement">Select table row element</param>
            <param name="rowIndex">Row element index</param>
            <param name="width">Width of the search</param>
            <param name="height">Height of the search</param>
        </member>
        <member name="M:experitestClient.VBClient.GetText(System.String)">
            <summary>
            Gets the text that appears in a specified zone.<br/>
            
            </summary>
            <param name="zone">Select the Zone to Get Text From, 'TEXT' and 'NATIVE' can be used as well.</param>
            <returns>the text</returns>
        </member>
        <member name="M:experitestClient.VBClient.GetTextIn(System.String,System.String,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Get a text in a specified area indicate by an element, direction, width and height.<br/>
            The direction can be UP, DOWN, LEFT and RIGHT.<br/>
            Use this method to get the text found in an area related to a given element.<br/>
            When using zone NATIVE, only leafs elements will be searched in order to prevent multiple<br/>
            occurrences of the same text (containers can include the sub elements text too).<br/>
            
            </summary>
            <param name="zone">Anchor Zone</param>
            <param name="element">Anchor Element</param>
            <param name="index">Anchor Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.VBClient.getTextIn2(System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Get a text in a specified area indicate by an element,direction, width and height. The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="textZone">The zone to extract the text from</param>
            <param name="direction">Direction to analyze</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.VBClient.getTextIn3(System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get the text in a specific area relative to an element, index, direction, width and height. Direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="textZone">The zone to extract the text from</param>
            <param name="direction">Direction to analyze</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
            <param name="xOffset">identification rectangle x offset</param>
            <param name="yOffset">identification rectangle y offset</param>
        </member>
        <member name="M:experitestClient.VBClient.GetVisualDump(System.String)">
            <summary>
            Get visual dump
            </summary>
            <param name="type">Set the dump type</param>
        </member>
        <member name="M:experitestClient.VBClient.HybridClearCache(System.Boolean,System.Boolean)">
            <summary>
            Clear browser cookies and/or cache
            </summary>
            <param name="clearCookies">If true cookies will be cleared</param>
            <param name="clearCache">If true cache will be cleared</param>
        </member>
        <member name="M:experitestClient.VBClient.HybridGetHtml(System.String,System.Int32)">
            <summary>
            Get HTML content from a webView element
            </summary>
            <param name="webViewLocator">WebView locator string like id=web or empty for the first WebView in page</param>
            <param name="index">Element index</param>
        </member>
        <member name="M:experitestClient.VBClient.HybridRunJavascript(System.String,System.Int32,System.String)">
            <summary>
            Run Javascript in a WebView.
            </summary>
            <param name="webViewLocator">WebView locator string like id=web or empty for the first WebView in page</param>
            <param name="index">Element index</param>
            <param name="script">Javascript</param>
        </member>
        <member name="M:experitestClient.VBClient.HybridSelect(System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Select an option from a select element in a WebView. Using the input method and value to identify the element
            </summary>
            <param name="webViewLocator">WebView locator string like id=web or empty for the first WebView in page</param>
            <param name="index">Element index</param>
            <param name="method">Identification method (css/id)</param>
            <param name="value">Identification value</param>
            <param name="select">Option to select</param>
        </member>
        <member name="M:experitestClient.VBClient.HybridWaitForPageLoad(System.Int32)">
            <summary>
            Wait for web page to load
            </summary>
            <param name="timeout">Waiting Timeout in MiliSec</param>
        </member>
        <member name="M:experitestClient.VBClient.Install(System.String,System.Boolean)">
            <summary>
            Install the application in the given path on the device
            </summary>
            <param name="path">can be an APK/IPA etc. absolute path or an activity name from the application manager.</param>
            <param name="sign">If set to TRUE will sign the application (if not already signed)</param>
            <returns>installation success</returns>
        </member>
        <member name="M:experitestClient.VBClient.install2(System.String,System.Boolean,System.Boolean)">
            <summary>
            Install the application in the given path on the device
            </summary>
            <param name="path">can be an APK/IPA etc. absolute path or an activity name from the application manager.</param>
            <param name="instrument">If set to TRUE will sign the application (if not already instrumented)</param>
            <param name="keepData">If set to TRUE will keep application data</param>
            <returns>installation success</returns>
        </member>
        <member name="M:experitestClient.VBClient.IsElementBlank(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Check if a given element found in the specified zone is blank; if blank returns TRUE if not found returns FALSE
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Element to find</param>
            <param name="index">Element index</param>
            <param name="colorGroups">The number of color groups that indicate an image</param>
        </member>
        <member name="M:experitestClient.VBClient.isElementFound2(System.String,System.String)">
            <summary>
            Check if a given element is found in the specified zone; if the element found returns TRUE if not found returns FALSE
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Element to find</param>
        </member>
        <member name="M:experitestClient.VBClient.IsElementFound(System.String,System.String,System.Int32)">
            <summary>
            Check if a given element is found in the specified zone; if found returns TRUE if not found returns FALSE
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Element to find</param>
            <param name="index">Element index</param>
        </member>
        <member name="M:experitestClient.VBClient.IsFoundIn(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Search for an element and check if an element related to it exist. The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="searchElement">Search Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="elementFindZone">Find Element Zone</param>
            <param name="elementToFind">Element to Find</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.VBClient.IsTextFound(System.String,System.String,System.Boolean)">
            <summary>
            Check if a given text is found in the specified zone; if the element found returns TRUE if not found returns FALSE
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Element to find</param>
            <param name="ignoreCase">should command case sensitivity</param>
        </member>
        <member name="M:experitestClient.VBClient.Launch(System.String,System.Boolean,System.Boolean)">
            <summary>
            Launch activity
            </summary>
            <param name="activityURL">The application main activity or URL</param>
            <param name="instrument">If set to true then will launch in instrument mode</param>
            <param name="stopIfRunning">If set to true then will stop the running process before launching it</param>
        </member>
        <member name="M:experitestClient.VBClient.ListSelect(System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Select an element from a list. Used for non-touch devices like blackberry.<br/>
            
            </summary>
            <param name="sendRest">Navigate to the list start</param>
            <param name="sendNavigation">Send to navigate in the list</param>
            <param name="delay">Time to wait before sending a command (in MiliSec)</param>
            <param name="textToIdentify">Select text to Find</param>
            <param name="color">Color to filter</param>
            <param name="rounds">Maximum navigation rounds</param>
            <param name="sendonfind">Send on text find</param>
            <returns>true if element was found</returns>
        </member>
        <member name="M:experitestClient.VBClient.LongClick(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Long click on or near to an element (the proximity to the element is specified by a X-Y offset).<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
            <param name="clickCount">Number of Clicks</param>
            <param name="x">Horizontal Offset from Element</param>
            <param name="y">Vertical Offset from Element</param>
        </member>
        <member name="M:experitestClient.VBClient.Maximize">
            <summary>
            Maximize the working window
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.MultiClick(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Click on an element with a finger.<br/>
            Note: element will be identified right before performing the gesutre
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.VBClient.MultiClickCoordinate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Click with a finger on given coordinate
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.VBClient.MultiClickOffset(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Click with a finger near an element, in given offset form the element.<br/>
            Note: element will be identified right before performing the gesutre
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.VBClient.MultiSwipe(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Swipe the screen in a given direction
            </summary>
            <param name="direction">Swipe direction</param>
            <param name="offset">Swipe offset</param>
            <param name="time">Swipe overall time</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.VBClient.MultiTouchDown(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Hold a finger Touched down on an element. Release with MultiTouchUp command.<br/>
            Note: element will be identified right before performing the gesture
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.VBClient.MultiTouchDownCoordinate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Hold a finger Touched down on a given coordinate
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.VBClient.MultiTouchMove(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Gesture-move a finger to the element, from the last coordinate touched down or moved to.<br/>
            Note: element will be identified right before performing the gesutre
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.VBClient.MultiTouchMoveCoordinate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Move a finger to the given coordinate, from the last coordinate touched down or moved to.
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.VBClient.MultiTouchUp(System.Int32)">
            <summary>
            Touch up with a finger, from the last coordinate touched down or moved to
            </summary>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.VBClient.MultiWait(System.Int32,System.Int32)">
            <summary>
            Wait with a finger in the last touch point, for the given time
            </summary>
            <param name="time">Wait time</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.VBClient.OpenDevice">
            <summary>
            Opens current device's screen.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.P2cx(System.Int32)">
            <summary>
            Convert percentage into pixel.
            </summary>
            <param name="percentage">Screen Percentage</param>
        </member>
        <member name="M:experitestClient.VBClient.P2cy(System.Int32)">
            <summary>
            Convert percentage into pixel.
            </summary>
            <param name="percentage">Screen Percentage</param>
        </member>
        <member name="M:experitestClient.VBClient.PerformMultiGesture">
            <summary>
            Perform the multi-touch gesture steps which were added after the last StartMultiGestureStep command
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.Pinch(System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            Pinch In/Out at X,Y in specific radius, if X and Y equal to 0, the pinch will be performed from the center of the screen. In most cases, pinching IN would be used to ZOOM OUT, and pinching OUT would be used to ZOOM IN.
            </summary>
            <param name="inside">Set 'true' to pinch in (zoom out), 'false' to pinch out (zoom in) </param>
            <param name="x">X center</param>
            <param name="y">Y center</param>
            <param name="radius">The pinch radius</param>
        </member>
        <member name="M:experitestClient.VBClient.Pinch2(System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Pinch In/Out at X,Y in specific radius, if X and Y equal to 0, the pinch will be performed from the center of the screen. In most cases, pinching IN would be used to ZOOM OUT, and pinching OUT would be used to ZOOM IN.<br/>
            
            </summary>
            <param name="inside">Set 'true' to pinch in (zoom out), 'false' to pinch out (zoom in) </param>
            <param name="x">X center</param>
            <param name="y">Y center</param>
            <param name="radius">The pinch radius</param>
            <param name="horizontal">Vertical / horizontal pinch</param>
        </member>
        <member name="M:experitestClient.VBClient.PortForward(System.Int32,System.Int32)">
            <summary>
            Forward an agent port
            </summary>
            <param name="localPort">The local port</param>
            <param name="remotePort">The remote port</param>
            <returns>the remote port assigned</returns>
        </member>
        <member name="M:experitestClient.VBClient.PressWhileNotFound(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Press on a certain element (ElementToClick) while another element (ElementToFind)is not found.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="elementtoclick">Select Element To Click</param>
            <param name="elementtofind">Select Element To Find</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
            <param name="delay">Time to wait before clicking on the ElementToClick (in MiliSec)</param>
        </member>
        <member name="M:experitestClient.VBClient.pressWhileNotFound2(System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Press on a certain element (ElementToClick) while another element (ElementToFind)is not found.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="elementtoclick">Select Element To Click</param>
            <param name="elementtoclickindex">Element To Click Index</param>
            <param name="elementtofind">Select Element To Find</param>
            <param name="elementtofindindex">Element To Find Index</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
            <param name="delay">Time to wait before clicking on the ElementToClick (in MiliSec)</param>
        </member>
        <member name="M:experitestClient.VBClient.Reboot(System.Int32)">
            <summary>
            Will reboot the device
            </summary>
            <param name="timeout">Timeout waiting for the device to reboot. Minimum value is 40000.</param>
            <returns>have device already been rebooted within given timeout</returns>
        </member>
        <member name="M:experitestClient.VBClient.ReleaseClient">
            <summary>
            Release Controller.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.ReleaseDevice(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Release device as well as the agent assigned to it. It will enable other tests that are waiting to be executed to start doing so.
            </summary>
            <param name="deviceName">Name of the device to release</param>
            <param name="releaseAgent">Deprecated. If TRUE or FALSE then agent will be released</param>
            <param name="removeFromDeviceList">If TRUE then the device will be remove from the device list</param>
            <param name="releaseFromCloud">If TRUE then the device will be released from the cloud</param>
        </member>
        <member name="M:experitestClient.VBClient.Report(System.String,System.Boolean)">
            <summary>
            Add a step with a custom message to the test report.<br/>
            
            </summary>
            <param name="message">The message to report.</param>
            <param name="status">TRUE marks this step as successfully passed, FALSE marks it as failed.</param>
        </member>
        <member name="M:experitestClient.VBClient.ReportWithImage(System.String,System.String,System.Boolean)">
            <summary>
            Add a step with a custom message and image to the test report.<br/>
            
            </summary>
            <param name="pathToImage">Pass to the image, can be either a local full path or a URL.</param>
            <param name="message">The message to report.</param>
            <param name="status">TRUE marks this step as successfully passed, FALSE marks it as failed.</param>
        </member>
        <member name="M:experitestClient.VBClient.ResetDeviceBridge">
            <summary>
            Reset Device Bridge.
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.ResetDeviceBridgeOS(System.String)">
            <summary>
            Reset Device Bridge.
            </summary>
            <param name="deviceType">A device type that is supported by the requested agent</param>
        </member>
        <member name="M:experitestClient.VBClient.RightClick(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Right-click on or near to an element (the proximity to the element is specified by a X-Y offset)
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
            <param name="clickCount">Number of Clicks</param>
            <param name="x">Horizontal Offset from Element</param>
            <param name="y">Vertical Offset from Element</param>
        </member>
        <member name="M:experitestClient.VBClient.Run(System.String)">
            <summary>
            Run the given command line as shell command on the device (adb for android and SSH for iOS).<br/>
            When running an executable a full pathshould be given.<br/>
            
            </summary>
            <param name="command">The command to run</param>
        </member>
        <member name="M:experitestClient.VBClient.LayoutTest(System.String)">
            <summary>
            Run a layout test
            </summary>
            <param name="xml">the xml of the layout tests</param>
        </member>
        <member name="M:experitestClient.VBClient.RunNativeAPICall(System.String,System.String,System.Int32,System.String)">
            <summary>
            Run native API call on the given element. 
            </summary>
            <param name="zone">Select Zone (should be NATIVE)</param>
            <param name="element">Select Element (should use xpath)</param>
            <param name="index">Element index</param>
            <param name="script">Script to execute</param>
        </member>
        <member name="M:experitestClient.VBClient.SendText(System.String)">
            <summary>
            Sends/inserts text to the application. Supports the following keyboard actions as well: {ENTER}, {BKSP}. Device actions can now be found under DeviceAction command.<br/>
            
            </summary>
            <param name="text">Text to send</param>
        </member>
        <member name="M:experitestClient.VBClient.SendWhileNotFound(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Send a given text while an element is not found
            </summary>
            <param name="toSend">Insert Text To Send</param>
            <param name="zone">Select Zone</param>
            <param name="elementtofind">Select Element to Find</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
            <param name="delay">Time to wait before sending a command (in MiliSec)</param>
        </member>
        <member name="M:experitestClient.VBClient.sendWhileNotFound2(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Send a given text while an element is not found
            </summary>
            <param name="toSend">Insert Text To Send</param>
            <param name="zone">Select Zone</param>
            <param name="elementtofind">Select Element to Find</param>
            <param name="elementtofindindex">Element to Find Index</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
            <param name="delay">Time to wait before sending a command (in MiliSec)</param>
        </member>
        <member name="M:experitestClient.VBClient.SetApplicationTitle(System.String)">
            <summary>
            Sets the application title.<br/>
             Switch tested application/window.<br/>
             The title of the application is searched in the following order:<br/>
             1. search for windows with the given window ID (only if the title is a number).<br/>
             2. search for complete match.<br/>
             3. search for partial match (contains).<br/>
             4. Regular expression match.<br/>
             When working on the desktop use the 'desktop' as the application title.<br/>
            
            </summary>
            <param name="title">Insert New Application/Window Title</param>
        </member>
        <member name="M:experitestClient.VBClient.SetAuthenticationReply(System.String,System.Int32)">
            <summary>
            Set the reply type for later authentication requests.<br/>
            See online documentation for details.<br/>
            
            </summary>
            <param name="reply">The reply type to mock</param>
            <param name="delay">Delay after request in ms</param>
        </member>
        <member name="M:experitestClient.VBClient.SetDefaultClickDownTime(System.Int32)">
            <summary>
            Set the default click down time in milliseconds (default is 100)
            </summary>
            <param name="downTime">Click down time value</param>
        </member>
        <member name="M:experitestClient.VBClient.SetDefaultTimeout(System.Int32)">
            <summary>
            Set the default timeout for click commands
            </summary>
            <param name="newTimeout">Waiting Timeout in MiliSec</param>
            <returns>the new timeout</returns>
        </member>
        <member name="M:experitestClient.VBClient.SetDefaultWebView(System.String)">
            <summary>
            Set the WebView to work with
            </summary>
            <param name="webViewLocator">The locator of the WebView, empty to reset</param>
        </member>
        <member name="M:experitestClient.VBClient.SetDevice(System.String)">
            <summary>
            Sets the device.<br/>
            
            </summary>
            <param name="device">Device name</param>
        </member>
        <member name="M:experitestClient.VBClient.SetDragStartDelay(System.Int32)">
            <summary>
            Drag called after setting dragStartDelay will begin by long touch on the device in<br/>
            the initial drag location.<br/>
            
            </summary>
            <param name="delay">Delay value</param>
        </member>
        <member name="M:experitestClient.VBClient.SetInKeyDelay(System.Int32)">
            <summary>
            Set the time between key down and key up
            </summary>
            <param name="delay">Delay value</param>
        </member>
        <member name="M:experitestClient.VBClient.SetKeyToKeyDelay(System.Int32)">
            <summary>
            Set the time between two key press
            </summary>
            <param name="delay">Delay value</param>
        </member>
        <member name="M:experitestClient.VBClient.SetLanguage(System.String)">
            <summary>
            Set the OCR language
            </summary>
            <param name="language">The language to use or empty to reset to English</param>
        </member>
        <member name="M:experitestClient.VBClient.SetLanguagePropertiesFile(System.String)">
            <summary>
            Set language properties file
            </summary>
            <param name="propertiesfile">The language properties file path</param>
        </member>
        <member name="M:experitestClient.VBClient.SetLocation(System.String,System.String)">
            <summary>
            Sets device's location to specified coordinate. Currently supported only on android
            </summary>
            <param name="latitude">Latitude in decimal degrees from -90 to 90. Positive latitudes are north of the equator and negative latitudes are south of the equator.</param>
            <param name="longitude">Longitude in decimal degrees from -180 to 180. Positive longitudes are east of the Prime Meridian and negative longitudes are west of the Prime Meridian</param>
        </member>
        <member name="M:experitestClient.VBClient.SetMonitorPollingInterval(System.Int32)">
            <summary>
            Set monitor polling interval
            </summary>
            <param name="timemilli">The monitor polling time interval in milliseconds</param>
        </member>
        <member name="M:experitestClient.VBClient.SetMonitorTestState(System.String)">
            <summary>
            Set the test status to the monitors
            </summary>
            <param name="testStatus">Set the current status of the test to be used by the monitors</param>
        </member>
        <member name="M:experitestClient.VBClient.SetNetworkConditions(System.String)">
            <summary>
            Set profile for current device. To cancel profile leave the profile name empty
            </summary>
            <param name="profile">Set the profile to be used</param>
        </member>
        <member name="M:experitestClient.VBClient.SetNetworkConditions2(System.String,System.Int32)">
            <summary>
            Set profile for current device for a specified duration. To cancel profile leave the profile name empty
            </summary>
            <param name="profile">Set the profile to be used</param>
            <param name="duration">Set the duration in milliseconds to which to set the profile (0=forever)</param>
        </member>
        <member name="M:experitestClient.VBClient.SetOcrIgnoreCase(System.Boolean)">
            <summary>
            Set the ignore case status (default is true).<br/>
            
            </summary>
            <param name="ignoreCase">should OCR avoid case sensitivity</param>
        </member>
        <member name="M:experitestClient.VBClient.SetOcrTrainingFilePath(System.String)">
            <param name="trainingPath">path to the OCR training file</param>
        </member>
        <member name="M:experitestClient.VBClient.SetPickerValues(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Set the values of the Picker element
            </summary>
            <param name="zoneName">Select Zone</param>
            <param name="elementName">Select Element</param>
            <param name="index">Element index</param>
            <param name="wheelIndex">Wheel Index</param>
            <param name="value">The value to set</param>
        </member>
        <member name="M:experitestClient.VBClient.SetProjectBaseDirectory(System.String)">
            <summary>
            Sets the project base directory.<br/>
            This method should be called first,before any other called is used.<br/>
            In case of working on a remote agent, the project path should be the path on the remote machine.<br/>
            
            </summary>
            <param name="projectBaseDirectory">the new project base directory.</param>
        </member>
        <member name="M:experitestClient.VBClient.SetProperty(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="key">key</param>
            <param name="value">Value</param>
        </member>
        <member name="M:experitestClient.VBClient.SetRedToBlue(System.Boolean)">
            <param name="redToBlue"></param>
        </member>
        <member name="M:experitestClient.VBClient.SetReporter(System.String,System.String)">
            <summary>
            Sets the reporter. Configure the internal reporter.<br/>
            
            </summary>
            <param name="reporterName">Comma seperated value string of reporter types. Supported types: html(=xml), pdf.</param>
            <param name="directory">The directory for the report to be generated in.</param>
            <returns>The reports directory path</returns>
        </member>
        <member name="M:experitestClient.VBClient.setReporter2(System.String,System.String,System.String)">
            <summary>
            Sets the reporter. Configure the internal reporter.<br/>
            
            </summary>
            <param name="reporterName">Comma seperated value string of reporter types. Supported types: html(=xml), pdf.</param>
            <param name="directory">The directory for the report to be generated in.</param>
            <param name="testName">The name of the test as would appear in the report.</param>
            <returns>The reports directory path</returns>
        </member>
        <member name="M:experitestClient.VBClient.SetShowImageAsLink(System.Boolean)">
            <summary>
            Show report images as link.<br/>
            
            </summary>
            <param name="showImageAsLink">show report images as link</param>
        </member>
        <member name="M:experitestClient.VBClient.SetShowImageInReport(System.Boolean)">
            <summary>
            Decide whether to include step screenshots in report.<br/>
            
            </summary>
            <param name="showImageInReport">when set to False will not show any screenshot in report</param>
        </member>
        <member name="M:experitestClient.VBClient.SetShowPassImageInReport(System.Boolean)">
            <summary>
            Decide whether to show screenshots of every step, or only failed steps in report.<br/>
            
            </summary>
            <param name="showPassImageInReport">when set to False will not show a screenshot of test steps that passed successfully</param>
        </member>
        <member name="M:experitestClient.VBClient.SetShowReport(System.Boolean)">
            <summary>
            when set to False will not show reports steps.<br/>
            
            </summary>
            <param name="showReport">when set to False will not show reports steps</param>
        </member>
        <member name="M:experitestClient.VBClient.SetSimCard(System.String)">
            <summary>
            Load or unload sim card (to unlaod sim-card name is equal to null) to the currently used device
            </summary>
            <param name="simCardName">the sim-card name, null to unload sim card form the device</param>
        </member>
        <member name="M:experitestClient.VBClient.SetSpeed(System.String)">
            <param name="speed"></param>
        </member>
        <member name="M:experitestClient.VBClient.SetWebAutoScroll(System.Boolean)">
            <summary>
            Set web autoscroll
            </summary>
            <param name="autoScroll">Set the autoscroll state</param>
        </member>
        <member name="M:experitestClient.VBClient.SetWindowSize(System.Int32,System.Int32)">
            <summary>
            Set the active windows size and movie it to be fully visible.<br/>
            
            </summary>
            <param name="width">Window width</param>
            <param name="height">Window height</param>
        </member>
        <member name="M:experitestClient.VBClient.Shake">
            <summary>
            Simulating Shake operation on the device.
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.SimulateCapture(System.String)">
            <summary>
            SimulateCapture
            </summary>
            <param name="picturePath">picture's full path</param>
        </member>
        <member name="M:experitestClient.VBClient.Sleep(System.Int32)">
            <summary>
            Pause the script for a specified time.<br/>
            
            </summary>
            <param name="time">The time to pause in MiliSec</param>
        </member>
        <member name="M:experitestClient.VBClient.StartAudioPlay(System.String)">
            <summary>
            Start play audio file
            </summary>
            <param name="audioFile">Set the audio file to start playing</param>
        </member>
        <member name="M:experitestClient.VBClient.StartAudioRecording(System.String)">
            <summary>
            Start record audio file
            </summary>
            <param name="audioFile">Set the audio file name</param>
        </member>
        <member name="M:experitestClient.VBClient.StartCall(System.String,System.String,System.String,System.Int32)">
            <summary>
            Generate a phone call using Skype infrastructure
            </summary>
            <param name="skypeUser">Skype user</param>
            <param name="skypePassword">Skype password</param>
            <param name="number">Number to call include country code</param>
            <param name="duration">Call duration (0 is infinite or until EndCall)</param>
        </member>
        <member name="M:experitestClient.VBClient.StartLoggingDevice(System.String)">
            <summary>
            Start writing the current device's log to file
            </summary>
            <param name="path">Absolute path to log file, or where the log file should be created</param>
        </member>
        <member name="M:experitestClient.VBClient.StartMonitor(System.String)">
            <summary>
            Clear monitoring collection data collected so far. If packageName is not empty, the application identified by this packageName will start being monitored.<br/>
                
            </summary>
            <param name="packageName">Package name (Android) or Bundle ID (iOS) of application</param>
        </member>
        <member name="M:experitestClient.VBClient.StartMultiGesture(System.String)">
            <summary>
            Start a group of multi-touch gesture steps.<br/>
            Note: all steps will be performed only when executing the PerformMultiGestureStep command.<br/>
            See online documentation for details
            </summary>
            <param name="name">Gesture name</param>
        </member>
        <member name="M:experitestClient.VBClient.StartStepsGroup(System.String)">
            <summary>
            Start grouping steps<br/>
            
            </summary>
            <param name="caption">The group's caption which will appear at the report</param>
        </member>
        <member name="M:experitestClient.VBClient.StartTransaction(System.String)">
            <summary>
            Start to measure transaction duration<br/>
            
            </summary>
            <param name="name">Name of the transaction</param>
        </member>
        <member name="M:experitestClient.VBClient.StartVideoRecord">
            <summary>
            Start the video recording.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.StopAudioPlay">
            <summary>
            Stop audio playing
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.StopAudioRecording">
            <summary>
            Stop audio recording
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.StopLoggingDevice">
            <summary>
            Stop writing the current device's log to file
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.StopStepsGroup">
            <summary>
            Stop grouping steps<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.StopVideoRecord">
            <summary>
            Stop the video recording.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.Swipe(System.String,System.Int32)">
            <summary>
            Swipe the screen in a given direction
            </summary>
            <param name="direction">Direction to swipe</param>
            <param name="offset">Swipe offset</param>
        </member>
        <member name="M:experitestClient.VBClient.swipe2(System.String,System.Int32,System.Int32)">
            <summary>
            Swipe the screen in a given direction
            </summary>
            <param name="direction">Direction to swipe</param>
            <param name="offset">Swipe offset</param>
            <param name="time">Swipe overall time</param>
        </member>
        <member name="M:experitestClient.VBClient.SwipeWhileNotFound(System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Swipe a list to identify an element<br/>
            
            </summary>
            <param name="direction">Direction to swipe</param>
            <param name="offset">Swipe offset</param>
            <param name="zone">Select Zone</param>
            <param name="elementtofind">Select Element to Find</param>
            <param name="delay">Time to wait before sending a command (in MiliSec)</param>
            <param name="rounds">Maximum swipe rounds</param>
            <param name="click">If TRUE then click</param>
        </member>
        <member name="M:experitestClient.VBClient.swipeWhileNotFound3(System.String,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Swipe a list to identify an element<br/>
            
            </summary>
            <param name="direction">Direction to swipe</param>
            <param name="offset">Swipe offset</param>
            <param name="swipeTime">Swipe operation time</param>
            <param name="zone">Select Zone</param>
            <param name="elementtofind">Select Element to Find</param>
            <param name="delay">Time to wait before sending a command (in MiliSec)</param>
            <param name="rounds">Maximum swipe rounds</param>
            <param name="click">If TRUE then click</param>
        </member>
        <member name="M:experitestClient.VBClient.swipeWhileNotFound2(System.String,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Swipe a list to identify an element<br/>
            
            </summary>
            <param name="direction">Direction to swipe</param>
            <param name="offset">Swipe offset</param>
            <param name="swipeTime">Swipe operation time</param>
            <param name="zone">Select Zone</param>
            <param name="elementtofind">Select Element to Find</param>
            <param name="elementtofindindex">Element to Find Index</param>
            <param name="delay">Time to wait before sending a command (in MiliSec)</param>
            <param name="rounds">Maximum swipe rounds</param>
            <param name="click">If TRUE then click</param>
        </member>
        <member name="M:experitestClient.VBClient.Sync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Wait for the screen to be silent. Works on the graphical level of the screen.
            </summary>
            <param name="silentTime">The time for the screen to be silent in milliseconds</param>
            <param name="sensitivity">Sensitivity from 0 - 100 (0 is maximum sensitivity)</param>
            <param name="timeout">Waiting timeout in milliseconds</param>
            <returns>true if operation finished successfully</returns>
        </member>
        <member name="M:experitestClient.VBClient.SyncElements(System.Int32,System.Int32)">
            <summary>
            Wait for all the UI elements on the page to appear. Works on the dump level - checks for changes in the UI dump.
            </summary>
            <param name="silentTime">The period of time for the UI elements to be static in milliseconds.</param>
            <param name="timeout">Waiting timeout in milliseconds</param>
            <returns>true if operation finished successfully</returns>
        </member>
        <member name="M:experitestClient.VBClient.TextFilter(System.String,System.Int32)">
            <summary>
            Filter the text recognition text color for the next command.<br/>
            This setting will be applied on the next command only.<br/>
            It's only supported when you use text recognition (OCR).<br/>
            
            </summary>
            <param name="color">text color in RGB hex decimal string (0xFFFFFF for white).</param>
            <param name="sensitivity">Sensitivity from 0 - 100 (0 is no sensitivity)</param>
        </member>
        <member name="M:experitestClient.VBClient.TouchDown(System.String,System.String,System.Int32)">
            <summary>
            Hold Touch down on element, Release with TouchUp command.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
        </member>
        <member name="M:experitestClient.VBClient.TouchDownCoordinate(System.Int32,System.Int32)">
            <summary>
            Hold Touch down at X,Y coordinates related to the device screen, Release with TouchUp command.<br/>
            
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
        </member>
        <member name="M:experitestClient.VBClient.TouchMove(System.String,System.String,System.Int32)">
            <summary>
            Move from last Touched down element/coordinate to specified element location.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
        </member>
        <member name="M:experitestClient.VBClient.TouchMoveCoordinate(System.Int32,System.Int32)">
            <summary>
            Move from last Touched down element/coordinate to specified coordinate location.<br/>
            
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
        </member>
        <member name="M:experitestClient.VBClient.TouchUp">
            <summary>
            Touch Up from last coordinate touched down or moved to.
            </summary>
        </member>
        <member name="M:experitestClient.VBClient.Uninstall(System.String)">
            <summary>
            Uninstall the application
            </summary>
            <param name="application">The application name</param>
            <returns>uninstallation success</returns>
        </member>
        <member name="M:experitestClient.VBClient.VerifyElementFound(System.String,System.String,System.Int32)">
            <summary>
            Check if an element is found in a specified zone.<br/>
            An Exception (or Assertion) will be thrown if the element is not found.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order (=the number of times the element appears more and above the first time)</param>
        </member>
        <member name="M:experitestClient.VBClient.VerifyElementNotFound(System.String,System.String,System.Int32)">
            <summary>
            Check if an element is found in a specified zone.<br/>
            An Exception (or Assertion) will be thrown if the element is found.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order (=the number of times the element appears more and above the first time)</param>
        </member>
        <member name="M:experitestClient.VBClient.VerifyIn(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Verify that an element("elementToFind") is found near to another element("elementSearch").<br/>
            The direction can be UP, DOWN, LEFT and RIGHT.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="searchElement">Search Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="elementFindZone">Find Element Zone</param>
            <param name="elementToFind">Element to Find</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.VBClient.WaitForAudioPlayEnd(System.Int32)">
            <summary>
            Wait for audio file play to end
            </summary>
            <param name="timeout">Set the timeout</param>
        </member>
        <member name="M:experitestClient.VBClient.WaitForElement(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Wait for an element to appear in a specified zone
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element to Wait For</param>
            <param name="index">Element Order</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
        </member>
        <member name="M:experitestClient.VBClient.WaitForElementToVanish(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Wait for an element to vanish
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element to Wait For</param>
            <param name="index">Element Order</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
        </member>
        <member name="M:experitestClient.VBClient.WaitForWindow(System.String,System.Int32)">
            <summary>
            Wait for a window
            </summary>
            <param name="name">Window name</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
        </member>
        <member name="M:experitestClient.VBClient.WaitForDevice(System.String,System.Int32)">
            <summary>
            Command for the Executor Add-On. This command allows you to wait for a device with specific properties, and then execute the test on the device once it's available. The query is build using XPath syntax. For available properties of a specific device, use the GetDeviceInformation command. In order to release the device and make it available for other future tests, use the Release command.
            This command acts as follows:
            1. Gets a list of all devices that match the user's query.
            2. Filters out devices that are not available (reserved/locked/off-line).
            3. Filters out devices that have already been locked for the current client.
            4. Sorts the list (preferring local devices over remote ones). 
            5. Iterates over the devices list, and over the available agents, until a match is found.
            6. If a match is found, the device is locked and set active, the previous used agent (if any) turns free, and the new one is locked. 
            7. The following applies only in the first call for a specific client: if the current agent does not match the required license, the command tries to lock another agent.
            8. If no match is found or a timeout has passed, an exception is thrown.
            * The command returns the name of the newly locked device.
            ** If the device is already locked for the client - it will not be set again. The command will look for an other device.
            </summary>
            <param name="quary">Search device query</param>
            <param name="timeout">Timeout in milliseconds to wait for an available device according to the search query</param>
            <returns>device name if and only if command succeeded; otherwise an exception is thrown</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:experitestClient.VBClient.getLastCommandResultMap" -->
        <member name="T:experitestClient.VBClient.ClientMonitor">
             <summary>
             Instantiates a new client. The host and port can be used to connect to remote machine
             If used with local machine '127.0.0.1' and 8889 should be used. The agent port can be
             controlled from the SeeTest UI.
             </summary>
             <param name="host">the host</param>
             <param name="port"> the port</param>
            
        </member>
        <member name="M:experitestClient.ClientRpc.AddDevice(System.String,System.String,System.String)">
            <summary>
            Add / reserve device. return the name that should be used to access the device.
            </summary>
            <param name="serialNumber">the device serial number / UDID</param>
            <param name="deviceName">the device suggested name (will add an index if the name exists)</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ApplicationClearData(System.String,System.String)">
            <summary>
            Clear application data
            </summary>
            <param name="packageName">The application's package name</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ApplicationClose(System.String,System.String)">
            <summary>
            Close application
            </summary>
            <param name="packageName">The application's package name</param>
            <returns>successful close</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.Capture(System.String)">
            <summary>
            Capture the current screen and add it to the report.
            </summary>
            <returns>the path of the captured image file.</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.Capture(System.String,System.String)">
            <summary>
            Capture the current screen and add it to the report with the given line.
            </summary>
            <param name="line">the line to be used in the report</param>
            <returns>the path of the captured image file.</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.CaptureElement(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create new element from image in given device coordinates, with given name and similarity percentage.
            </summary>
            <param name="name">New element's name</param>
            <param name="x">Image origin x coordinate</param>
            <param name="y">Image origin y coordinate</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <param name="similarity">the similarity between pictures</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ClearAllSms(System.String)">
            <summary>
            Clear all SMS on a device.
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.ClearDeviceLog(System.String)">
            <summary>
            Clear device log
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.ClearLocation(System.String)">
            <summary>
            Clears the mock location. Currently supported only on android
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.Click(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Click an element.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
            <param name="clickCount">Number of Clicks</param>
        </member>
        <member name="M:experitestClient.ClientRpc.Click(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Click on or near to an element. The offset is specified by x, y.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
            <param name="clickCount">Number of Clicks</param>
            <param name="x">Horizontal Offset from Element</param>
            <param name="y">Vertical Offset from Element</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ClickCoordinate(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Click in window X,Y coordinates related to the device screen.<br/>
            
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="clickCount">Number of clicks</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ClickIn(System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Search for an element and click on an element near him. The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="searchElement">Search Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="clickElement">Click Element</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ClickIn(System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Search for an element and click on an element near him. The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="searchElement">Search Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="clickElementZone">Click Element Zone</param>
            <param name="clickElement">Click Element</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ClickIn(System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Search for an element and click on an element near him. The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="searchElement">Search Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="clickElementZone">Click Element Zone</param>
            <param name="clickElement">Click Element</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
            <param name="clickCount">Number of Clicks</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ClickIn(System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Search for an element and click on an element near him. The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="searchElement">Search Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="clickElementZone">Click Element Zone</param>
            <param name="clickElement">Click Element</param>
            <param name="clickElementIndex">Click Element Index</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
            <param name="clickCount">Number of Clicks</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ClickTableCell(System.String,System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Clicking on table cell by its header element and row element.
            </summary>
            <param name="zone">Select zone</param>
            <param name="headerElement">Select table header element</param>
            <param name="headerIndex">Header element index</param>
            <param name="rowElement">Select table row element</param>
            <param name="rowIndex">Row element index</param>
        </member>
        <member name="M:experitestClient.ClientRpc.CloseDevice(System.String)">
            <summary>
            Close connection to the device.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.CloseDeviceReflection(System.String)">
            <summary>
            Hides the current device screen. If the current device screen is not open, this command does nothing.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.CloseKeyboard(System.String)">
            <summary>
            Close device keyboard
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.CollectSupportData(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <param name="zipDestination">The path in  which the zip will be saved. If empty, a default path will be used</param>
            <param name="applicationPath">An absolute path to the application file on the PC</param>
            <param name="device">Device name</param>
            <param name="scenario">Description of your scenario</param>
            <param name="expectedResult">The result you expected</param>
            <param name="actualResult">The result you got after running the scenario</param>
            <returns>returns the collectSupportData folder path</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.CollectSupportData(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <param name="zipDestination">The path in  which the zip will be saved. If empty, a default path will be used</param>
            <param name="applicationPath">An absolute path to the application file on the PC</param>
            <param name="device">Device name</param>
            <param name="scenario">Description of your scenario</param>
            <param name="expectedResult">The result you expected</param>
            <param name="actualResult">The result you got after running the scenario</param>
            <param name="withCloudData">Include cloud data in the support folder</param>
            <param name="onlyLatestLogs">Include only latest logs in the support folder</param>
            <returns>returns the collectSupportData folder path</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.DeviceAction(System.String,System.String)">
            <summary>
            Execute any of the following device actions:<br/>
            Home, Back, Power, Landscape, Portrait, Change Orientation, Menu, Unlock, Paste, Volume Up, Volume Down, Recent Apps.<br/>
            
            </summary>
            <param name="action">Name of action to perform</param>
        </member>
        <member name="M:experitestClient.ClientRpc.Drag(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Drag an element in a specified zone.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element to drag</param>
            <param name="index">Element Order (=the number of times the element appears more and above the first time)</param>
            <param name="xOffset">X drag offset</param>
            <param name="yOffset">Y drag offset</param>
        </member>
        <member name="M:experitestClient.ClientRpc.DragCoordinates(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Drag base on coordinates
            </summary>
            <param name="x1">First point X</param>
            <param name="y1">First point Y</param>
            <param name="x2">Second point X</param>
            <param name="y2">Second point Y</param>
        </member>
        <member name="M:experitestClient.ClientRpc.DragCoordinates(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Drag base on coordinates
            </summary>
            <param name="x1">First point X</param>
            <param name="y1">First point Y</param>
            <param name="x2">Second point X</param>
            <param name="y2">Second point Y</param>
            <param name="time">Drag time (ms)</param>
        </member>
        <member name="M:experitestClient.ClientRpc.DragDrop(System.String,System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Drag an element in a specified zone and drop it at a second element<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="dragElement">Drag element</param>
            <param name="dragIndex">Drag element index</param>
            <param name="dropElement">Drop element</param>
            <param name="dropIndex">Drop element index</param>
        </member>
        <member name="M:experitestClient.ClientRpc.Drop(System.String)">
            <summary>
            Drop all project information.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.ElementGetProperty(System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Get element property
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="property">Property</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ElementGetTableRowsCount(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Get table total or visible rows count
            </summary>
            <param name="tableLocator">Table Locator</param>
            <param name="tableIndex">Table Locator Index</param>
            <param name="visible">Only visible</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ElementGetTableRowsCount(System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Get table total or visible rows count
            </summary>
            <param name="zone">Select Zone</param>
            <param name="tableLocator">Select Table Locator</param>
            <param name="tableIndex">Table Locator Index</param>
            <param name="visible">Only visible</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ElementGetTableValue(System.String,System.String,System.Int32,System.String)">
            <summary>
            Get table cell value
            </summary>
            <param name="rowLocator">Row Locator</param>
            <param name="rowLocatorIndex">Row Locator Index</param>
            <param name="columnLocator">Column Locator</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ElementGetText(System.String,System.String,System.String,System.Int32)">
            <summary>
            Get text from element
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ElementListPick(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Select an element in a list (first make the element visible)
            </summary>
            <param name="listZone">Select List Zone</param>
            <param name="listLocator">List locator</param>
            <param name="elementZone">Select Element Zone</param>
            <param name="elementLocator">Element locator</param>
            <param name="index">Element index</param>
            <param name="click">If TRUE then click</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ElementListSelect(System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Select an element in a list (first make the element visible)
            </summary>
            <param name="listLocator">List locator</param>
            <param name="elementLocator">Element locator</param>
            <param name="index">Element index</param>
            <param name="click">If TRUE then click</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ElementListVisible(System.String,System.String,System.String,System.Int32)">
            <summary>
            Make the target element visible
            </summary>
            <param name="listLocator">List locator</param>
            <param name="elementLocator">Element locator</param>
            <param name="index">Element index</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ElementScrollToTableRow(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Scroll table / list to the given row
            </summary>
            <param name="tableLocator">Table Locator</param>
            <param name="tableIndex">Table Locator Index</param>
            <param name="rowIndex">Row Index</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ElementScrollToTableRow(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Scroll table / list to the given row
            </summary>
            <param name="zone">Select Zone</param>
            <param name="tableLocator">Select Table Locator</param>
            <param name="tableIndex">Table Locator Index</param>
            <param name="rowIndex">Row Index</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ElementSendText(System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Send text to an element
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="text">Text to Send</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ElementSetProperty(System.String,System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Set element property
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="property">Property</param>
            <param name="value">The value to set</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ElementSwipe(System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Swipe the screen in a given direction
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to swipe</param>
            <param name="offset">Swipe offset</param>
            <param name="time">Swipe overall time</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ElementSwipeWhileNotFound(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Swipe a component to search for an element or text.<br/>
            
            </summary>
            <param name="componentZone">Zone of the container element;</param>
            <param name="componentElement">The container element;</param>
            <param name="direction">Direction to swipe;</param>
            <param name="offset">Swipe offset;</param>
            <param name="swipeTime">Swipe operation time;</param>
            <param name="elementfindzone">Select Zone of the sought element;</param>
            <param name="elementtofind">Select element to find from the drop-down list OR (for OCR text identification) insert text into the empty box in the drop-down list;</param>
            <param name="elementtofindindex">The sought element's index (i.e., the number of times the element appears after the first appearance minus two). Index=0 refers to the first appearance of the element; Index=1 refers to the second appearance of the element, etc.</param>
            <param name="delay">Time to wait before sending a command (in milliseconds);</param>
            <param name="rounds">Maximum swipe rounds;</param>
            <param name="click">Click the found element if TRUE.</param>
        </member>
        <member name="M:experitestClient.ClientRpc.EndTransaction(System.String,System.String)">
            <summary>
            End measuring transaction duration<br/>
            
            </summary>
            <param name="name">Name of the transaction</param>
        </member>
        <member name="M:experitestClient.ClientRpc.Exit(System.String)">
            <summary>
            Exit SeeTest.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.ExtractLanguageFiles(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Extracts the language files of an application to the specified directory
            </summary>
            <param name="application">Language files source application</param>
            <param name="directoryPath">Directory's full path where to extract the language files</param>
            <param name="allowOverwrite">Whether to allow overwriting existing langauge files in directory</param>
        </member>
        <member name="M:experitestClient.ClientRpc.FindElements(System.String,System.String,System.String,System.String,System.String)">
            <param name="zone">zone of the element (NATIVE / WEB)</param>
            <param name="parent">full xpath of parent (empty string / return of previous call)</param>
            <param name="by">currently only xpath supported</param>
            <param name="value">full xpath of the element to search</param>
        </member>
        <member name="M:experitestClient.ClientRpc.Flick(System.String,System.String,System.Int32)">
            <summary>
            Flick the screen in a given direction
            </summary>
            <param name="direction">Direction to flick</param>
            <param name="offset">Flick offset</param>
        </member>
        <member name="M:experitestClient.ClientRpc.FlickCoordinate(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Flick from a given point in a given direction
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="direction">Direction to flick</param>
        </member>
        <member name="M:experitestClient.ClientRpc.FlickElement(System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Flick the element in a given direction
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
            <param name="direction">Direction to flick</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ForceTouch(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Force touch on element and drag for distance.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
            <param name="duration">Duration</param>
            <param name="force">Force level in percent</param>
            <param name="dragDistanceX">Horizontal distance of drag from Element</param>
            <param name="dragDistanceY">Vertical distance of drag from Element</param>
            <param name="dragDuration">Drag Duration</param>
        </member>
        <member name="M:experitestClient.ClientRpc.GenerateReport(System.String)">
            <summary>
            Generates a SeeTest report.<br/>
            
            </summary>
            <returns>returns the report's folder path</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.GenerateReport(System.String,System.Boolean)">
            <summary>
            Generates a SeeTest report.<br/>
            
            </summary>
            <param name="releaseClient">If FALSE then device will not be released</param>
            <returns>returns the report's folder path</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.GenerateReport(System.String,System.Boolean,System.String)">
            <summary>
            Generates a SeeTest report and attach it to external tool entity.<br/>
            Suply a path to java properties file containning the data for the entity update.<br/>
            See documentation online for details.<br/>
            
            </summary>
            <param name="releaseClient">If FALSE then device will not be released</param>
            <param name="propFilePath">path to Java properties file</param>
            <returns>returns the report's folder path, or the created entity if exists</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.GetAllSms(System.String,System.Int32)">
            <summary>
            Get all  SMS or wait up to 'timeout' milliseconds.
            </summary>
            <param name="timeout">Wait timeout</param>
        </member>
        <member name="M:experitestClient.ClientRpc.GetAllValues(System.String,System.String,System.String,System.String)">
            <summary>
            Get all the values of a property in a given element. Note: Supported properties are available on Object spy. 
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="property">Property</param>
        </member>
        <member name="M:experitestClient.ClientRpc.GetAllZonesWithElement(System.String,System.String)">
            <summary>
            Get all the zones names that has an element with the given name.
            </summary>
            <param name="element">the element name to search for</param>
            <returns>comma delimited string with the zones names</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.GetAvailableAgentPort(System.String)">
            <summary>
            Get available Agent Port.<br/>
            Get a port number where a SeeTest agent listens.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.GetAvailableAgentPort(System.String,System.String)">
            <summary>
            Get available Agent Port.<br/>
            Get a port number of a SeeTest agent supporting (licensed to) the given<br/>
            device type.<br/>
            
            </summary>
            <param name="featureName">A device type that is supported by the requested agent. One of ANDROID, IPHONE, BLACKBERRY or WINDOWS_PHONE.</param>
        </member>
        <member name="M:experitestClient.ClientRpc.GetConnectedDevices(System.String)">
            <summary>
            Get connected devices.
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.GetCoordinateColor(System.String,System.Int32,System.Int32)">
            <summary>
            Returns an integer representation in the RGB color model for coordinate (x,y) 
            </summary>
            <param name="x">the X coordinate of the target pixel</param>
            <param name="y">the Y coordinate of the target pixel</param>
        </member>
        <member name="M:experitestClient.ClientRpc.GetCounter(System.String,System.String)">
            <summary>
            Get monitor counter value
            </summary>
            <param name="counterName">Counter name (cpu, memory...)</param>
        </member>
        <member name="M:experitestClient.ClientRpc.GetCurrentApplicationName(System.String)">
            <summary>
            Get the name of application that is running in the foreground of the device
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.GetDefaultTimeout(System.String)">
            <summary>
            Gets the default timeout.
            </summary>
            <returns>the default timeout</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.GetDeviceLog(System.String)">
            <summary>
            Download device log to reports directory
            </summary>
            <returns>path to the file that was downloaded</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.GetDeviceProperty(System.String,System.String)">
            <summary>
                        Get device property value for the given key.<br/>
                    
            </summary>
            <param name="key">device_property</param>
            <returns>The property value</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.GetDevicesInformation(System.String)">
            <summary>
            Get an XML formated string containing all the devices information
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.GetElementCount(System.String,System.String,System.String)">
            <summary>
            Count the number of times an element is been found in the current screen.
            </summary>
            <param name="zone">the element zone</param>
            <param name="element">the element name</param>
            <returns>the number of times the elment was identified</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.GetElementCountIn(System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Search for an element and count the number of times an element is found near him.The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zoneName">Select Zone</param>
            <param name="elementSearch">Element Search</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="elementCountZone">Select Zone</param>
            <param name="elementCount">Element to count</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.ClientRpc.GetInstalledApplications(System.String)">
            <summary>
            Get a string containing all installed application on the device
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.GetLastSMS(System.String,System.Int32)">
            <summary>
            Get last received SMS or wait up to 'timeout' milliseconds to receive one.
            </summary>
            <param name="timeout">Wait timeout</param>
        </member>
        <member name="M:experitestClient.ClientRpc.GetMonitorsData(System.String,System.String)">
            <summary>
            Returns a CSV format of the running monitors (CPU/Memomy) for all<br/>
                  devices<br/>
                
            </summary>
            <param name="cSVfilepath">If set will save the CSV in the given location (should be absolute path), if not set will use a default location.</param>
        </member>
        <member name="M:experitestClient.ClientRpc.GetPickerValues(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Get all values from picker, works only on iOS
            </summary>
            <param name="zone">Select Zone</param>
            <param name="pickerElement">Select Picker Element</param>
            <param name="index">Picker index</param>
            <param name="wheelIndex">Wheel index at picker component</param>
        </member>
        <member name="M:experitestClient.ClientRpc.GetPosition(System.String,System.String,System.String)">
            <summary>
            Gets position an position. The position is absolute.<br/>
            
            </summary>
            <param name="zone">the element zone</param>
            <param name="element">Select Element to Get Position For</param>
            <returns>the comma delimited string with the X,Y of the element coordination.</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.GetPositionWindowRelative(System.String,System.String,System.String)">
            <summary>
            Get the element position relative to the window (and not the screen absolute coordinates)
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element to Get Position For</param>
            <returns>the comma delimited string with the X,Y of the element coordination.</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.GetProperty(System.String,System.String)">
            <summary>
            Get SeeTest's property value for the given key (in %appdata%\seetest\app.properties file).<br/>
            
            </summary>
            <param name="property">The property key.</param>
            <returns>the property value</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.GetSimCard(System.String)">
            <summary>
            Get sim-card name assigned to the currently used device
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.GetSimCards(System.String,System.Boolean)">
            <summary>
            Get list of sim-card names which are either ready to use or already assigned (depeand on the argument) to the currently used device
            </summary>
            <param name="readyToUse">If TRUE return all available sim cards which are ready to use. If FALSE return all sim cards assigned for the device</param>
        </member>
        <member name="M:experitestClient.ClientRpc.GetTableCellText(System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get text content of table cell by its header element and row element.
            </summary>
            <param name="zone">Select zone</param>
            <param name="headerElement">Select table header element</param>
            <param name="headerIndex">Header element index</param>
            <param name="rowElement">Select table row element</param>
            <param name="rowIndex">Row element index</param>
            <param name="width">Width of the search</param>
            <param name="height">Height of the search</param>
        </member>
        <member name="M:experitestClient.ClientRpc.GetText(System.String,System.String)">
            <summary>
            Gets the text that appears in a specified zone.<br/>
            
            </summary>
            <param name="zone">Select the Zone to Get Text From, 'TEXT' and 'NATIVE' can be used as well.</param>
            <returns>the text</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.GetTextIn(System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Get a text in a specified area indicate by an element, direction, width and height.<br/>
            The direction can be UP, DOWN, LEFT and RIGHT.<br/>
            Use this method to get the text found in an area related to a given element.<br/>
            When using zone NATIVE, only leafs elements will be searched in order to prevent multiple<br/>
            occurrences of the same text (containers can include the sub elements text too).<br/>
            
            </summary>
            <param name="zone">Anchor Zone</param>
            <param name="element">Anchor Element</param>
            <param name="index">Anchor Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.ClientRpc.GetTextIn(System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Get a text in a specified area indicate by an element,direction, width and height. The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="textZone">The zone to extract the text from</param>
            <param name="direction">Direction to analyze</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.ClientRpc.GetTextIn(System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get the text in a specific area relative to an element, index, direction, width and height. Direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="textZone">The zone to extract the text from</param>
            <param name="direction">Direction to analyze</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
            <param name="xOffset">identification rectangle x offset</param>
            <param name="yOffset">identification rectangle y offset</param>
        </member>
        <member name="M:experitestClient.ClientRpc.GetVisualDump(System.String,System.String)">
            <summary>
            Get visual dump
            </summary>
            <param name="type">Set the dump type</param>
        </member>
        <member name="M:experitestClient.ClientRpc.HybridClearCache(System.String,System.Boolean,System.Boolean)">
            <summary>
            Clear browser cookies and/or cache
            </summary>
            <param name="clearCookies">If true cookies will be cleared</param>
            <param name="clearCache">If true cache will be cleared</param>
        </member>
        <member name="M:experitestClient.ClientRpc.HybridGetHtml(System.String,System.String,System.Int32)">
            <summary>
            Get HTML content from a webView element
            </summary>
            <param name="webViewLocator">WebView locator string like id=web or empty for the first WebView in page</param>
            <param name="index">Element index</param>
        </member>
        <member name="M:experitestClient.ClientRpc.HybridRunJavascript(System.String,System.String,System.Int32,System.String)">
            <summary>
            Run Javascript in a WebView.
            </summary>
            <param name="webViewLocator">WebView locator string like id=web or empty for the first WebView in page</param>
            <param name="index">Element index</param>
            <param name="script">Javascript</param>
        </member>
        <member name="M:experitestClient.ClientRpc.HybridSelect(System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Select an option from a select element in a WebView. Using the input method and value to identify the element
            </summary>
            <param name="webViewLocator">WebView locator string like id=web or empty for the first WebView in page</param>
            <param name="index">Element index</param>
            <param name="method">Identification method (css/id)</param>
            <param name="value">Identification value</param>
            <param name="select">Option to select</param>
        </member>
        <member name="M:experitestClient.ClientRpc.HybridWaitForPageLoad(System.String,System.Int32)">
            <summary>
            Wait for web page to load
            </summary>
            <param name="timeout">Waiting Timeout in MiliSec</param>
        </member>
        <member name="M:experitestClient.ClientRpc.Install(System.String,System.String,System.Boolean)">
            <summary>
            Install the application in the given path on the device
            </summary>
            <param name="path">can be an APK/IPA etc. absolute path or an activity name from the application manager.</param>
            <param name="sign">If set to TRUE will sign the application (if not already signed)</param>
            <returns>installation success</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.Install(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Install the application in the given path on the device
            </summary>
            <param name="path">can be an APK/IPA etc. absolute path or an activity name from the application manager.</param>
            <param name="instrument">If set to TRUE will sign the application (if not already instrumented)</param>
            <param name="keepData">If set to TRUE will keep application data</param>
            <returns>installation success</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.IsElementBlank(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Check if a given element found in the specified zone is blank; if blank returns TRUE if not found returns FALSE
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Element to find</param>
            <param name="index">Element index</param>
            <param name="colorGroups">The number of color groups that indicate an image</param>
        </member>
        <member name="M:experitestClient.ClientRpc.IsElementFound(System.String,System.String,System.String)">
            <summary>
            Check if a given element is found in the specified zone; if the element found returns TRUE if not found returns FALSE
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Element to find</param>
        </member>
        <member name="M:experitestClient.ClientRpc.IsElementFound(System.String,System.String,System.String,System.Int32)">
            <summary>
            Check if a given element is found in the specified zone; if found returns TRUE if not found returns FALSE
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Element to find</param>
            <param name="index">Element index</param>
        </member>
        <member name="M:experitestClient.ClientRpc.IsFoundIn(System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Search for an element and check if an element related to it exist. The direction can be UP, DOWN, LEFT and RIGHT.
            </summary>
            <param name="zone">Select Zone</param>
            <param name="searchElement">Search Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="elementFindZone">Find Element Zone</param>
            <param name="elementToFind">Element to Find</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.ClientRpc.IsTextFound(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Check if a given text is found in the specified zone; if the element found returns TRUE if not found returns FALSE
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Element to find</param>
            <param name="ignoreCase">should command case sensitivity</param>
        </member>
        <member name="M:experitestClient.ClientRpc.Launch(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Launch activity
            </summary>
            <param name="activityURL">The application main activity or URL</param>
            <param name="instrument">If set to true then will launch in instrument mode</param>
            <param name="stopIfRunning">If set to true then will stop the running process before launching it</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ListSelect(System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Select an element from a list. Used for non-touch devices like blackberry.<br/>
            
            </summary>
            <param name="sendRest">Navigate to the list start</param>
            <param name="sendNavigation">Send to navigate in the list</param>
            <param name="delay">Time to wait before sending a command (in MiliSec)</param>
            <param name="textToIdentify">Select text to Find</param>
            <param name="color">Color to filter</param>
            <param name="rounds">Maximum navigation rounds</param>
            <param name="sendonfind">Send on text find</param>
            <returns>true if element was found</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.LongClick(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Long click on or near to an element (the proximity to the element is specified by a X-Y offset).<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
            <param name="clickCount">Number of Clicks</param>
            <param name="x">Horizontal Offset from Element</param>
            <param name="y">Vertical Offset from Element</param>
        </member>
        <member name="M:experitestClient.ClientRpc.Maximize(System.String)">
            <summary>
            Maximize the working window
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.MultiClick(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Click on an element with a finger.<br/>
            Note: element will be identified right before performing the gesutre
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.ClientRpc.MultiClickCoordinate(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Click with a finger on given coordinate
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.ClientRpc.MultiClickOffset(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Click with a finger near an element, in given offset form the element.<br/>
            Note: element will be identified right before performing the gesutre
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.ClientRpc.MultiSwipe(System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Swipe the screen in a given direction
            </summary>
            <param name="direction">Swipe direction</param>
            <param name="offset">Swipe offset</param>
            <param name="time">Swipe overall time</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.ClientRpc.MultiTouchDown(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Hold a finger Touched down on an element. Release with MultiTouchUp command.<br/>
            Note: element will be identified right before performing the gesture
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.ClientRpc.MultiTouchDownCoordinate(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Hold a finger Touched down on a given coordinate
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.ClientRpc.MultiTouchMove(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Gesture-move a finger to the element, from the last coordinate touched down or moved to.<br/>
            Note: element will be identified right before performing the gesutre
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element index</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.ClientRpc.MultiTouchMoveCoordinate(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Move a finger to the given coordinate, from the last coordinate touched down or moved to.
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.ClientRpc.MultiTouchUp(System.String,System.Int32)">
            <summary>
            Touch up with a finger, from the last coordinate touched down or moved to
            </summary>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.ClientRpc.MultiWait(System.String,System.Int32,System.Int32)">
            <summary>
            Wait with a finger in the last touch point, for the given time
            </summary>
            <param name="time">Wait time</param>
            <param name="fingerIndex">Finger index</param>
        </member>
        <member name="M:experitestClient.ClientRpc.OpenDevice(System.String)">
            <summary>
            Opens current device's screen.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.P2cx(System.String,System.Int32)">
            <summary>
            Convert percentage into pixel.
            </summary>
            <param name="percentage">Screen Percentage</param>
        </member>
        <member name="M:experitestClient.ClientRpc.P2cy(System.String,System.Int32)">
            <summary>
            Convert percentage into pixel.
            </summary>
            <param name="percentage">Screen Percentage</param>
        </member>
        <member name="M:experitestClient.ClientRpc.PerformMultiGesture(System.String)">
            <summary>
            Perform the multi-touch gesture steps which were added after the last StartMultiGestureStep command
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.Pinch(System.String,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            Pinch In/Out at X,Y in specific radius, if X and Y equal to 0, the pinch will be performed from the center of the screen. In most cases, pinching IN would be used to ZOOM OUT, and pinching OUT would be used to ZOOM IN.
            </summary>
            <param name="inside">Set 'true' to pinch in (zoom out), 'false' to pinch out (zoom in) </param>
            <param name="x">X center</param>
            <param name="y">Y center</param>
            <param name="radius">The pinch radius</param>
        </member>
        <member name="M:experitestClient.ClientRpc.Pinch(System.String,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Pinch In/Out at X,Y in specific radius, if X and Y equal to 0, the pinch will be performed from the center of the screen. In most cases, pinching IN would be used to ZOOM OUT, and pinching OUT would be used to ZOOM IN.<br/>
            
            </summary>
            <param name="inside">Set 'true' to pinch in (zoom out), 'false' to pinch out (zoom in) </param>
            <param name="x">X center</param>
            <param name="y">Y center</param>
            <param name="radius">The pinch radius</param>
            <param name="horizontal">Vertical / horizontal pinch</param>
        </member>
        <member name="M:experitestClient.ClientRpc.PortForward(System.String,System.Int32,System.Int32)">
            <summary>
            Forward an agent port
            </summary>
            <param name="localPort">The local port</param>
            <param name="remotePort">The remote port</param>
            <returns>the remote port assigned</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.PressWhileNotFound(System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Press on a certain element (ElementToClick) while another element (ElementToFind)is not found.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="elementtoclick">Select Element To Click</param>
            <param name="elementtofind">Select Element To Find</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
            <param name="delay">Time to wait before clicking on the ElementToClick (in MiliSec)</param>
        </member>
        <member name="M:experitestClient.ClientRpc.PressWhileNotFound(System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Press on a certain element (ElementToClick) while another element (ElementToFind)is not found.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="elementtoclick">Select Element To Click</param>
            <param name="elementtoclickindex">Element To Click Index</param>
            <param name="elementtofind">Select Element To Find</param>
            <param name="elementtofindindex">Element To Find Index</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
            <param name="delay">Time to wait before clicking on the ElementToClick (in MiliSec)</param>
        </member>
        <member name="M:experitestClient.ClientRpc.Reboot(System.String,System.Int32)">
            <summary>
            Will reboot the device
            </summary>
            <param name="timeout">Timeout waiting for the device to reboot. Minimum value is 40000.</param>
            <returns>have device already been rebooted within given timeout</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.ReleaseClient(System.String)">
            <summary>
            Release Controller.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.ReleaseDevice(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Release device as well as the agent assigned to it. It will enable other tests that are waiting to be executed to start doing so.
            </summary>
            <param name="deviceName">Name of the device to release</param>
            <param name="releaseAgent">Deprecated. If TRUE or FALSE then agent will be released</param>
            <param name="removeFromDeviceList">If TRUE then the device will be remove from the device list</param>
            <param name="releaseFromCloud">If TRUE then the device will be released from the cloud</param>
        </member>
        <member name="M:experitestClient.ClientRpc.Report(System.String,System.String,System.Boolean)">
            <summary>
            Add a step with a custom message to the test report.<br/>
            
            </summary>
            <param name="message">The message to report.</param>
            <param name="status">TRUE marks this step as successfully passed, FALSE marks it as failed.</param>
        </member>
        <member name="M:experitestClient.ClientRpc.Report(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Add a step with a custom message and image to the test report.<br/>
            
            </summary>
            <param name="pathToImage">Pass to the image, can be either a local full path or a URL.</param>
            <param name="message">The message to report.</param>
            <param name="status">TRUE marks this step as successfully passed, FALSE marks it as failed.</param>
        </member>
        <member name="M:experitestClient.ClientRpc.ResetDeviceBridge(System.String)">
            <summary>
            Reset Device Bridge.
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.ResetDeviceBridge(System.String,System.String)">
            <summary>
            Reset Device Bridge.
            </summary>
            <param name="deviceType">A device type that is supported by the requested agent</param>
        </member>
        <member name="M:experitestClient.ClientRpc.RightClick(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Right-click on or near to an element (the proximity to the element is specified by a X-Y offset)
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
            <param name="clickCount">Number of Clicks</param>
            <param name="x">Horizontal Offset from Element</param>
            <param name="y">Vertical Offset from Element</param>
        </member>
        <member name="M:experitestClient.ClientRpc.Run(System.String,System.String)">
            <summary>
            Run the given command line as shell command on the device (adb for android and SSH for iOS).<br/>
            When running an executable a full pathshould be given.<br/>
            
            </summary>
            <param name="command">The command to run</param>
        </member>
        <member name="M:experitestClient.ClientRpc.RunLayoutTest(System.String,System.String)">
            <summary>
            Run a layout test
            </summary>
            <param name="xml">the xml of the layout tests</param>
        </member>
        <member name="M:experitestClient.ClientRpc.RunNativeAPICall(System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Run native API call on the given element. 
            </summary>
            <param name="zone">Select Zone (should be NATIVE)</param>
            <param name="element">Select Element (should use xpath)</param>
            <param name="index">Element index</param>
            <param name="script">Script to execute</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SendText(System.String,System.String)">
            <summary>
            Sends/inserts text to the application. Supports the following keyboard actions as well: {ENTER}, {BKSP}. Device actions can now be found under DeviceAction command.<br/>
            
            </summary>
            <param name="text">Text to send</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SendWhileNotFound(System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Send a given text while an element is not found
            </summary>
            <param name="toSend">Insert Text To Send</param>
            <param name="zone">Select Zone</param>
            <param name="elementtofind">Select Element to Find</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
            <param name="delay">Time to wait before sending a command (in MiliSec)</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SendWhileNotFound(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Send a given text while an element is not found
            </summary>
            <param name="toSend">Insert Text To Send</param>
            <param name="zone">Select Zone</param>
            <param name="elementtofind">Select Element to Find</param>
            <param name="elementtofindindex">Element to Find Index</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
            <param name="delay">Time to wait before sending a command (in MiliSec)</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetApplicationTitle(System.String,System.String)">
            <summary>
            Sets the application title.<br/>
             Switch tested application/window.<br/>
             The title of the application is searched in the following order:<br/>
             1. search for windows with the given window ID (only if the title is a number).<br/>
             2. search for complete match.<br/>
             3. search for partial match (contains).<br/>
             4. Regular expression match.<br/>
             When working on the desktop use the 'desktop' as the application title.<br/>
            
            </summary>
            <param name="title">Insert New Application/Window Title</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetAuthenticationReply(System.String,System.String,System.Int32)">
            <summary>
            Set the reply type for later authentication requests.<br/>
            See online documentation for details.<br/>
            
            </summary>
            <param name="reply">The reply type to mock</param>
            <param name="delay">Delay after request in ms</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetDefaultClickDownTime(System.String,System.Int32)">
            <summary>
            Set the default click down time in milliseconds (default is 100)
            </summary>
            <param name="downTime">Click down time value</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetDefaultTimeout(System.String,System.Int32)">
            <summary>
            Set the default timeout for click commands
            </summary>
            <param name="newTimeout">Waiting Timeout in MiliSec</param>
            <returns>the new timeout</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.SetDefaultWebView(System.String,System.String)">
            <summary>
            Set the WebView to work with
            </summary>
            <param name="webViewLocator">The locator of the WebView, empty to reset</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetDevice(System.String,System.String)">
            <summary>
            Sets the device.<br/>
            
            </summary>
            <param name="device">Device name</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetDragStartDelay(System.String,System.Int32)">
            <summary>
            Drag called after setting dragStartDelay will begin by long touch on the device in<br/>
            the initial drag location.<br/>
            
            </summary>
            <param name="delay">Delay value</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetInKeyDelay(System.String,System.Int32)">
            <summary>
            Set the time between key down and key up
            </summary>
            <param name="delay">Delay value</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetKeyToKeyDelay(System.String,System.Int32)">
            <summary>
            Set the time between two key press
            </summary>
            <param name="delay">Delay value</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetLanguage(System.String,System.String)">
            <summary>
            Set the OCR language
            </summary>
            <param name="language">The language to use or empty to reset to English</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetLanguagePropertiesFile(System.String,System.String)">
            <summary>
            Set language properties file
            </summary>
            <param name="propertiesfile">The language properties file path</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetLocation(System.String,System.String,System.String)">
            <summary>
            Sets device's location to specified coordinate. Currently supported only on android
            </summary>
            <param name="latitude">Latitude in decimal degrees from -90 to 90. Positive latitudes are north of the equator and negative latitudes are south of the equator.</param>
            <param name="longitude">Longitude in decimal degrees from -180 to 180. Positive longitudes are east of the Prime Meridian and negative longitudes are west of the Prime Meridian</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetMonitorPollingInterval(System.String,System.Int32)">
            <summary>
            Set monitor polling interval
            </summary>
            <param name="timemilli">The monitor polling time interval in milliseconds</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetMonitorTestState(System.String,System.String)">
            <summary>
            Set the test status to the monitors
            </summary>
            <param name="testStatus">Set the current status of the test to be used by the monitors</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetNetworkConditions(System.String,System.String)">
            <summary>
            Set profile for current device. To cancel profile leave the profile name empty
            </summary>
            <param name="profile">Set the profile to be used</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetNetworkConditions(System.String,System.String,System.Int32)">
            <summary>
            Set profile for current device for a specified duration. To cancel profile leave the profile name empty
            </summary>
            <param name="profile">Set the profile to be used</param>
            <param name="duration">Set the duration in milliseconds to which to set the profile (0=forever)</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetOcrIgnoreCase(System.String,System.Boolean)">
            <summary>
            Set the ignore case status (default is true).<br/>
            
            </summary>
            <param name="ignoreCase">should OCR avoid case sensitivity</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetOcrTrainingFilePath(System.String,System.String)">
            <param name="trainingPath">path to the OCR training file</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetPickerValues(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Set the values of the Picker element
            </summary>
            <param name="zoneName">Select Zone</param>
            <param name="elementName">Select Element</param>
            <param name="index">Element index</param>
            <param name="wheelIndex">Wheel Index</param>
            <param name="value">The value to set</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetProjectBaseDirectory(System.String,System.String)">
            <summary>
            Sets the project base directory.<br/>
            This method should be called first,before any other called is used.<br/>
            In case of working on a remote agent, the project path should be the path on the remote machine.<br/>
            
            </summary>
            <param name="projectBaseDirectory">the new project base directory.</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetProperty(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="key">key</param>
            <param name="value">Value</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetRedToBlue(System.String,System.Boolean)">
            <param name="redToBlue"></param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetReporter(System.String,System.String,System.String)">
            <summary>
            Sets the reporter. Configure the internal reporter.<br/>
            
            </summary>
            <param name="reporterName">Comma seperated value string of reporter types. Supported types: html(=xml), pdf.</param>
            <param name="directory">The directory for the report to be generated in.</param>
            <returns>The reports directory path</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.SetReporter(System.String,System.String,System.String,System.String)">
            <summary>
            Sets the reporter. Configure the internal reporter.<br/>
            
            </summary>
            <param name="reporterName">Comma seperated value string of reporter types. Supported types: html(=xml), pdf.</param>
            <param name="directory">The directory for the report to be generated in.</param>
            <param name="testName">The name of the test as would appear in the report.</param>
            <returns>The reports directory path</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.SetShowImageAsLink(System.String,System.Boolean)">
            <summary>
            Show report images as link.<br/>
            
            </summary>
            <param name="showImageAsLink">show report images as link</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetShowImageInReport(System.String,System.Boolean)">
            <summary>
            Decide whether to include step screenshots in report.<br/>
            
            </summary>
            <param name="showImageInReport">when set to False will not show any screenshot in report</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetShowPassImageInReport(System.String,System.Boolean)">
            <summary>
            Decide whether to show screenshots of every step, or only failed steps in report.<br/>
            
            </summary>
            <param name="showPassImageInReport">when set to False will not show a screenshot of test steps that passed successfully</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetShowReport(System.String,System.Boolean)">
            <summary>
            when set to False will not show reports steps.<br/>
            
            </summary>
            <param name="showReport">when set to False will not show reports steps</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetSimCard(System.String,System.String)">
            <summary>
            Load or unload sim card (to unlaod sim-card name is equal to null) to the currently used device
            </summary>
            <param name="simCardName">the sim-card name, null to unload sim card form the device</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetSpeed(System.String,System.String)">
            <param name="speed"></param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetWebAutoScroll(System.String,System.Boolean)">
            <summary>
            Set web autoscroll
            </summary>
            <param name="autoScroll">Set the autoscroll state</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SetWindowSize(System.String,System.Int32,System.Int32)">
            <summary>
            Set the active windows size and movie it to be fully visible.<br/>
            
            </summary>
            <param name="width">Window width</param>
            <param name="height">Window height</param>
        </member>
        <member name="M:experitestClient.ClientRpc.Shake(System.String)">
            <summary>
            Simulating Shake operation on the device.
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.SimulateCapture(System.String,System.String)">
            <summary>
            SimulateCapture
            </summary>
            <param name="picturePath">picture's full path</param>
        </member>
        <member name="M:experitestClient.ClientRpc.Sleep(System.String,System.Int32)">
            <summary>
            Pause the script for a specified time.<br/>
            
            </summary>
            <param name="time">The time to pause in MiliSec</param>
        </member>
        <member name="M:experitestClient.ClientRpc.StartAudioPlay(System.String,System.String)">
            <summary>
            Start play audio file
            </summary>
            <param name="audioFile">Set the audio file to start playing</param>
        </member>
        <member name="M:experitestClient.ClientRpc.StartAudioRecording(System.String,System.String)">
            <summary>
            Start record audio file
            </summary>
            <param name="audioFile">Set the audio file name</param>
        </member>
        <member name="M:experitestClient.ClientRpc.StartCall(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Generate a phone call using Skype infrastructure
            </summary>
            <param name="skypeUser">Skype user</param>
            <param name="skypePassword">Skype password</param>
            <param name="number">Number to call include country code</param>
            <param name="duration">Call duration (0 is infinite or until EndCall)</param>
        </member>
        <member name="M:experitestClient.ClientRpc.StartLoggingDevice(System.String,System.String)">
            <summary>
            Start writing the current device's log to file
            </summary>
            <param name="path">Absolute path to log file, or where the log file should be created</param>
        </member>
        <member name="M:experitestClient.ClientRpc.StartMonitor(System.String,System.String)">
            <summary>
            Clear monitoring collection data collected so far. If packageName is not empty, the application identified by this packageName will start being monitored.<br/>
                
            </summary>
            <param name="packageName">Package name (Android) or Bundle ID (iOS) of application</param>
        </member>
        <member name="M:experitestClient.ClientRpc.StartMultiGesture(System.String,System.String)">
            <summary>
            Start a group of multi-touch gesture steps.<br/>
            Note: all steps will be performed only when executing the PerformMultiGestureStep command.<br/>
            See online documentation for details
            </summary>
            <param name="name">Gesture name</param>
        </member>
        <member name="M:experitestClient.ClientRpc.StartStepsGroup(System.String,System.String)">
            <summary>
            Start grouping steps<br/>
            
            </summary>
            <param name="caption">The group's caption which will appear at the report</param>
        </member>
        <member name="M:experitestClient.ClientRpc.StartTransaction(System.String,System.String)">
            <summary>
            Start to measure transaction duration<br/>
            
            </summary>
            <param name="name">Name of the transaction</param>
        </member>
        <member name="M:experitestClient.ClientRpc.StartVideoRecord(System.String)">
            <summary>
            Start the video recording.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.StopAudioPlay(System.String)">
            <summary>
            Stop audio playing
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.StopAudioRecording(System.String)">
            <summary>
            Stop audio recording
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.StopLoggingDevice(System.String)">
            <summary>
            Stop writing the current device's log to file
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.StopStepsGroup(System.String)">
            <summary>
            Stop grouping steps<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.StopVideoRecord(System.String)">
            <summary>
            Stop the video recording.<br/>
            
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.Swipe(System.String,System.String,System.Int32)">
            <summary>
            Swipe the screen in a given direction
            </summary>
            <param name="direction">Direction to swipe</param>
            <param name="offset">Swipe offset</param>
        </member>
        <member name="M:experitestClient.ClientRpc.Swipe(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Swipe the screen in a given direction
            </summary>
            <param name="direction">Direction to swipe</param>
            <param name="offset">Swipe offset</param>
            <param name="time">Swipe overall time</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SwipeWhileNotFound(System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Swipe a list to identify an element<br/>
            
            </summary>
            <param name="direction">Direction to swipe</param>
            <param name="offset">Swipe offset</param>
            <param name="zone">Select Zone</param>
            <param name="elementtofind">Select Element to Find</param>
            <param name="delay">Time to wait before sending a command (in MiliSec)</param>
            <param name="rounds">Maximum swipe rounds</param>
            <param name="click">If TRUE then click</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SwipeWhileNotFound(System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Swipe a list to identify an element<br/>
            
            </summary>
            <param name="direction">Direction to swipe</param>
            <param name="offset">Swipe offset</param>
            <param name="swipeTime">Swipe operation time</param>
            <param name="zone">Select Zone</param>
            <param name="elementtofind">Select Element to Find</param>
            <param name="delay">Time to wait before sending a command (in MiliSec)</param>
            <param name="rounds">Maximum swipe rounds</param>
            <param name="click">If TRUE then click</param>
        </member>
        <member name="M:experitestClient.ClientRpc.SwipeWhileNotFound(System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Swipe a list to identify an element<br/>
            
            </summary>
            <param name="direction">Direction to swipe</param>
            <param name="offset">Swipe offset</param>
            <param name="swipeTime">Swipe operation time</param>
            <param name="zone">Select Zone</param>
            <param name="elementtofind">Select Element to Find</param>
            <param name="elementtofindindex">Element to Find Index</param>
            <param name="delay">Time to wait before sending a command (in MiliSec)</param>
            <param name="rounds">Maximum swipe rounds</param>
            <param name="click">If TRUE then click</param>
        </member>
        <member name="M:experitestClient.ClientRpc.Sync(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Wait for the screen to be silent. Works on the graphical level of the screen.
            </summary>
            <param name="silentTime">The time for the screen to be silent in milliseconds</param>
            <param name="sensitivity">Sensitivity from 0 - 100 (0 is maximum sensitivity)</param>
            <param name="timeout">Waiting timeout in milliseconds</param>
            <returns>true if operation finished successfully</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.SyncElements(System.String,System.Int32,System.Int32)">
            <summary>
            Wait for all the UI elements on the page to appear. Works on the dump level - checks for changes in the UI dump.
            </summary>
            <param name="silentTime">The period of time for the UI elements to be static in milliseconds.</param>
            <param name="timeout">Waiting timeout in milliseconds</param>
            <returns>true if operation finished successfully</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.TextFilter(System.String,System.String,System.Int32)">
            <summary>
            Filter the text recognition text color for the next command.<br/>
            This setting will be applied on the next command only.<br/>
            It's only supported when you use text recognition (OCR).<br/>
            
            </summary>
            <param name="color">text color in RGB hex decimal string (0xFFFFFF for white).</param>
            <param name="sensitivity">Sensitivity from 0 - 100 (0 is no sensitivity)</param>
        </member>
        <member name="M:experitestClient.ClientRpc.TouchDown(System.String,System.String,System.String,System.Int32)">
            <summary>
            Hold Touch down on element, Release with TouchUp command.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
        </member>
        <member name="M:experitestClient.ClientRpc.TouchDownCoordinate(System.String,System.Int32,System.Int32)">
            <summary>
            Hold Touch down at X,Y coordinates related to the device screen, Release with TouchUp command.<br/>
            
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
        </member>
        <member name="M:experitestClient.ClientRpc.TouchMove(System.String,System.String,System.String,System.Int32)">
            <summary>
            Move from last Touched down element/coordinate to specified element location.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order</param>
        </member>
        <member name="M:experitestClient.ClientRpc.TouchMoveCoordinate(System.String,System.Int32,System.Int32)">
            <summary>
            Move from last Touched down element/coordinate to specified coordinate location.<br/>
            
            </summary>
            <param name="x">Horizontal coordinate</param>
            <param name="y">Vertical coordinate</param>
        </member>
        <member name="M:experitestClient.ClientRpc.TouchUp(System.String)">
            <summary>
            Touch Up from last coordinate touched down or moved to.
            </summary>
        </member>
        <member name="M:experitestClient.ClientRpc.Uninstall(System.String,System.String)">
            <summary>
            Uninstall the application
            </summary>
            <param name="application">The application name</param>
            <returns>uninstallation success</returns>
        </member>
        <member name="M:experitestClient.ClientRpc.VerifyElementFound(System.String,System.String,System.String,System.Int32)">
            <summary>
            Check if an element is found in a specified zone.<br/>
            An Exception (or Assertion) will be thrown if the element is not found.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order (=the number of times the element appears more and above the first time)</param>
        </member>
        <member name="M:experitestClient.ClientRpc.VerifyElementNotFound(System.String,System.String,System.String,System.Int32)">
            <summary>
            Check if an element is found in a specified zone.<br/>
            An Exception (or Assertion) will be thrown if the element is found.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element</param>
            <param name="index">Element Order (=the number of times the element appears more and above the first time)</param>
        </member>
        <member name="M:experitestClient.ClientRpc.VerifyIn(System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Verify that an element("elementToFind") is found near to another element("elementSearch").<br/>
            The direction can be UP, DOWN, LEFT and RIGHT.<br/>
            
            </summary>
            <param name="zone">Select Zone</param>
            <param name="searchElement">Search Element</param>
            <param name="index">Element index</param>
            <param name="direction">Direction to analyze</param>
            <param name="elementFindZone">Find Element Zone</param>
            <param name="elementToFind">Element to Find</param>
            <param name="width">Width of the search (0 indicate until the end/start of the window)</param>
            <param name="height">Height of the search (0 indicate until the end/start of the window)</param>
        </member>
        <member name="M:experitestClient.ClientRpc.WaitForAudioPlayEnd(System.String,System.Int32)">
            <summary>
            Wait for audio file play to end
            </summary>
            <param name="timeout">Set the timeout</param>
        </member>
        <member name="M:experitestClient.ClientRpc.WaitForElement(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Wait for an element to appear in a specified zone
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element to Wait For</param>
            <param name="index">Element Order</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
        </member>
        <member name="M:experitestClient.ClientRpc.WaitForElementToVanish(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Wait for an element to vanish
            </summary>
            <param name="zone">Select Zone</param>
            <param name="element">Select Element to Wait For</param>
            <param name="index">Element Order</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
        </member>
        <member name="M:experitestClient.ClientRpc.WaitForWindow(System.String,System.String,System.Int32)">
            <summary>
            Wait for a window
            </summary>
            <param name="name">Window name</param>
            <param name="timeout">Waiting Timeout in MiliSec</param>
        </member>
        <member name="T:experitestClient.WebDriver.MobileBy">
            <summary>
            
            </summary>
        </member>
        <member name="M:experitestClient.WebDriver.MobileBy.Repository(System.String,System.String)">
            <summary>
            Experitest's Repository identification.
            </summary>
            <param name="elementName">Name of the repository element</param>
            <param name="zone">Name of the repository zone to use. "default" by default.</param>
            <returns>MobileBy object</returns>
        </member>
        <member name="M:experitestClient.WebDriver.MobileBy.FindElement(OpenQA.Selenium.ISearchContext)">
            <summary>
            <see cref="M:OpenQA.Selenium.By.FindElement(OpenQA.Selenium.ISearchContext)"/>
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:experitestClient.WebDriver.MobileBy.FindElements(OpenQA.Selenium.ISearchContext)">
            <summary>
            <see cref="M:OpenQA.Selenium.By.FindElements(OpenQA.Selenium.ISearchContext)"/>
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:experitestClient.WebDriver.MobileApplication">
            <summary>
            
            </summary>
        </member>
        <member name="T:experitestClient.WebDriver.SeeTestCommon">
            <summary>
            
            </summary>
            [ComVisible(true)]
                [Guid("516E43F3-5086-4F24-A4CF-509E313C237C")]
                [ProgId("ExperiMobileDriver.SeeTestCommon")]*
        </member>
        <member name="T:experitestClient.WebDriver.MobileDevice">
            <summary>
            
            </summary>
        </member>
        <member name="T:experitestClient.WebDriver.MobileNavigation">
            <summary>
            
            </summary>
        </member>
        <member name="T:experitestClient.WebDriver.ExpReporting">
            <summary>
            
            </summary>
        </member>
        <member name="T:experitestClient.WebDriver.MobileWebDriver">
            <summary>
            
            </summary>
        </member>
        <member name="T:experitestClient.WebDriver.MobileWebElement">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
